{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note-list.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { CgNotes } from 'react-icons/cg';\nimport Divider from '@material-ui/core/Divider';\nimport NoteListItem from './note-list-item';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      margin: 'auto',\n      color: 'rgb(51,51,51)',\n      fontSize: '16px',\n      width: '100%'\n    },\n    title: {\n      padding: '10px 15px',\n      fontSize: '22px',\n      wordBreak: 'break-word'\n    },\n    noteCount: {\n      fontSize: '12px',\n      padding: '5px 15px',\n      color: 'rgb(107,107,107)'\n    },\n    date: {\n      fontSize: '10px',\n      paddingLeft: '10px'\n    },\n    listBox: {\n      overflowY: 'scroll'\n    },\n    empty: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: 'auto',\n      textAlign: 'center',\n      padding: '35px'\n    },\n    emptyIcon: {\n      fontSize: '75px'\n    },\n    newNoteText: {\n      cursor: 'pointer',\n      color: 'rgb(0,168,45)'\n    }\n  });\n});\nexport default function NoteList(props) {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n\n  var convertTitle = function convertTitle(title, length) {\n    return title.length > length ? title.substring(0, length) + '...' : title;\n  };\n\n  var noteCount = props.notebooks[props.notebook].notes.length;\n  var notebookTitle = props.notebooks[props.notebook].title;\n  var notebookUpdatedAt = props.notebooks[props.notebook].updatedAt;\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, convertTitle(notebookTitle, 15)), __jsx(\"div\", {\n    className: classes.noteCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"\".concat(noteCount, \" note\").concat(noteCount > 1 ? 's' : ''), __jsx(\"span\", {\n    className: classes.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, 'Last edited on ', props.formatDate(notebookUpdatedAt))), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), noteCount > 0 ? __jsx(\"div\", {\n    className: classes.listBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, props.notebooks[props.notebook].notes.map(function (note) {\n    return __jsx(\"div\", {\n      key: note.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, __jsx(NoteListItem, _extends({\n      note: note\n    }, props, {\n      convertTitle: convertTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    })), __jsx(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }));\n  })) : __jsx(\"div\", {\n    className: classes.empty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, props.notebook === 'trash' ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.emptyIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, __jsx(CgNotes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, \"It all begins with notes\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, \"Click the\", ' ', __jsx(\"span\", {\n    onClick: function onClick() {\n      return props.addNewNote();\n    },\n    className: classes.newNoteText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, \"+ New Note\"), ' ', \"button in the side bar to create note.\")) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.emptyIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, __jsx(CgNotes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, \"It all begins with notes\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, \"Click the\", ' ', __jsx(\"span\", {\n    onClick: function onClick() {\n      return props.addNewNote();\n    },\n    className: classes.newNoteText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, \"+ New Note\"), ' ', \"button in the side bar to create note.\"))));\n}\n\n_s(NoteList, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = NoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note-list.tsx"],"names":["React","createStyles","makeStyles","CgNotes","Divider","NoteListItem","useStyles","theme","root","display","flexDirection","height","margin","color","fontSize","width","title","padding","wordBreak","noteCount","date","paddingLeft","listBox","overflowY","empty","alignItems","justifyContent","textAlign","emptyIcon","newNoteText","cursor","NoteList","props","classes","convertTitle","length","substring","notebooks","notebook","notes","notebookTitle","notebookUpdatedAt","updatedAt","formatDate","map","note","id","addNewNote"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { CgNotes } from 'react-icons/cg';\nimport Divider from '@material-ui/core/Divider';\nimport NoteListItem from './note-list-item';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      margin: 'auto',\n      color: 'rgb(51,51,51)',\n      fontSize: '16px',\n      width: '100%',\n    },\n    title: {\n      padding: '10px 15px',\n      fontSize: '22px',\n      wordBreak: 'break-word',\n    },\n    noteCount: {\n      fontSize: '12px',\n      padding: '5px 15px',\n      color: 'rgb(107,107,107)',\n    },\n    date: {\n      fontSize: '10px',\n      paddingLeft: '10px',\n    },\n    listBox: {\n      overflowY: 'scroll',\n    },\n    empty: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: 'auto',\n      textAlign: 'center',\n      padding: '35px',\n    },\n    emptyIcon: {\n      fontSize: '75px',\n    },\n    newNoteText: {\n      cursor: 'pointer',\n      color: 'rgb(0,168,45)',\n    },\n  })\n);\n\nexport default function NoteList(props: any) {\n  const classes = useStyles();\n\n  const convertTitle = (title: string, length: number) => {\n    return title.length > length ? title.substring(0, length) + '...' : title;\n  };\n\n  const noteCount = props.notebooks[props.notebook].notes.length;\n  const notebookTitle = props.notebooks[props.notebook].title;\n  const notebookUpdatedAt = props.notebooks[props.notebook].updatedAt;\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>{convertTitle(notebookTitle, 15)}</div>\n\n      <div className={classes.noteCount}>\n        {`${noteCount} note${noteCount > 1 ? 's' : ''}`}\n        <span className={classes.date}>\n          {'Last edited on '}\n          {props.formatDate(notebookUpdatedAt)}\n        </span>\n      </div>\n      <Divider />\n      {noteCount > 0 ? (\n        <div className={classes.listBox}>\n          {props.notebooks[props.notebook].notes.map((note: any) => {\n            return (\n              <div key={note.id}>\n                <NoteListItem\n                  note={note}\n                  {...props}\n                  convertTitle={convertTitle}\n                />\n                <Divider />\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <div className={classes.empty}>\n          {props.notebook === 'trash' ? (\n            <>\n              <div className={classes.emptyIcon}>\n                <CgNotes />\n              </div>\n              <div>It all begins with notes</div>\n              <div>\n                Click the{' '}\n                <span\n                  onClick={() => props.addNewNote()}\n                  className={classes.newNoteText}\n                >\n                  + New Note\n                </span>{' '}\n                button in the side bar to create note.\n              </div>\n            </>\n          ) : (\n            <>\n              <div className={classes.emptyIcon}>\n                <CgNotes />\n              </div>\n              <div>It all begins with notes</div>\n              <div>\n                Click the{' '}\n                <span\n                  onClick={() => props.addNewNote()}\n                  className={classes.newNoteText}\n                >\n                  + New Note\n                </span>{' '}\n                button in the side bar to create note.\n              </div>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}