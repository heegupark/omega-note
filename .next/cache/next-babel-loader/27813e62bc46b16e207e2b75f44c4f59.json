{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Button from '@material-ui/core/Button';\nimport { useDrop } from 'react-dnd';\nconst useStyles = makeStyles(theme => createStyles({\n  listSelected: {\n    backgroundColor: 'rgb(64,64,64)',\n    borderRadius: '3px',\n    '&:hover': {\n      backgroundColor: 'rgb(51,51,51)',\n      borderRadius: '3px'\n    }\n  },\n  list: {\n    '&:hover': {\n      backgroundColor: 'rgb(51,51,51)',\n      borderRadius: '3px'\n    }\n  },\n  icon: {\n    minWidth: '36px',\n    color: 'rgb(165,165,165)'\n  },\n  removeNotebookIcon: {\n    color: 'red',\n    marginLeft: '20px'\n  },\n  menuNotebookIcon: {\n    color: 'rgb(51,51,51)',\n    marginLeft: '20px'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: 'rgb(222, 222, 222)',\n    boxShadow: theme.shadows[5],\n    padding: '20px',\n    textAlign: 'center',\n    width: '350px',\n    borderRadius: '5px',\n    fontSize: '12px',\n    outline: 'none'\n  },\n  paragraph: {\n    fontSize: '16px',\n    color: 'rgb(66, 54, 48)',\n    marginBottom: '10px',\n    padding: '10px'\n  },\n  button: {\n    height: '30px',\n    margin: '10px 15px'\n  }\n}));\nexport default function SidebarItem(props) {\n  const classes = useStyles();\n  const {\n    0: removeNotebookButton,\n    1: setRemoveNotebookButton\n  } = useState(false);\n  const [openModal, setOpenModal] = React.useState(false);\n\n  const handleModalClose = () => {\n    setOpenModal(false);\n  };\n\n  const removeNewNotebook = () => {\n    setOpenModal(true);\n  };\n\n  const handleDeleteClick = () => {\n    props.removeNotebook(props.thisNotebook);\n    handleModalClose();\n  };\n\n  const canMoveNote = () => {\n    console.log('note can be here');\n  };\n\n  const [{\n    isOver,\n    canDrop,\n    item\n  }, drop] = useDrop({\n    accept: 'note',\n    drop: () => moveNote(),\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n      item: monitor.getItem()\n    })\n  });\n\n  const moveNote = () => {\n    console.log(props.thisNotebook);\n    console.log(item === null || item === void 0 ? void 0 : item.id);\n    console.log(item === null || item === void 0 ? void 0 : item.notebook);\n    console.log('note got here');\n\n    if ((item === null || item === void 0 ? void 0 : item.notebook) !== props.thisNotebook) {\n      props.moveNote(item === null || item === void 0 ? void 0 : item.notebook, props.thisNotebook, item === null || item === void 0 ? void 0 : item.id);\n    }\n  };\n\n  const isActive = isOver && canDrop;\n  return __jsx(React.Fragment, null, __jsx(ListItem, {\n    button: true,\n    key: props.notebooks[props.thisNotebook].id,\n    className: props.notebook === props.thisNotebook ? classes.listSelected : classes.list,\n    onClick: () => {\n      if (!removeNotebookButton) props.handleNotebookClick(props.thisNotebook);\n    },\n    style: {\n      padding: props.open ? '0px 0px 0px 30px' : '0px 15px',\n      backgroundColor: isActive ? 'green' : '',\n      borderRadius: isActive ? '5px' : ''\n    },\n    ref: drop\n  }, __jsx(ListItemIcon, null, __jsx(ImportContactsIcon, {\n    className: classes.icon\n  })), __jsx(ListItemText, {\n    primary: props.notebooks[props.thisNotebook].title\n  }), __jsx(ListItemIcon, {\n    onClick: () => {\n      removeNewNotebook();\n    },\n    onMouseOver: () => setRemoveNotebookButton(true),\n    onMouseLeave: () => setRemoveNotebookButton(false)\n  }, removeNotebookButton && open ? __jsx(RemoveIcon, {\n    className: classes.removeNotebookIcon\n  }) : __jsx(MoreHorizIcon, {\n    className: classes.menuNotebookIcon\n  }))), __jsx(Modal, {\n    className: classes.modal,\n    open: openModal,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    }\n  }, __jsx(Fade, {\n    in: openModal\n  }, __jsx(\"div\", {\n    className: classes.paper\n  }, __jsx(\"div\", {\n    className: classes.paragraph\n  }, \"This will delete the folder and move all notes in this folder to trash.\"), __jsx(Button, {\n    className: classes.button,\n    variant: \"outlined\",\n    color: \"secondary\",\n    onClick: handleDeleteClick\n  }, \"Delete\"), __jsx(Button, {\n    className: classes.button,\n    variant: \"outlined\",\n    color: \"default\",\n    onClick: handleModalClose\n  }, \"Cancel\")))));\n}","map":null,"metadata":{},"sourceType":"module"}