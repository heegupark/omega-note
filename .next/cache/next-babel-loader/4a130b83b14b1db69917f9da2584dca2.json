{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Button from '@material-ui/core/Button';\nimport { useDrop } from 'react-dnd';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    listSelected: {\n      backgroundColor: 'rgb(64,64,64)',\n      borderRadius: '3px',\n      '&:hover': {\n        backgroundColor: 'rgb(51,51,51)',\n        borderRadius: '3px'\n      }\n    },\n    list: {\n      '&:hover': {\n        backgroundColor: 'rgb(51,51,51)',\n        borderRadius: '3px'\n      }\n    },\n    icon: {\n      minWidth: '36px',\n      color: 'rgb(165,165,165)'\n    },\n    removeNotebookIcon: {\n      color: 'red',\n      marginLeft: '20px'\n    },\n    menuNotebookIcon: {\n      color: 'rgb(51,51,51)',\n      marginLeft: '20px'\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    paper: {\n      backgroundColor: 'rgb(222, 222, 222)',\n      boxShadow: theme.shadows[5],\n      padding: '20px',\n      textAlign: 'center',\n      width: '350px',\n      borderRadius: '5px',\n      fontSize: '12px',\n      outline: 'none'\n    },\n    paragraph: {\n      fontSize: '16px',\n      color: 'rgb(66, 54, 48)',\n      marginBottom: '10px',\n      padding: '10px'\n    },\n    button: {\n      height: '30px',\n      margin: '10px 15px'\n    }\n  });\n});\nexport default function SidebarItem(props) {\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      removeNotebookButton = _useState[0],\n      setRemoveNotebookButton = _useState[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      openModal = _React$useState2[0],\n      setOpenModal = _React$useState2[1];\n\n  var handleModalClose = function handleModalClose() {\n    setOpenModal(false);\n  };\n\n  var removeNewNotebook = function removeNewNotebook() {\n    setOpenModal(true);\n  };\n\n  var handleDeleteClick = function handleDeleteClick() {\n    props.removeNotebook(props.thisNotebook);\n    handleModalClose();\n  };\n\n  var canMoveNote = function canMoveNote() {\n    console.log('note can be here');\n  };\n\n  var _useDrop = useDrop({\n    accept: 'note',\n    drop: function drop() {\n      return moveNote();\n    },\n    collect: function collect(monitor) {\n      return {\n        isOver: monitor.isOver(),\n        canDrop: monitor.canDrop(),\n        item: monitor.getItem()\n      };\n    }\n  }),\n      _useDrop2 = _slicedToArray(_useDrop, 2),\n      _useDrop2$ = _useDrop2[0],\n      isOver = _useDrop2$.isOver,\n      canDrop = _useDrop2$.canDrop,\n      item = _useDrop2$.item,\n      drop = _useDrop2[1];\n\n  var moveNote = function moveNote() {\n    console.log(props.thisNotebook);\n    console.log(item === null || item === void 0 ? void 0 : item.id);\n    console.log(item === null || item === void 0 ? void 0 : item.notebook);\n    console.log('note got here');\n\n    if ((item === null || item === void 0 ? void 0 : item.notebook) !== props.thisNotebook) {\n      props.moveNote(item === null || item === void 0 ? void 0 : item.notebook, props.thisNotebook, item === null || item === void 0 ? void 0 : item.id);\n    }\n  };\n\n  var isActive = isOver && canDrop;\n  return __jsx(React.Fragment, null, __jsx(ListItem, {\n    button: true,\n    key: props.notebooks[props.thisNotebook].id,\n    className: props.notebook === props.thisNotebook ? classes.listSelected : classes.list,\n    onClick: function onClick() {\n      if (!removeNotebookButton) props.handleNotebookClick(props.thisNotebook);\n    },\n    style: {\n      padding: props.open ? '0px 0px 0px 30px' : '0px 15px',\n      backgroundColor: isActive ? 'green' : '',\n      borderRadius: isActive ? '5px' : ''\n    },\n    ref: drop\n  }, __jsx(ListItemIcon, null, __jsx(ImportContactsIcon, {\n    className: classes.icon\n  })), __jsx(ListItemText, {\n    primary: props.notebooks[props.thisNotebook].title\n  }), __jsx(ListItemIcon, {\n    onClick: function onClick() {\n      removeNewNotebook();\n    },\n    onMouseOver: function onMouseOver() {\n      return setRemoveNotebookButton(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setRemoveNotebookButton(false);\n    }\n  }, removeNotebookButton && open ? __jsx(RemoveIcon, {\n    className: classes.removeNotebookIcon\n  }) : __jsx(MoreHorizIcon, {\n    className: classes.menuNotebookIcon\n  }))), __jsx(Modal, {\n    className: classes.modal,\n    open: openModal,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    }\n  }, __jsx(Fade, {\n    \"in\": openModal\n  }, __jsx(\"div\", {\n    className: classes.paper\n  }, __jsx(\"div\", {\n    className: classes.paragraph\n  }, \"This will delete the folder and move all notes in this folder to trash.\"), __jsx(Button, {\n    className: classes.button,\n    variant: \"outlined\",\n    color: \"secondary\",\n    onClick: handleDeleteClick\n  }, \"Delete\"), __jsx(Button, {\n    className: classes.button,\n    variant: \"outlined\",\n    color: \"default\",\n    onClick: handleModalClose\n  }, \"Cancel\")))));\n}","map":null,"metadata":{},"sourceType":"module"}