{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note-list-item.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { useDrag } from 'react-dnd';\nimport Preview from 'react-dnd-preview';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      margin: 'auto',\n      color: 'rgb(51,51,51)',\n      fontSize: '16px',\n      width: '100%'\n    },\n    title: {\n      padding: '10px',\n      fontSize: '22px'\n    },\n    box: {\n      position: 'sticky',\n      height: '100px',\n      cursor: 'pointer',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    list: {\n      '&:active': {\n        opacity: '0.3'\n      }\n    },\n    noteTitle: {\n      padding: '10px 20px 0px 20px',\n      color: 'rgb(61,61,61)'\n    },\n    noteContent: {\n      padding: '5px 20px',\n      fontSize: '14px',\n      color: 'rgb(115,115,115)'\n    },\n    empty: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: 'auto',\n      textAlign: 'center',\n      padding: '35px'\n    },\n    emptyIcon: {\n      fontSize: '75px'\n    },\n    newNoteText: {\n      cursor: 'pointer',\n      color: 'rgb(0,168,45)'\n    }\n  });\n});\n\nvar generatePreview = function generatePreview(_ref) {\n  var itemType = _ref.itemType,\n      item = _ref.item,\n      style = _ref.style;\n  return __jsx(\"div\", {\n    style: style,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }\n  }, itemType);\n};\n\nexport default function NoteListItem(props) {\n  _s();\n\n  var classes = useStyles();\n\n  var _useDrag = useDrag({\n    item: {\n      type: props.noteTitle\n    },\n    collect: function collect(monitor) {\n      return {\n        opacity: monitor.isDragging() ? 0.4 : 1\n      };\n    },\n    preview: {\n      display: 'none'\n    }\n  }),\n      _useDrag2 = _slicedToArray(_useDrag, 3),\n      opacity = _useDrag2[0].opacity,\n      drag = _useDrag2[1],\n      preview = _useDrag2[2];\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    ref: drag,\n    style: {\n      opacity: opacity\n    },\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.noteTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, props.noteTitle), __jsx(\"div\", {\n    className: classes.noteContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, props.note))), __jsx(Preview, {\n    generator: generatePreview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(NoteListItem, \"4qthqeLTysxbFJCCpbt35UOQ5q8=\", false, function () {\n  return [useStyles, useDrag];\n});\n\n_c = NoteListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteListItem\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note-list-item.tsx"],"names":["React","createStyles","makeStyles","useDrag","Preview","useStyles","theme","root","display","flexDirection","height","margin","color","fontSize","width","title","padding","box","position","cursor","list","opacity","noteTitle","noteContent","empty","alignItems","justifyContent","textAlign","emptyIcon","newNoteText","generatePreview","itemType","item","style","NoteListItem","props","classes","type","collect","monitor","isDragging","preview","drag","note"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { DragPreviewImage, useDrag } from 'react-dnd';\nimport Preview from 'react-dnd-preview';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      margin: 'auto',\n      color: 'rgb(51,51,51)',\n      fontSize: '16px',\n      width: '100%',\n    },\n    title: {\n      padding: '10px',\n      fontSize: '22px',\n    },\n    box: {\n      position: 'sticky',\n      height: '100px',\n      cursor: 'pointer',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    list: {\n      '&:active': {\n        opacity: '0.3',\n      },\n    },\n    noteTitle: {\n      padding: '10px 20px 0px 20px',\n      color: 'rgb(61,61,61)',\n    },\n    noteContent: {\n      padding: '5px 20px',\n      fontSize: '14px',\n      color: 'rgb(115,115,115)',\n    },\n    empty: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: 'auto',\n      textAlign: 'center',\n      padding: '35px',\n    },\n    emptyIcon: {\n      fontSize: '75px',\n    },\n    newNoteText: {\n      cursor: 'pointer',\n      color: 'rgb(0,168,45)',\n    },\n  })\n);\n\nconst generatePreview = ({ itemType, item, style }) => {\n  return <div style={style}>{itemType}</div>;\n};\n\nexport default function NoteListItem(props: any) {\n  const classes = useStyles();\n\n  const [{ opacity }, drag, preview] = useDrag({\n    item: { type: props.noteTitle },\n    collect: (monitor) => ({\n      opacity: monitor.isDragging() ? 0.4 : 1,\n    }),\n    preview: {\n      display: 'none',\n    },\n  });\n\n  return (\n    <>\n      <div className={classes.box}>\n        <div ref={drag} style={{ opacity }} className={classes.list}>\n          <div className={classes.noteTitle}>{props.noteTitle}</div>\n          <div className={classes.noteContent}>{props.note}</div>\n        </div>\n      </div>\n      <Preview generator={generatePreview} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}