{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport NoteList from './note-list';\nimport EditorTitle from './editor-title';\nimport Editor from './editor';\nimport { CgNotes } from 'react-icons/cg';\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexDdirection: 'row',\n    height: '100vh'\n  },\n  loading: {\n    margin: '20px 20px 0px 20px'\n  },\n  progress: {\n    width: '100%',\n    margin: '20px 20px 0px 20px',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  },\n  box: {\n    display: 'flex',\n    flexDdirection: 'column',\n    backgroundColor: 'rgb(248, 248, 248)',\n    height: '100vh',\n    resize: 'horizontal',\n    minWidth: '200px',\n    width: '300px',\n    maxWidth: '400px',\n    overflow: 'hidden',\n    borderRight: '1px solid rgb(230, 230, 230)'\n  },\n  empty: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 'auto',\n    textAlign: 'center',\n    padding: '35px'\n  },\n  emptyIcon: {\n    fontSize: '75px'\n  },\n  newNoteText: {\n    cursor: 'pointer',\n    color: 'rgb(0,168,45)'\n  }\n}));\nexport default function Note(props) {\n  const classes = useStyles();\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, props.notebook ? __jsx(\"div\", {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, __jsx(NoteList, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }))) : __jsx(\"div\", {\n    className: classes.empty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: classes.emptyIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, __jsx(CgNotes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"It all begins with notes\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Click the\", ' ', __jsx(\"span\", {\n    onClick: () => props.addNewNote('', ''),\n    className: classes.newNoteText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, \"+ New Note\"), ' ', \"button in the side bar to create note.\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, props.notebook && props.currentNoteId && __jsx(React.Fragment, null, __jsx(EditorTitle, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  })), __jsx(Editor, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note.tsx"],"names":["React","createStyles","makeStyles","NoteList","EditorTitle","Editor","CgNotes","useStyles","theme","root","display","flexDdirection","height","loading","margin","progress","width","marginTop","spacing","box","backgroundColor","resize","minWidth","maxWidth","overflow","borderRight","empty","alignItems","justifyContent","textAlign","padding","emptyIcon","fontSize","newNoteText","cursor","color","Note","props","classes","notebook","addNewNote","currentNoteId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport NoteList from './note-list';\nimport EditorTitle from './editor-title';\nimport Editor from './editor';\nimport INoteProps from './interfaces/inoteprops';\nimport { CgNotes } from 'react-icons/cg';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDdirection: 'row',\n      height: '100vh',\n    },\n    loading: {\n      margin: '20px 20px 0px 20px',\n    },\n    progress: {\n      width: '100%',\n      margin: '20px 20px 0px 20px',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    box: {\n      display: 'flex',\n      flexDdirection: 'column',\n      backgroundColor: 'rgb(248, 248, 248)',\n      height: '100vh',\n      resize: 'horizontal',\n      minWidth: '200px',\n      width: '300px',\n      maxWidth: '400px',\n      overflow: 'hidden',\n      borderRight: '1px solid rgb(230, 230, 230)',\n    },\n    empty: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: 'auto',\n      textAlign: 'center',\n      padding: '35px',\n    },\n    emptyIcon: {\n      fontSize: '75px',\n    },\n    newNoteText: {\n      cursor: 'pointer',\n      color: 'rgb(0,168,45)',\n    },\n  })\n);\n\nexport default function Note(props: INoteProps) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <div className={classes.root}>\n        {props.notebook ? (\n          <div className={classes.box}>\n            <NoteList {...props} />\n          </div>\n        ) : (\n          <div className={classes.empty}>\n            <div className={classes.emptyIcon}>\n              <CgNotes />\n            </div>\n            <div>It all begins with notes</div>\n            <div>\n              Click the{' '}\n              <span\n                onClick={() => props.addNewNote('', '')}\n                className={classes.newNoteText}\n              >\n                + New Note\n              </span>{' '}\n              button in the side bar to create note.\n            </div>\n          </div>\n        )}\n        <div>\n          {props.notebook && props.currentNoteId && (\n            <>\n              <EditorTitle {...props} />\n              <Editor {...props} />\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}