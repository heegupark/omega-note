{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/editor-title.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from 'react';\nexport default function EditorTitle(props) {\n  _s();\n\n  var classes = useStyles();\n  var editorRef = useRef();\n\n  var _useState = useState(false),\n      editorLoaded = _useState[0],\n      setEditorLoaded = _useState[1];\n\n  var _ref = editorRef.current || {},\n      CKEditor = _ref.CKEditor,\n      ClassicEditor = _ref.ClassicEditor;\n\n  useEffect(function () {\n    editorRef.current = {\n      CKEditor: require('@ckeditor/ckeditor5-react'),\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic')\n    };\n    setEditorLoaded(true);\n  }, []);\n  return __jsx(React.Fragment, null, editorLoaded ? __jsx(CKEditor, {\n    editor: ClassicEditor,\n    height: \"100vh\",\n    data: \"<p>Hello from CKEditor 5!</p>\",\n    onInit: function onInit(editor) {\n      // You can store the \"editor\" and use when it is needed.\n      editor.editing.view.change(function (writer) {\n        writer.setStyle('height', '90vh', editor.editing.view.document.getRoot());\n        writer.setStyle('width', '700px', editor.editing.view.document.getRoot());\n      });\n      console.log('Editor is ready to use!', editor);\n    },\n    onChange: function onChange(event, editor) {\n      var data = editor.getData();\n      console.log({\n        event: event,\n        editor: editor,\n        data: data\n      });\n    },\n    onBlur: function onBlur(event, editor) {\n      console.log('Blur.', editor);\n    },\n    onFocus: function onFocus(event, editor) {\n      console.log('Focus.', editor);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, 'loading editor...'), __jsx(\"div\", {\n    className: classes.progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, __jsx(LinearProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }))));\n}\n\n_s(EditorTitle, \"IwLTHnYmbYDCO/GYeLdnGDkFBT0=\", true);\n\n_c = EditorTitle;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditorTitle\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/editor-title.tsx"],"names":["React","useEffect","useState","useRef","EditorTitle","props","classes","useStyles","editorRef","editorLoaded","setEditorLoaded","current","CKEditor","ClassicEditor","require","editor","editing","view","change","writer","setStyle","document","getRoot","console","log","event","data","getData","loading","progress"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAAiC;AAAA;;AAC9C,MAAMC,OAAO,GAAGC,SAAS,EAAzB;AACA,MAAMC,SAAS,GAAGL,MAAM,EAAxB;;AAF8C,kBAGND,QAAQ,CAAC,KAAD,CAHF;AAAA,MAGvCO,YAHuC;AAAA,MAGzBC,eAHyB;;AAAA,aAITF,SAAS,CAACG,OAAX,IAA8B,EAJpB;AAAA,MAItCC,QAJsC,QAItCA,QAJsC;AAAA,MAI5BC,aAJ4B,QAI5BA,aAJ4B;;AAM9CZ,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,SAAS,CAACG,OAAV,GAAoB;AAClBC,MAAAA,QAAQ,EAAEE,OAAO,CAAC,2BAAD,CADC;AAElBD,MAAAA,aAAa,EAAEC,OAAO,CAAC,mCAAD;AAFJ,KAApB;AAIAJ,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GANQ,EAMN,EANM,CAAT;AAQA,SACE,4BACGD,YAAY,GACX,MAAC,QAAD;AACE,IAAA,MAAM,EAAEI,aADV;AAEE,IAAA,MAAM,EAAC,OAFT;AAGE,IAAA,IAAI,EAAC,+BAHP;AAIE,IAAA,MAAM,EAAE,gBAACE,MAAD,EAAiB;AACvB;AAEAA,MAAAA,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,UAACC,MAAD,EAAiB;AAC1CA,QAAAA,MAAM,CAACC,QAAP,CACE,QADF,EAEE,MAFF,EAGEL,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoBI,QAApB,CAA6BC,OAA7B,EAHF;AAKAH,QAAAA,MAAM,CAACC,QAAP,CACE,OADF,EAEE,OAFF,EAGEL,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoBI,QAApB,CAA6BC,OAA7B,EAHF;AAKD,OAXD;AAYAC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCT,MAAvC;AACD,KApBH;AAqBE,IAAA,QAAQ,EAAE,kBAACU,KAAD,EAAaV,MAAb,EAA6B;AACrC,UAAMW,IAAI,GAAGX,MAAM,CAACY,OAAP,EAAb;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEC,QAAAA,KAAK,EAALA,KAAF;AAASV,QAAAA,MAAM,EAANA,MAAT;AAAiBW,QAAAA,IAAI,EAAJA;AAAjB,OAAZ;AACD,KAxBH;AAyBE,IAAA,MAAM,EAAE,gBAACD,KAAD,EAAaV,MAAb,EAA6B;AACnCQ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBT,MAArB;AACD,KA3BH;AA4BE,IAAA,OAAO,EAAE,iBAACU,KAAD,EAAaV,MAAb,EAA6B;AACpCQ,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBT,MAAtB;AACD,KA9BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADW,GAkCX,4BACE;AAAK,IAAA,SAAS,EAAET,OAAO,CAACsB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkC,mBAAlC,CADF,EAEE;AAAK,IAAA,SAAS,EAAEtB,OAAO,CAACuB,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CAnCJ,CADF;AA6CD;;GA3DuBzB,W;;KAAAA,W","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\n\nexport default function EditorTitle(props: any) {\n  const classes = useStyles();\n  const editorRef = useRef() as any;\n  const [editorLoaded, setEditorLoaded] = useState(false);\n  const { CKEditor, ClassicEditor } = (editorRef.current as any) || {};\n\n  useEffect(() => {\n    editorRef.current = {\n      CKEditor: require('@ckeditor/ckeditor5-react'),\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic'),\n    };\n    setEditorLoaded(true);\n  }, []);\n\n  return (\n    <>\n      {editorLoaded ? (\n        <CKEditor\n          editor={ClassicEditor}\n          height=\"100vh\"\n          data=\"<p>Hello from CKEditor 5!</p>\"\n          onInit={(editor: any) => {\n            // You can store the \"editor\" and use when it is needed.\n\n            editor.editing.view.change((writer: any) => {\n              writer.setStyle(\n                'height',\n                '90vh',\n                editor.editing.view.document.getRoot()\n              );\n              writer.setStyle(\n                'width',\n                '700px',\n                editor.editing.view.document.getRoot()\n              );\n            });\n            console.log('Editor is ready to use!', editor);\n          }}\n          onChange={(event: any, editor: any) => {\n            const data = editor.getData();\n            console.log({ event, editor, data });\n          }}\n          onBlur={(event: any, editor: any) => {\n            console.log('Blur.', editor);\n          }}\n          onFocus={(event: any, editor: any) => {\n            console.log('Focus.', editor);\n          }}\n        />\n      ) : (\n        <>\n          <div className={classes.loading}>{'loading editor...'}</div>\n          <div className={classes.progress}>\n            <LinearProgress />\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}