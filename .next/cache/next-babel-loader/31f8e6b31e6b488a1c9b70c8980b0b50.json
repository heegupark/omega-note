{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/notebooks.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n    margin: 'auto'\n  },\n  notebook: {\n    fontSize: '24px',\n    padding: '20px 30px'\n  },\n  paper: {\n    width: 800,\n    height: '100vh',\n    padding: '10px 30px'\n  },\n  table: {\n    width: '100%',\n    color: 'rgb(51,51,51)'\n  },\n  row: {\n    '&:hover': {\n      backgroundColor: 'rgb(75,164,65)',\n      color: 'white'\n    }\n  }\n}));\nexport default function Notebooks(props) {\n  const classes = useStyles();\n\n  const getTimeMsg = date => {\n    const createdTime = new Date(date).valueOf();\n    const currentTime = new Date().valueOf();\n    const second = 60;\n    const minute = 60;\n    const hour = 24;\n    let divider = 1;\n    let timeMsg = '';\n    let diff = (currentTime - createdTime) / 1000;\n\n    if (diff <= second) {\n      timeMsg = 'second';\n    } else if (diff <= second * minute) {\n      divider = second;\n      timeMsg = 'minute';\n    } else if (diff <= second * minute * hour) {\n      divider = second * minute;\n      timeMsg = 'hour';\n    } else if (diff <= 172800) {\n      return 'Yesterday';\n    } else {\n      const dateArr = date.toString().split(' ');\n      return `${dateArr[1]} ${dateArr[2]}, ${dateArr[3]}`;\n    }\n\n    diff /= divider;\n    const displayTime = Math.abs(Math.round(diff));\n    const plural = displayTime > 1 ? 's' : '';\n    const timeMessage = `${displayTime} ${timeMsg}${plural} ago`;\n    return timeMessage;\n  };\n\n  const createData = (id, title, noteCount, createdAt, updatedAt) => {\n    return {\n      id,\n      title,\n      noteCount,\n      createdAt,\n      updatedAt\n    };\n  };\n\n  const rows = props.notebookOrder.map(notebook => {\n    return createData(props.notebooks[notebook].id, props.notebooks[notebook].title, props.notebooks[notebook].notes.length, getTimeMsg(props.notebooks[notebook].createdAt), getTimeMsg(props.notebooks[notebook].updatedAt));\n  });\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.notebook,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, \"Notebooks\"), __jsx(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, __jsx(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, __jsx(Table, {\n    className: classes.table,\n    \"aria-label\": \"customized table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"Notebook\"), __jsx(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, \"Number of Notes\"), __jsx(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"Created Date\"), __jsx(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"Update Date\"))), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, rows.map(row => __jsx(TableRow, {\n    key: row.id,\n    className: classes.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, __jsx(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    onClick: () => props.handleNotebookClick(row.id),\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }, row.title), __jsx(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  }, row.noteCount), __jsx(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, row.createdAt), __jsx(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }, row.updatedAt))))))));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/notebooks.tsx"],"names":["React","createStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useStyles","theme","root","display","flexDirection","height","margin","notebook","fontSize","padding","paper","width","table","color","row","backgroundColor","Notebooks","props","classes","getTimeMsg","date","createdTime","Date","valueOf","currentTime","second","minute","hour","divider","timeMsg","diff","dateArr","toString","split","displayTime","Math","abs","round","plural","timeMessage","createData","id","title","noteCount","createdAt","updatedAt","rows","notebookOrder","map","notebooks","notes","length","handleNotebookClick","cursor"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAgD,0BAAhD;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,IAC3BV,YAAY,CAAC;AACXW,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,MAAM,EAAE,OAHJ;AAIJC,IAAAA,MAAM,EAAE;AAJJ,GADK;AAOXC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,MADF;AAERC,IAAAA,OAAO,EAAE;AAFD,GAPC;AAWXC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,GADF;AAELN,IAAAA,MAAM,EAAE,OAFH;AAGLI,IAAAA,OAAO,EAAE;AAHJ,GAXI;AAgBXG,EAAAA,KAAK,EAAE;AACLD,IAAAA,KAAK,EAAE,MADF;AAELE,IAAAA,KAAK,EAAE;AAFF,GAhBI;AAoBXC,EAAAA,GAAG,EAAE;AACH,eAAW;AACTC,MAAAA,eAAe,EAAE,gBADR;AAETF,MAAAA,KAAK,EAAE;AAFE;AADR;AApBM,CAAD,CADc,CAA5B;AAoCA,eAAe,SAASG,SAAT,CAAmBC,KAAnB,EAA2C;AACxD,QAAMC,OAAO,GAAGlB,SAAS,EAAzB;;AAEA,QAAMmB,UAAU,GAAIC,IAAD,IAAgB;AACjC,UAAMC,WAAW,GAAG,IAAIC,IAAJ,CAASF,IAAT,EAAeG,OAAf,EAApB;AACA,UAAMC,WAAW,GAAG,IAAIF,IAAJ,GAAWC,OAAX,EAApB;AACA,UAAME,MAAM,GAAG,EAAf;AACA,UAAMC,MAAM,GAAG,EAAf;AACA,UAAMC,IAAI,GAAG,EAAb;AACA,QAAIC,OAAO,GAAG,CAAd;AACA,QAAIC,OAAO,GAAG,EAAd;AACA,QAAIC,IAAI,GAAG,CAACN,WAAW,GAAGH,WAAf,IAA8B,IAAzC;;AACA,QAAIS,IAAI,IAAIL,MAAZ,EAAoB;AAClBI,MAAAA,OAAO,GAAG,QAAV;AACD,KAFD,MAEO,IAAIC,IAAI,IAAIL,MAAM,GAAGC,MAArB,EAA6B;AAClCE,MAAAA,OAAO,GAAGH,MAAV;AACAI,MAAAA,OAAO,GAAG,QAAV;AACD,KAHM,MAGA,IAAIC,IAAI,IAAIL,MAAM,GAAGC,MAAT,GAAkBC,IAA9B,EAAoC;AACzCC,MAAAA,OAAO,GAAGH,MAAM,GAAGC,MAAnB;AACAG,MAAAA,OAAO,GAAG,MAAV;AACD,KAHM,MAGA,IAAIC,IAAI,IAAI,MAAZ,EAAoB;AACzB,aAAO,WAAP;AACD,KAFM,MAEA;AACL,YAAMC,OAAO,GAAGX,IAAI,CAACY,QAAL,GAAgBC,KAAhB,CAAsB,GAAtB,CAAhB;AACA,aAAQ,GAAEF,OAAO,CAAC,CAAD,CAAI,IAAGA,OAAO,CAAC,CAAD,CAAI,KAAIA,OAAO,CAAC,CAAD,CAAI,EAAlD;AACD;;AACDD,IAAAA,IAAI,IAAIF,OAAR;AACA,UAAMM,WAAW,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,KAAL,CAAWP,IAAX,CAAT,CAApB;AACA,UAAMQ,MAAM,GAAGJ,WAAW,GAAG,CAAd,GAAkB,GAAlB,GAAwB,EAAvC;AACA,UAAMK,WAAW,GAAI,GAAEL,WAAY,IAAGL,OAAQ,GAAES,MAAO,MAAvD;AACA,WAAOC,WAAP;AACD,GA5BD;;AA8BA,QAAMC,UAAU,GAAG,CACjBC,EADiB,EAEjBC,KAFiB,EAGjBC,SAHiB,EAIjBC,SAJiB,EAKjBC,SALiB,KAMd;AACH,WAAO;AAAEJ,MAAAA,EAAF;AAAMC,MAAAA,KAAN;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA,SAAxB;AAAmCC,MAAAA;AAAnC,KAAP;AACD,GARD;;AAUA,QAAMC,IAAI,GAAG7B,KAAK,CAAC8B,aAAN,CAAoBC,GAApB,CAAyBzC,QAAD,IAAsB;AACzD,WAAOiC,UAAU,CACfvB,KAAK,CAACgC,SAAN,CAAgB1C,QAAhB,EAA0BkC,EADX,EAEfxB,KAAK,CAACgC,SAAN,CAAgB1C,QAAhB,EAA0BmC,KAFX,EAGfzB,KAAK,CAACgC,SAAN,CAAgB1C,QAAhB,EAA0B2C,KAA1B,CAAgCC,MAHjB,EAIfhC,UAAU,CAACF,KAAK,CAACgC,SAAN,CAAgB1C,QAAhB,EAA0BqC,SAA3B,CAJK,EAKfzB,UAAU,CAACF,KAAK,CAACgC,SAAN,CAAgB1C,QAAhB,EAA0BsC,SAA3B,CALK,CAAjB;AAOD,GARY,CAAb;AAUA,SACE;AAAK,IAAA,SAAS,EAAE3B,OAAO,CAAChB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEgB,OAAO,CAACX,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAK,IAAA,SAAS,EAAEW,OAAO,CAACR,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAgB,IAAA,SAAS,EAAEX,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEmB,OAAO,CAACN,KAA1B;AAAiC,kBAAW,kBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,EAGE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAIE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,CADF,CADF,EASE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGkC,IAAI,CAACE,GAAL,CAAUlC,GAAD,IACR,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,GAAG,CAAC2B,EAAnB;AAAuB,IAAA,SAAS,EAAEvB,OAAO,CAACJ,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,SAAS,EAAC,IADZ;AAEE,IAAA,KAAK,EAAC,KAFR;AAGE,IAAA,OAAO,EAAE,MAAMG,KAAK,CAACmC,mBAAN,CAA0BtC,GAAG,CAAC2B,EAA9B,CAHjB;AAIE,IAAA,KAAK,EAAE;AAAEY,MAAAA,MAAM,EAAE;AAAV,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGvC,GAAG,CAAC4B,KANP,CADF,EASE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2B5B,GAAG,CAAC6B,SAA/B,CATF,EAUE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2B7B,GAAG,CAAC8B,SAA/B,CAVF,EAWE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2B9B,GAAG,CAAC+B,SAA/B,CAXF,CADD,CADH,CATF,CADF,CADF,CAFF,CADF;AAoCD","sourcesContent":["import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport INotebook from './interfaces/inotebook';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      margin: 'auto',\n    },\n    notebook: {\n      fontSize: '24px',\n      padding: '20px 30px',\n    },\n    paper: {\n      width: 800,\n      height: '100vh',\n      padding: '10px 30px',\n    },\n    table: {\n      width: '100%',\n      color: 'rgb(51,51,51)',\n    },\n    row: {\n      '&:hover': {\n        backgroundColor: 'rgb(75,164,65)',\n        color: 'white',\n      },\n    },\n  })\n);\n\ninterface INotebooksProps {\n  notebooks: INotebook;\n  notebookOrder: Array<string>;\n  handleNotebookClick: (notebook: string) => void;\n}\n\nexport default function Notebooks(props: INotebooksProps) {\n  const classes = useStyles();\n\n  const getTimeMsg = (date: Date) => {\n    const createdTime = new Date(date).valueOf();\n    const currentTime = new Date().valueOf();\n    const second = 60;\n    const minute = 60;\n    const hour = 24;\n    let divider = 1;\n    let timeMsg = '';\n    let diff = (currentTime - createdTime) / 1000;\n    if (diff <= second) {\n      timeMsg = 'second';\n    } else if (diff <= second * minute) {\n      divider = second;\n      timeMsg = 'minute';\n    } else if (diff <= second * minute * hour) {\n      divider = second * minute;\n      timeMsg = 'hour';\n    } else if (diff <= 172800) {\n      return 'Yesterday';\n    } else {\n      const dateArr = date.toString().split(' ');\n      return `${dateArr[1]} ${dateArr[2]}, ${dateArr[3]}`;\n    }\n    diff /= divider;\n    const displayTime = Math.abs(Math.round(diff));\n    const plural = displayTime > 1 ? 's' : '';\n    const timeMessage = `${displayTime} ${timeMsg}${plural} ago`;\n    return timeMessage;\n  };\n\n  const createData = (\n    id: string,\n    title: string,\n    noteCount: number,\n    createdAt: string,\n    updatedAt: string\n  ) => {\n    return { id, title, noteCount, createdAt, updatedAt };\n  };\n\n  const rows = props.notebookOrder.map((notebook: string) => {\n    return createData(\n      props.notebooks[notebook].id,\n      props.notebooks[notebook].title,\n      props.notebooks[notebook].notes.length,\n      getTimeMsg(props.notebooks[notebook].createdAt),\n      getTimeMsg(props.notebooks[notebook].updatedAt)\n    );\n  });\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.notebook}>Notebooks</div>\n      <div className={classes.paper}>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Notebook</TableCell>\n                <TableCell align=\"center\">Number of Notes</TableCell>\n                <TableCell align=\"center\">Created Date</TableCell>\n                <TableCell align=\"center\">Update Date</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map((row) => (\n                <TableRow key={row.id} className={classes.row}>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    onClick={() => props.handleNotebookClick(row.id)}\n                    style={{ cursor: 'pointer' }}\n                  >\n                    {row.title}\n                  </TableCell>\n                  <TableCell align=\"center\">{row.noteCount}</TableCell>\n                  <TableCell align=\"center\">{row.createdAt}</TableCell>\n                  <TableCell align=\"center\">{row.updatedAt}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}