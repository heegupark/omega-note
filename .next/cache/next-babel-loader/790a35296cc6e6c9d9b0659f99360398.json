{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/editor.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { HiDotsHorizontal } from 'react-icons/hi';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nconst useStyles = makeStyles(theme => createStyles({\n  title: {\n    outline: 'none',\n    width: '95%',\n    paddingLeft: '15px',\n    margin: '0px',\n    border: 'none',\n    backgroundColor: 'rgb(248,248,248)',\n    fontSize: '24px'\n  },\n  editor: {\n    width: '100%',\n    minWidth: '400px',\n    wordBreak: 'break-word',\n    paddingBottom: '10px',\n    '&:hover': {\n      backgroundColor: 'white'\n    }\n  },\n  editorInTrash: {\n    width: '100%',\n    minWidth: '600px',\n    wordBreak: 'break-word',\n    padding: '15px'\n  },\n  dot: {\n    position: 'absolute',\n    float: 'right',\n    right: '20px',\n    cursor: 'pointer',\n    marginTop: '10px'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: 'rgb(222, 222, 222)',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(1, 2, 2),\n    textAlign: 'center',\n    width: '350px',\n    borderRadius: '5px',\n    fontSize: '12px',\n    outline: 'none'\n  },\n  button: {\n    height: '30px',\n    margin: '10px 15px'\n  }\n}));\nconst theme = 'snow';\nconst placeholder = `What's in your mind?`;\nconst modules = {\n  toolbar: [[{\n    header: '1'\n  }, {\n    header: '2'\n  }, {\n    font: []\n  }, {\n    color: []\n  }], [{\n    size: []\n  }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n    list: 'ordered'\n  }, {\n    list: 'bullet'\n  }, {\n    indent: '-1'\n  }, {\n    indent: '+1'\n  }], ['link', 'image', 'video'], ['clean']],\n  clipboard: {\n    matchVisual: false\n  }\n};\nconst formats = ['header', 'font', 'color', 'size', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image' // 'video',\n];\nexport default function Editor(props) {\n  const {\n    0: isOpen,\n    1: setOpen\n  } = useState(false);\n  const ReactQuill = false ? require('react-quill') : () => false;\n  const classes = useStyles();\n  const {\n    0: title,\n    1: setTitle\n  } = useState('');\n  const {\n    0: isDelete,\n    1: setIsDeleted\n  } = useState(false);\n  const {\n    0: contents,\n    1: setContents\n  } = useState('');\n  const {\n    0: lastNotebook,\n    1: setLastNotebook\n  } = useState('');\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [modalOpen, setModalOpen] = React.useState(false);\n\n  const handleModalOpen = () => {\n    handlePopoverClose();\n    setModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n\n  const handlePopoverOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  useEffect(() => {\n    setOpen(true);\n  }, []);\n\n  const handleChange = html => {\n    setContents(html);\n\n    const newNote = _objectSpread(_objectSpread({}, props.currentNote), {}, {\n      note: html\n    });\n\n    props.updateNote(props.notebooks[props.notebook].id, props.currentNote.id, newNote);\n  };\n\n  const getNote = (notebookId, noteId) => {\n    const newContents = props.notebooks[notebookId].notes.filter(note => note.id === noteId);\n    setTitle(newContents[0].noteTitle);\n    setContents(newContents[0].note);\n    setIsDeleted(newContents[0].isDeleted);\n    setLastNotebook(newContents[0].lastNotebook);\n  };\n\n  useEffect(() => {\n    getNote(props.notebook, props.currentNote.id);\n  }, [props.notebook, props.currentNote]);\n\n  const handleTitleChange = e => {\n    var _props$currentNote;\n\n    setTitle(e.target.value);\n\n    const newNote = _objectSpread(_objectSpread({}, props.currentNote), {}, {\n      noteTitle: e.target.value\n    });\n\n    props.updateNote(props.notebooks[props.notebook].id, (_props$currentNote = props.currentNote) === null || _props$currentNote === void 0 ? void 0 : _props$currentNote.id, newNote);\n  };\n\n  const handleMoveToTrash = () => {\n    var _props$currentNote2;\n\n    props.moveNote(props.notebook, 'trash', (_props$currentNote2 = props.currentNote) === null || _props$currentNote2 === void 0 ? void 0 : _props$currentNote2.id);\n    handlePopoverClose();\n  };\n\n  const handleRestore = () => {\n    var _props$currentNote3;\n\n    props.moveNote('trash', lastNotebook, (_props$currentNote3 = props.currentNote) === null || _props$currentNote3 === void 0 ? void 0 : _props$currentNote3.id);\n    handlePopoverClose();\n  };\n\n  const handleDelete = () => {\n    var _props$currentNote4;\n\n    props.deleteNote('trash', (_props$currentNote4 = props.currentNote) === null || _props$currentNote4 === void 0 ? void 0 : _props$currentNote4.id);\n    handlePopoverClose();\n    handleModalClose();\n  };\n\n  return __jsx(React.Fragment, null, isDelete ? __jsx(React.Fragment, null, __jsx(\"span\", {\n    className: classes.title,\n    onClick: () => props.handleSnackbar('You can not update a note title in the Trash', 'error'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, title), __jsx(Menu, {\n    id: \"dot-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handlePopoverClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, __jsx(MenuItem, {\n    onClick: handleRestore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, \"Restore\"), __jsx(MenuItem, {\n    onClick: handleModalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, \"Delete\")), __jsx(\"span\", {\n    className: classes.dot,\n    onClick: handlePopoverOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }, __jsx(HiDotsHorizontal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: classes.editorInTrash,\n    dangerouslySetInnerHTML: {\n      __html: contents\n    },\n    onClick: () => props.handleSnackbar('You can not update a note in the Trash', 'error'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }), __jsx(Modal, {\n    open: modalOpen,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    className: classes.modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    id: \"simple-modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 15\n    }\n  }, \"Are you really want to delete?\"), __jsx(\"p\", {\n    id: \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 15\n    }\n  }, \"You will permanently delete this note.\"), __jsx(Button, {\n    className: classes.button,\n    variant: \"outlined\",\n    color: \"secondary\",\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  }, \"Delete\"), __jsx(Button, {\n    className: classes.button,\n    variant: \"outlined\",\n    color: \"default\",\n    onClick: handleModalClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 15\n    }\n  }, \"Cancel\")))) : __jsx(React.Fragment, null, __jsx(\"input\", {\n    value: title,\n    className: classes.title,\n    onChange: e => handleTitleChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 11\n    }\n  }), __jsx(Menu, {\n    id: \"dot-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handlePopoverClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 11\n    }\n  }, __jsx(MenuItem, {\n    onClick: handleMoveToTrash,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, \"Move to trash\")), __jsx(\"span\", {\n    className: classes.dot,\n    onClick: handlePopoverOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 11\n    }\n  }, __jsx(HiDotsHorizontal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  })), !!ReactQuill && isOpen && __jsx(ReactQuill, {\n    theme: theme,\n    onChange: handleChange,\n    value: contents,\n    modules: modules,\n    formats: formats,\n    bounds: '.app',\n    placeholder: placeholder,\n    className: classes.editor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/editor.tsx"],"names":["React","useEffect","useState","createStyles","makeStyles","HiDotsHorizontal","Menu","MenuItem","Modal","Button","useStyles","theme","title","outline","width","paddingLeft","margin","border","backgroundColor","fontSize","editor","minWidth","wordBreak","paddingBottom","editorInTrash","padding","dot","position","float","right","cursor","marginTop","modal","display","alignItems","justifyContent","paper","boxShadow","shadows","spacing","textAlign","borderRadius","button","height","placeholder","modules","toolbar","header","font","color","size","list","indent","clipboard","matchVisual","formats","Editor","props","isOpen","setOpen","ReactQuill","require","classes","setTitle","isDelete","setIsDeleted","contents","setContents","lastNotebook","setLastNotebook","anchorEl","setAnchorEl","modalOpen","setModalOpen","handleModalOpen","handlePopoverClose","handleModalClose","handlePopoverOpen","event","currentTarget","handleChange","html","newNote","currentNote","note","updateNote","notebooks","notebook","id","getNote","notebookId","noteId","newContents","notes","filter","noteTitle","isDeleted","handleTitleChange","e","target","value","handleMoveToTrash","moveNote","handleRestore","handleDelete","deleteNote","handleSnackbar","Boolean","__html"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { HiDotsHorizontal } from 'react-icons/hi';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport INote from './interfaces/inote';\nimport INoteProps from './interfaces/inoteprops';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      outline: 'none',\n      width: '95%',\n      paddingLeft: '15px',\n      margin: '0px',\n      border: 'none',\n      backgroundColor: 'rgb(248,248,248)',\n      fontSize: '24px',\n    },\n    editor: {\n      width: '100%',\n      minWidth: '400px',\n      wordBreak: 'break-word',\n      paddingBottom: '10px',\n      '&:hover': {\n        backgroundColor: 'white',\n      },\n    },\n    editorInTrash: {\n      width: '100%',\n      minWidth: '600px',\n      wordBreak: 'break-word',\n      padding: '15px',\n    },\n    dot: {\n      position: 'absolute',\n      float: 'right',\n      right: '20px',\n      cursor: 'pointer',\n      marginTop: '10px',\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: 'rgb(222, 222, 222)',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(1, 2, 2),\n      textAlign: 'center',\n      width: '350px',\n      borderRadius: '5px',\n      fontSize: '12px',\n      outline: 'none',\n    },\n    button: {\n      height: '30px',\n      margin: '10px 15px',\n    },\n  })\n);\n\nconst theme = 'snow';\nconst placeholder = `What's in your mind?`;\nconst modules = {\n  toolbar: [\n    [{ header: '1' }, { header: '2' }, { font: [] }, { color: [] }],\n    [{ size: [] }],\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n    [\n      { list: 'ordered' },\n      { list: 'bullet' },\n      { indent: '-1' },\n      { indent: '+1' },\n    ],\n    ['link', 'image', 'video'],\n    ['clean'],\n  ],\n  clipboard: {\n    matchVisual: false,\n  },\n};\nconst formats = [\n  'header',\n  'font',\n  'color',\n  'size',\n  'bold',\n  'italic',\n  'underline',\n  'strike',\n  'blockquote',\n  'list',\n  'bullet',\n  'indent',\n  'link',\n  'image',\n  // 'video',\n];\n\nexport default function Editor(props: INoteProps) {\n  const [isOpen, setOpen] = useState(false);\n  const ReactQuill =\n    typeof window === 'object' ? require('react-quill') : () => false;\n  const classes = useStyles();\n  const [title, setTitle] = useState<string>('');\n  const [isDelete, setIsDeleted] = useState<boolean>(false);\n  const [contents, setContents] = useState<any>('');\n  const [lastNotebook, setLastNotebook] = useState<string>('');\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [modalOpen, setModalOpen] = React.useState(false);\n\n  const handleModalOpen = () => {\n    handlePopoverClose();\n    setModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n\n  const handlePopoverOpen = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  useEffect(() => {\n    setOpen(true);\n  }, []);\n\n  const handleChange = (html: string) => {\n    setContents(html);\n    const newNote = {\n      ...props.currentNote,\n      note: html,\n    };\n    props.updateNote(\n      props.notebooks[props.notebook].id,\n      props.currentNote.id,\n      newNote\n    );\n  };\n\n  const getNote = (notebookId: string, noteId: string) => {\n    const newContents = props.notebooks[notebookId].notes.filter(\n      (note: any) => note.id === noteId\n    );\n    setTitle(newContents[0].noteTitle);\n    setContents(newContents[0].note);\n    setIsDeleted(newContents[0].isDeleted);\n    setLastNotebook(newContents[0].lastNotebook);\n  };\n\n  useEffect(() => {\n    getNote(props.notebook, props.currentNote.id);\n  }, [props.notebook, props.currentNote]);\n\n  const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    const newNote = {\n      ...props.currentNote,\n      noteTitle: e.target.value,\n    };\n    props.updateNote(\n      props.notebooks[props.notebook].id,\n      props.currentNote?.id,\n      newNote\n    );\n  };\n\n  const handleMoveToTrash = () => {\n    props.moveNote(props.notebook, 'trash', props.currentNote?.id);\n    handlePopoverClose();\n  };\n\n  const handleRestore = () => {\n    props.moveNote('trash', lastNotebook, props.currentNote?.id);\n    handlePopoverClose();\n  };\n\n  const handleDelete = () => {\n    props.deleteNote('trash', props.currentNote?.id);\n    handlePopoverClose();\n    handleModalClose();\n  };\n\n  return (\n    <>\n      {isDelete ? (\n        <>\n          <span\n            className={classes.title}\n            onClick={() =>\n              props.handleSnackbar(\n                'You can not update a note title in the Trash',\n                'error'\n              )\n            }\n          >\n            {title}\n          </span>\n          <Menu\n            id=\"dot-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handlePopoverClose}\n          >\n            <MenuItem onClick={handleRestore}>Restore</MenuItem>\n            <MenuItem onClick={handleModalOpen}>Delete</MenuItem>\n          </Menu>\n          <span className={classes.dot} onClick={handlePopoverOpen}>\n            <HiDotsHorizontal />\n          </span>\n          <div\n            className={classes.editorInTrash}\n            dangerouslySetInnerHTML={{ __html: contents }}\n            onClick={() =>\n              props.handleSnackbar(\n                'You can not update a note in the Trash',\n                'error'\n              )\n            }\n          />\n          <Modal\n            open={modalOpen}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n            className={classes.modal}\n          >\n            <div className={classes.paper}>\n              <h2 id=\"simple-modal-title\">Are you really want to delete?</h2>\n              <p id=\"simple-modal-description\">\n                You will permanently delete this note.\n              </p>\n              <Button\n                className={classes.button}\n                variant=\"outlined\"\n                color=\"secondary\"\n                onClick={handleDelete}\n              >\n                Delete\n              </Button>\n              <Button\n                className={classes.button}\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={handleModalClose}\n              >\n                Cancel\n              </Button>\n            </div>\n          </Modal>\n        </>\n      ) : (\n        <>\n          <input\n            value={title}\n            className={classes.title}\n            onChange={(e: any) => handleTitleChange(e)}\n          />\n          <Menu\n            id=\"dot-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handlePopoverClose}\n          >\n            <MenuItem onClick={handleMoveToTrash}>Move to trash</MenuItem>\n          </Menu>\n          <span className={classes.dot} onClick={handlePopoverOpen}>\n            <HiDotsHorizontal />\n          </span>\n          {!!ReactQuill && isOpen && (\n            <ReactQuill\n              theme={theme}\n              onChange={handleChange}\n              value={contents}\n              modules={modules}\n              formats={formats}\n              bounds={'.app'}\n              placeholder={placeholder}\n              className={classes.editor}\n            />\n          )}\n        </>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}