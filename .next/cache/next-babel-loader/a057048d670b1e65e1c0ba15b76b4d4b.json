{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Main from '../components/main';\nimport IndexPage from '../components/index-page';\nimport Disclaimer from '../components/disclaimer';\n\nvar _default = /*#__PURE__*/function (_Component) {\n  _inherits(_default, _Component);\n\n  var _super = _createSuper(_default);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isAcceptDisclaimer: false\n    };\n    _this.setIsAcceptDisclaimer = _this.setIsAcceptDisclaimer.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (localStorage.getItem('omeganoteaccept')) {\n        this.setIsAcceptDisclaimer(true);\n      }\n    }\n  }, {\n    key: \"setIsAcceptDisclaimer\",\n    value: function setIsAcceptDisclaimer(isAccepted) {\n      this.setState({\n        isAcceptDisclaimer: isAccepted\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(IndexPage, null), __jsx(Main, null), !this.state.isAcceptDisclaimer && __jsx(Disclaimer, {\n        setIsAcceptDisclaimer: this.setIsAcceptDisclaimer\n      }));\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":null,"metadata":{},"sourceType":"module"}