{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note-list-item.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { useDrag } from 'react-dnd';\nimport Preview from 'react-dnd-preview';\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n    margin: 'auto',\n    color: 'rgb(51,51,51)',\n    fontSize: '16px',\n    width: '100%'\n  },\n  title: {\n    padding: '10px',\n    fontSize: '22px'\n  },\n  box: {\n    position: 'sticky',\n    height: '100px',\n    cursor: 'pointer',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  list: {\n    '&:active': {\n      opacity: '0.3'\n    }\n  },\n  noteTitle: {\n    padding: '10px 20px 0px 20px',\n    color: 'rgb(61,61,61)'\n  },\n  noteContent: {\n    padding: '5px 20px',\n    fontSize: '14px',\n    color: 'rgb(115,115,115)'\n  },\n  empty: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 'auto',\n    textAlign: 'center',\n    padding: '35px'\n  },\n  emptyIcon: {\n    fontSize: '75px'\n  },\n  newNoteText: {\n    cursor: 'pointer',\n    color: 'rgb(0,168,45)'\n  }\n}));\nexport default function NoteListItem(props) {\n  const classes = useStyles();\n  const [{\n    opacity\n  }, drag, preview] = useDrag({\n    item: {\n      type: 'note'\n    },\n    collect: monitor => ({\n      opacity: monitor.isDragging() ? 0.4 : 1\n    })\n  });\n\n  const generatePreview = ({\n    itemType,\n    item,\n    style\n  }) => {\n    return __jsx(\"div\", {\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 12\n      }\n    }, props.noteTitle);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    ref: drag,\n    style: {\n      opacity\n    },\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.noteTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, props.noteTitle), __jsx(\"div\", {\n    className: classes.noteContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, props.note))), __jsx(Preview, {\n    generator: generatePreview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note-list-item.tsx"],"names":["React","createStyles","makeStyles","useDrag","Preview","useStyles","theme","root","display","flexDirection","height","margin","color","fontSize","width","title","padding","box","position","cursor","list","opacity","noteTitle","noteContent","empty","alignItems","justifyContent","textAlign","emptyIcon","newNoteText","NoteListItem","props","classes","drag","preview","item","type","collect","monitor","isDragging","generatePreview","itemType","style","note"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { DragPreviewImage, useDrag } from 'react-dnd';\nimport Preview from 'react-dnd-preview';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      margin: 'auto',\n      color: 'rgb(51,51,51)',\n      fontSize: '16px',\n      width: '100%',\n    },\n    title: {\n      padding: '10px',\n      fontSize: '22px',\n    },\n    box: {\n      position: 'sticky',\n      height: '100px',\n      cursor: 'pointer',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    list: {\n      '&:active': {\n        opacity: '0.3',\n      },\n    },\n    noteTitle: {\n      padding: '10px 20px 0px 20px',\n      color: 'rgb(61,61,61)',\n    },\n    noteContent: {\n      padding: '5px 20px',\n      fontSize: '14px',\n      color: 'rgb(115,115,115)',\n    },\n    empty: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: 'auto',\n      textAlign: 'center',\n      padding: '35px',\n    },\n    emptyIcon: {\n      fontSize: '75px',\n    },\n    newNoteText: {\n      cursor: 'pointer',\n      color: 'rgb(0,168,45)',\n    },\n  })\n);\n\nexport default function NoteListItem(props: any) {\n  const classes = useStyles();\n\n  const [{ opacity }, drag, preview] = useDrag({\n    item: { type: 'note' },\n    collect: (monitor) => ({\n      opacity: monitor.isDragging() ? 0.4 : 1,\n    }),\n  });\n\n  const generatePreview = ({ itemType, item, style }) => {\n    return <div style={style}>{props.noteTitle}</div>;\n  };\n\n  return (\n    <>\n      <div className={classes.box}>\n        <div ref={drag} style={{ opacity }} className={classes.list}>\n          <div className={classes.noteTitle}>{props.noteTitle}</div>\n          <div className={classes.noteContent}>{props.note}</div>\n        </div>\n      </div>\n      <Preview generator={generatePreview} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}