{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from 'react';\nimport NoteList from './note-list';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      display: 'flex',\n      flexDdirection: 'row',\n      height: '100vh'\n    },\n    spinner: {\n      display: 'flex',\n      flexDdirection: 'column',\n      justifySelf: 'center',\n      alignSelf: 'center',\n      width: '100%',\n      height: '100vh',\n      margin: 'auto'\n    },\n    box: {\n      display: 'flex',\n      flexDdirection: 'column',\n      backgroundColor: 'rgb(248, 248, 248)',\n      padding: '10px',\n      height: '100vh',\n      resize: 'horizontal',\n      minWidth: '200px',\n      width: '300px',\n      maxWidth: '400px',\n      overflow: 'hidden',\n      borderRight: '1px solid rgb(230, 230, 230)'\n    }\n  });\n});\nexport default function Note(props) {\n  _s();\n\n  var classes = useStyles();\n  var editorRef = useRef();\n\n  var _useState = useState(false),\n      editorLoaded = _useState[0],\n      setEditorLoaded = _useState[1];\n\n  var _ref = editorRef.current || {},\n      CKEditor = _ref.CKEditor,\n      ClassicEditor = _ref.ClassicEditor;\n\n  useEffect(function () {\n    editorRef.current = {\n      CKEditor: require('@ckeditor/ckeditor5-react'),\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic')\n    };\n    setEditorLoaded(true);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(DndProvider, {\n    backend: HTML5Backend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, __jsx(NoteList, {\n    notebooks: props.notebooks,\n    notebookOrder: props.notebookOrder,\n    notebook: props.notebook,\n    addNewNote: props.addNewNote,\n    updateNote: props.updateNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, !editorLoaded ? __jsx(CKEditor, {\n    editor: ClassicEditor,\n    data: \"<p>Hello from CKEditor 5!</p>\",\n    onInit: function onInit(editor) {\n      // You can store the \"editor\" and use when it is needed.\n      console.log('Editor is ready to use!', editor);\n    },\n    onChange: function onChange(event, editor) {\n      var data = editor.getData();\n      console.log({\n        event: event,\n        editor: editor,\n        data: data\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }) : __jsx(\"div\", {\n    className: classes.spinner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, __jsx(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  })))));\n}\n\n_s(Note, \"IwLTHnYmbYDCO/GYeLdnGDkFBT0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note.tsx"],"names":["React","useEffect","useState","useRef","NoteList","createStyles","makeStyles","DndProvider","HTML5Backend","CircularProgress","useStyles","theme","root","display","flexDdirection","height","spinner","justifySelf","alignSelf","width","margin","box","backgroundColor","padding","resize","minWidth","maxWidth","overflow","borderRight","Note","props","classes","editorRef","editorLoaded","setEditorLoaded","current","CKEditor","ClassicEditor","require","notebooks","notebookOrder","notebook","addNewNote","updateNote","editor","console","log","event","data","getData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport NoteList from './note-list';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDdirection: 'row',\n      height: '100vh',\n    },\n    spinner: {\n      display: 'flex',\n      flexDdirection: 'column',\n      justifySelf: 'center',\n      alignSelf: 'center',\n      width: '100%',\n      height: '100vh',\n      margin: 'auto',\n    },\n    box: {\n      display: 'flex',\n      flexDdirection: 'column',\n      backgroundColor: 'rgb(248, 248, 248)',\n      padding: '10px',\n      height: '100vh',\n      resize: 'horizontal',\n      minWidth: '200px',\n      width: '300px',\n      maxWidth: '400px',\n      overflow: 'hidden',\n      borderRight: '1px solid rgb(230, 230, 230)',\n    },\n  })\n);\n\nexport default function Note(props: any) {\n  const classes = useStyles();\n  const editorRef = useRef() as any;\n  const [editorLoaded, setEditorLoaded] = useState(false);\n  const { CKEditor, ClassicEditor } = (editorRef.current as any) || {};\n\n  useEffect(() => {\n    editorRef.current = {\n      CKEditor: require('@ckeditor/ckeditor5-react'),\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic'),\n    };\n    setEditorLoaded(true);\n  }, []);\n\n  return (\n    <>\n      <div className={classes.root}>\n        <div className={classes.box}>\n          <DndProvider backend={HTML5Backend}>\n            <NoteList\n              notebooks={props.notebooks}\n              notebookOrder={props.notebookOrder}\n              notebook={props.notebook}\n              addNewNote={props.addNewNote}\n              updateNote={props.updateNote}\n            />\n          </DndProvider>\n        </div>\n        <div>\n          {!editorLoaded ? (\n            <CKEditor\n              editor={ClassicEditor}\n              data=\"<p>Hello from CKEditor 5!</p>\"\n              onInit={(editor: any) => {\n                // You can store the \"editor\" and use when it is needed.\n                console.log('Editor is ready to use!', editor);\n              }}\n              onChange={(event: any, editor: any) => {\n                const data = editor.getData();\n                console.log({ event, editor, data });\n              }}\n            />\n          ) : (\n            <div className={classes.spinner}>\n              <CircularProgress />\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}