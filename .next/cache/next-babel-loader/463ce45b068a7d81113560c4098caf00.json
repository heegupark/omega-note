{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/editor.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexDdirection: 'row',\n    height: '100vh'\n  },\n  loading: {\n    margin: '20px 20px 0px 20px'\n  },\n  progress: {\n    width: '100%',\n    margin: '20px 20px 0px 20px',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  },\n  box: {\n    display: 'flex',\n    flexDdirection: 'column',\n    backgroundColor: 'rgb(248, 248, 248)',\n    padding: '10px',\n    height: '100vh',\n    resize: 'horizontal',\n    minWidth: '200px',\n    width: '300px',\n    maxWidth: '400px',\n    overflow: 'hidden',\n    borderRight: '1px solid rgb(230, 230, 230)'\n  }\n}));\nexport default function Note(props) {\n  const classes = useStyles();\n  const editorRef = useRef();\n  const {\n    0: editorLoaded,\n    1: setEditorLoaded\n  } = useState(false);\n  const {\n    CKEditor,\n    ClassicEditor\n  } = editorRef.current || {};\n  useEffect(() => {\n    editorRef.current = {\n      CKEditor: require('@ckeditor/ckeditor5-react'),\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic')\n    };\n    setEditorLoaded(true);\n  }, []);\n  return __jsx(React.Fragment, null, editorLoaded ? __jsx(CKEditor, {\n    editor: ClassicEditor,\n    data: \"<p>Hello from CKEditor 5!</p>\",\n    onInit: editor => {\n      // You can store the \"editor\" and use when it is needed.\n      console.log('Editor is ready to use!', editor);\n    },\n    onChange: (event, editor) => {\n      const data = editor.getData();\n      console.log({\n        event,\n        editor,\n        data\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, 'loading editor...'), __jsx(\"div\", {\n    className: classes.progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, __jsx(LinearProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/editor.tsx"],"names":["React","useEffect","useState","useRef","createStyles","makeStyles","LinearProgress","useStyles","theme","root","display","flexDdirection","height","loading","margin","progress","width","marginTop","spacing","box","backgroundColor","padding","resize","minWidth","maxWidth","overflow","borderRight","Note","props","classes","editorRef","editorLoaded","setEditorLoaded","CKEditor","ClassicEditor","current","require","editor","console","log","event","data","getData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport NoteList from './note-list';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDdirection: 'row',\n      height: '100vh',\n    },\n    loading: {\n      margin: '20px 20px 0px 20px',\n    },\n    progress: {\n      width: '100%',\n      margin: '20px 20px 0px 20px',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    box: {\n      display: 'flex',\n      flexDdirection: 'column',\n      backgroundColor: 'rgb(248, 248, 248)',\n      padding: '10px',\n      height: '100vh',\n      resize: 'horizontal',\n      minWidth: '200px',\n      width: '300px',\n      maxWidth: '400px',\n      overflow: 'hidden',\n      borderRight: '1px solid rgb(230, 230, 230)',\n    },\n  })\n);\n\nexport default function Note(props: any) {\n  const classes = useStyles();\n  const editorRef = useRef() as any;\n  const [editorLoaded, setEditorLoaded] = useState(false);\n  const { CKEditor, ClassicEditor } = (editorRef.current as any) || {};\n\n  useEffect(() => {\n    editorRef.current = {\n      CKEditor: require('@ckeditor/ckeditor5-react'),\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic'),\n    };\n    setEditorLoaded(true);\n  }, []);\n\n  return (\n    <>\n      {editorLoaded ? (\n        <CKEditor\n          editor={ClassicEditor}\n          data=\"<p>Hello from CKEditor 5!</p>\"\n          onInit={(editor: any) => {\n            // You can store the \"editor\" and use when it is needed.\n            console.log('Editor is ready to use!', editor);\n          }}\n          onChange={(event: any, editor: any) => {\n            const data = editor.getData();\n            console.log({ event, editor, data });\n          }}\n        />\n      ) : (\n        <>\n          <div className={classes.loading}>{'loading editor...'}</div>\n          <div className={classes.progress}>\n            <LinearProgress />\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}