{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/notebooks.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport arraySort from 'array-sort';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      margin: 'auto'\n    },\n    notebook: {\n      fontSize: '24px',\n      padding: '20px 30px'\n    },\n    paper: {\n      width: 800,\n      height: '100vh',\n      padding: '10px 30px'\n    },\n    table: {\n      width: '100%',\n      color: 'rgb(51,51,51)'\n    },\n    row: {\n      '&:hover': {\n        backgroundColor: 'lightgrey',\n        color: 'white'\n      }\n    },\n    arrow: {\n      padding: '0px 5px',\n      fontSize: '16px'\n    },\n    cell: {\n      cursor: 'pointer',\n      width: '25%'\n    }\n  });\n});\nexport default function Notebooks(props) {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _useState = useState('title'),\n      category = _useState[0],\n      setCategory = _useState[1];\n\n  var _useState2 = useState(false),\n      reverse = _useState2[0],\n      setReverse = _useState2[1];\n\n  var getTimeMsg = function getTimeMsg(date) {\n    var createdTime = new Date(date).valueOf();\n    var currentTime = new Date().valueOf();\n    var second = 60;\n    var minute = 60;\n    var hour = 24;\n    var divider = 1;\n    var timeMsg = '';\n    var diff = (currentTime - createdTime) / 1000;\n\n    if (diff <= second) {\n      timeMsg = 'second';\n    } else if (diff <= second * minute) {\n      divider = second;\n      timeMsg = 'minute';\n    } else if (diff <= second * minute * hour) {\n      divider = second * minute;\n      timeMsg = 'hour';\n    } else if (diff <= 172800) {\n      return 'Yesterday';\n    } else {\n      var dateArr = date.toString().split(' ');\n      return \"\".concat(dateArr[1], \" \").concat(dateArr[2], \", \").concat(dateArr[3]);\n    }\n\n    diff /= divider;\n    var displayTime = Math.abs(Math.round(diff));\n    var plural = displayTime > 1 ? 's' : '';\n    var timeMessage = \"\".concat(displayTime, \" \").concat(timeMsg).concat(plural, \" ago\");\n    return timeMessage;\n  };\n\n  var createData = function createData(id, title, displayTitle, noteCount, createdAt, updatedAt) {\n    return {\n      id: id,\n      title: title,\n      displayTitle: displayTitle,\n      noteCount: noteCount,\n      createdAt: createdAt,\n      updatedAt: updatedAt\n    };\n  };\n\n  var rows = props.notebookOrder.map(function (notebook) {\n    return createData(props.notebooks[notebook].id, props.notebooks[notebook].title.toLowerCase(), props.notebooks[notebook].title, props.notebooks[notebook].notes.length, getTimeMsg(props.notebooks[notebook].createdAt), getTimeMsg(props.notebooks[notebook].updatedAt));\n  });\n\n  var handleSort = function handleSort(cat) {\n    setCategory(cat);\n    setReverse(false);\n\n    if (cat === category) {\n      setReverse(!reverse);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.notebook,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, \"Notebooks\"), __jsx(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, __jsx(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, __jsx(Table, {\n    className: classes.table,\n    \"aria-label\": \"customized table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, __jsx(TableCell, {\n    style: {},\n    onClick: function onClick() {\n      return handleSort('title');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, \"Title\", category === 'title' && __jsx(\"span\", {\n    className: classes.arrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, reverse ? '↓' : '↑')), __jsx(TableCell, {\n    align: \"center\",\n    style: {\n      cursor: 'pointer',\n      width: '25%'\n    },\n    onClick: function onClick() {\n      return handleSort('noteCount');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, \"Number of Notes\", category === 'noteCount' && __jsx(\"span\", {\n    className: classes.arrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, reverse ? '↓' : '↑')), __jsx(TableCell, {\n    align: \"center\",\n    style: {\n      cursor: 'pointer',\n      width: '25%'\n    },\n    onClick: function onClick() {\n      return handleSort('createdAt');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, \"Created Date\", category === 'createdAt' && __jsx(\"span\", {\n    className: classes.arrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, reverse ? '↓' : '↑')), __jsx(TableCell, {\n    align: \"center\",\n    style: {\n      cursor: 'pointer',\n      width: '25%'\n    },\n    onClick: function onClick() {\n      return handleSort('updatedAt');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, \"Update Date\", category === 'updatedAt' && __jsx(\"span\", {\n    className: classes.arrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, reverse ? '↓' : '↑')))), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, arraySort(rows, category, {\n    reverse: reverse\n  }).map(function (row) {\n    return __jsx(TableRow, {\n      key: row.id,\n      className: classes.row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, __jsx(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      onClick: function onClick() {\n        return props.handleNotebookClick(row.id);\n      },\n      style: {\n        cursor: 'pointer'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 19\n      }\n    }, row.displayTitle), __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 19\n      }\n    }, row.noteCount), __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }, row.createdAt), __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 19\n      }\n    }, row.updatedAt));\n  }))))));\n}\n\n_s(Notebooks, \"LCDKhMTJnorlSUXmvTPlATS8izs=\", false, function () {\n  return [useStyles];\n});\n\n_c = Notebooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notebooks\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/notebooks.tsx"],"names":["React","useState","createStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","arraySort","useStyles","theme","root","display","flexDirection","height","margin","notebook","fontSize","padding","paper","width","table","color","row","backgroundColor","arrow","cell","cursor","Notebooks","props","classes","category","setCategory","reverse","setReverse","getTimeMsg","date","createdTime","Date","valueOf","currentTime","second","minute","hour","divider","timeMsg","diff","dateArr","toString","split","displayTime","Math","abs","round","plural","timeMessage","createData","id","title","displayTitle","noteCount","createdAt","updatedAt","rows","notebookOrder","map","notebooks","toLowerCase","notes","length","handleSort","cat","handleNotebookClick"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport INotebook from './interfaces/inotebook';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport arraySort from 'array-sort';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      margin: 'auto',\n    },\n    notebook: {\n      fontSize: '24px',\n      padding: '20px 30px',\n    },\n    paper: {\n      width: 800,\n      height: '100vh',\n      padding: '10px 30px',\n    },\n    table: {\n      width: '100%',\n      color: 'rgb(51,51,51)',\n    },\n    row: {\n      '&:hover': {\n        backgroundColor: 'lightgrey',\n        color: 'white',\n      },\n    },\n    arrow: {\n      padding: '0px 5px',\n      fontSize: '16px',\n    },\n    cell: {\n      cursor: 'pointer',\n      width: '25%',\n    },\n  })\n);\n\ninterface INotebooksProps {\n  notebooks: INotebook;\n  notebookOrder: Array<string>;\n  handleNotebookClick: (notebook: string) => void;\n}\n\nexport default function Notebooks(props: INotebooksProps) {\n  const classes = useStyles();\n  const [category, setCategory] = useState<string>('title');\n  const [reverse, setReverse] = useState<boolean>(false);\n\n  const getTimeMsg = (date: Date) => {\n    const createdTime = new Date(date).valueOf();\n    const currentTime = new Date().valueOf();\n    const second = 60;\n    const minute = 60;\n    const hour = 24;\n    let divider = 1;\n    let timeMsg = '';\n    let diff = (currentTime - createdTime) / 1000;\n    if (diff <= second) {\n      timeMsg = 'second';\n    } else if (diff <= second * minute) {\n      divider = second;\n      timeMsg = 'minute';\n    } else if (diff <= second * minute * hour) {\n      divider = second * minute;\n      timeMsg = 'hour';\n    } else if (diff <= 172800) {\n      return 'Yesterday';\n    } else {\n      const dateArr = date.toString().split(' ');\n      return `${dateArr[1]} ${dateArr[2]}, ${dateArr[3]}`;\n    }\n    diff /= divider;\n    const displayTime = Math.abs(Math.round(diff));\n    const plural = displayTime > 1 ? 's' : '';\n    const timeMessage = `${displayTime} ${timeMsg}${plural} ago`;\n    return timeMessage;\n  };\n\n  const createData = (\n    id: string,\n    title: string,\n    displayTitle: string,\n    noteCount: number,\n    createdAt: string,\n    updatedAt: string\n  ) => {\n    return { id, title, displayTitle, noteCount, createdAt, updatedAt };\n  };\n\n  const rows = props.notebookOrder.map((notebook: string) => {\n    return createData(\n      props.notebooks[notebook].id,\n      props.notebooks[notebook].title.toLowerCase(),\n      props.notebooks[notebook].title,\n      props.notebooks[notebook].notes.length,\n      getTimeMsg(props.notebooks[notebook].createdAt),\n      getTimeMsg(props.notebooks[notebook].updatedAt)\n    );\n  });\n\n  const handleSort = (cat: string) => {\n    setCategory(cat);\n    setReverse(false);\n    if (cat === category) {\n      setReverse(!reverse);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.notebook}>Notebooks</div>\n      <div className={classes.paper}>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                <TableCell style={{}} onClick={() => handleSort('title')}>\n                  Title\n                  {category === 'title' && (\n                    <span className={classes.arrow}>{reverse ? '↓' : '↑'}</span>\n                  )}\n                </TableCell>\n                <TableCell\n                  align=\"center\"\n                  style={{ cursor: 'pointer', width: '25%' }}\n                  onClick={() => handleSort('noteCount')}\n                >\n                  Number of Notes\n                  {category === 'noteCount' && (\n                    <span className={classes.arrow}>{reverse ? '↓' : '↑'}</span>\n                  )}\n                </TableCell>\n                <TableCell\n                  align=\"center\"\n                  style={{ cursor: 'pointer', width: '25%' }}\n                  onClick={() => handleSort('createdAt')}\n                >\n                  Created Date\n                  {category === 'createdAt' && (\n                    <span className={classes.arrow}>{reverse ? '↓' : '↑'}</span>\n                  )}\n                </TableCell>\n                <TableCell\n                  align=\"center\"\n                  style={{ cursor: 'pointer', width: '25%' }}\n                  onClick={() => handleSort('updatedAt')}\n                >\n                  Update Date\n                  {category === 'updatedAt' && (\n                    <span className={classes.arrow}>{reverse ? '↓' : '↑'}</span>\n                  )}\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {arraySort(rows, category, { reverse }).map((row) => (\n                <TableRow key={row.id} className={classes.row}>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    onClick={() => props.handleNotebookClick(row.id)}\n                    style={{ cursor: 'pointer' }}\n                  >\n                    {row.displayTitle}\n                  </TableCell>\n                  <TableCell align=\"center\">{row.noteCount}</TableCell>\n                  <TableCell align=\"center\">{row.createdAt}</TableCell>\n                  <TableCell align=\"center\">{row.updatedAt}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}