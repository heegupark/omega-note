{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/notebooks.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      display: 'flex',\n      // alignItems: 'center',\n      // justifyItems: 'center',\n      flexDdirection: 'column',\n      height: '100vh',\n      margin: 'auto'\n    },\n    paper: {\n      display: 'flex',\n      // alignItems: 'center',\n      // justifyItems: 'center',\n      flexDdirection: 'row',\n      width: 800,\n      height: '100vh',\n      margin: 'auto',\n      padding: '50px'\n    },\n    table: {\n      width: '100%',\n      color: 'rgb(51,51,51)',\n      fontSize: '14px'\n    }\n  });\n});\nexport default function Notebooks(props) {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n\n  var getTimeMsg = function getTimeMsg(date) {\n    var createdTime = new Date(date).valueOf();\n    var currentTime = new Date().valueOf();\n    var second = 60;\n    var minute = 60;\n    var hour = 24;\n    var day = 30;\n    var month = 12;\n    var divider = 1;\n    var timeMsg = '';\n    var diff = (currentTime - createdTime) / 1000;\n\n    if (diff <= second) {\n      timeMsg = 'second';\n    } else if (diff <= second * minute) {\n      divider = second;\n      timeMsg = 'minute';\n    } else if (diff <= second * minute * hour) {\n      divider = second * minute;\n      timeMsg = 'hour';\n    } else if (diff <= 172800) {\n      return 'Yesterday';\n    } else {\n      return \"\".concat(date.getMonth(), \" \").concat(date.getDate(), \", \").concat(date.getFullYear());\n    }\n\n    diff /= divider;\n    var displayTime = Math.abs(Math.round(diff));\n    var plural = displayTime > 1 ? 's' : '';\n    var timeMessage = \"\".concat(displayTime, \" \").concat(timeMsg).concat(plural, \" ago\");\n    return timeMessage;\n  };\n\n  var createData = function createData(id, title, noteCount, createdAt, updatedAt) {\n    return {\n      id: id,\n      title: title,\n      noteCount: noteCount,\n      createdAt: createdAt,\n      updatedAt: updatedAt\n    };\n  };\n\n  var rows = props.notebookOrder.map(function (notebook) {\n    return createData(props.notebooks[notebook].id, props.notebooks[notebook].title, props.notebooks[notebook].notes.length, getTimeMsg(props.notebooks[notebook].createdAt), getTimeMsg(props.notebooks[notebook].updatedAt));\n  });\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, __jsx(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, __jsx(Table, {\n    className: classes.table,\n    \"aria-label\": \"customized table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"Notebook\"), __jsx(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"Number of Notes\"), __jsx(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"Created Date\"), __jsx(TableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, \"Update Date\"))), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, rows.map(function (row) {\n    return __jsx(TableRow, {\n      key: row.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, __jsx(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      onClick: function onClick() {\n        return props.handleNotebookClick(row.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, row.title), __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }, row.noteCount), __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }\n    }, row.createdAt), __jsx(TableCell, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    }, row.updatedAt));\n  }))))));\n}\n\n_s(Notebooks, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Notebooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notebooks\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/notebooks.tsx"],"names":["React","createStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useStyles","theme","root","display","flexDdirection","height","margin","paper","width","padding","table","color","fontSize","Notebooks","props","classes","getTimeMsg","date","createdTime","Date","valueOf","currentTime","second","minute","hour","day","month","divider","timeMsg","diff","getMonth","getDate","getFullYear","displayTime","Math","abs","round","plural","timeMessage","createData","id","title","noteCount","createdAt","updatedAt","rows","notebookOrder","map","notebook","notebooks","notes","length","row","handleNotebookClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport INotebook from './interfaces/inotebook';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      // alignItems: 'center',\n      // justifyItems: 'center',\n      flexDdirection: 'column',\n      height: '100vh',\n      margin: 'auto',\n    },\n    paper: {\n      display: 'flex',\n      // alignItems: 'center',\n      // justifyItems: 'center',\n      flexDdirection: 'row',\n      width: 800,\n      height: '100vh',\n      margin: 'auto',\n      padding: '50px',\n    },\n    table: {\n      width: '100%',\n      color: 'rgb(51,51,51)',\n      fontSize: '14px',\n    },\n  })\n);\n\ninterface INotebooksProps {\n  notebooks: INotebook;\n  notebookOrder: Array<string>;\n  handleNotebookClick: (notebook: string) => void;\n}\n\nexport default function Notebooks(props: INotebooksProps) {\n  const classes = useStyles();\n\n  const getTimeMsg = (date: Date) => {\n    const createdTime = new Date(date).valueOf();\n    const currentTime = new Date().valueOf();\n    const second = 60;\n    const minute = 60;\n    const hour = 24;\n    const day = 30;\n    const month = 12;\n    let divider = 1;\n    let timeMsg = '';\n    let diff = (currentTime - createdTime) / 1000;\n    if (diff <= second) {\n      timeMsg = 'second';\n    } else if (diff <= second * minute) {\n      divider = second;\n      timeMsg = 'minute';\n    } else if (diff <= second * minute * hour) {\n      divider = second * minute;\n      timeMsg = 'hour';\n    } else if (diff <= 172800) {\n      return 'Yesterday';\n    } else {\n      return `${date.getMonth()} ${date.getDate()}, ${date.getFullYear()}`;\n    }\n    diff /= divider;\n    const displayTime = Math.abs(Math.round(diff));\n    const plural = displayTime > 1 ? 's' : '';\n    const timeMessage = `${displayTime} ${timeMsg}${plural} ago`;\n    return timeMessage;\n  };\n\n  const createData = (\n    id: string,\n    title: string,\n    noteCount: number,\n    createdAt: string,\n    updatedAt: string\n  ) => {\n    return { id, title, noteCount, createdAt, updatedAt };\n  };\n\n  const rows = props.notebookOrder.map((notebook: string) => {\n    return createData(\n      props.notebooks[notebook].id,\n      props.notebooks[notebook].title,\n      props.notebooks[notebook].notes.length,\n      getTimeMsg(props.notebooks[notebook].createdAt),\n      getTimeMsg(props.notebooks[notebook].updatedAt)\n    );\n  });\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.paper}>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Notebook</TableCell>\n                <TableCell align=\"center\">Number of Notes</TableCell>\n                <TableCell align=\"center\">Created Date</TableCell>\n                <TableCell align=\"center\">Update Date</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    onClick={() => props.handleNotebookClick(row.id)}\n                  >\n                    {row.title}\n                  </TableCell>\n                  <TableCell align=\"center\">{row.noteCount}</TableCell>\n                  <TableCell align=\"center\">{row.createdAt}</TableCell>\n                  <TableCell align=\"center\">{row.updatedAt}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}