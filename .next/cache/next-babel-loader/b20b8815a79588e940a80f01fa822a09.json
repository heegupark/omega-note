{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/main.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from 'react'; // import Disclaimer from './disclaimer';\n\nimport Sidebar from './sidebar';\nimport Note from './note';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { v4 as uuidv4 } from 'uuid';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Moment from 'react-moment';\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex'\n  }\n}));\n\nfunction Alert(props) {\n  return __jsx(MuiAlert, _extends({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  }));\n}\n\nexport default function Main() {\n  const classes = useStyles();\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const {\n    0: message,\n    1: setMessage\n  } = useState('');\n  const {\n    0: severity,\n    1: setSeverity\n  } = useState('success');\n  const {\n    0: notebook,\n    1: setNotebook\n  } = useState('notebook-0');\n  const {\n    0: currentNoteId,\n    1: setCurrentNoteId\n  } = useState('');\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    notebooks: {\n      'notebook-0': {\n        id: 'notebook-0',\n        title: 'Work',\n        notes: [{\n          id: 'note-00',\n          noteTitle: 'Tech interview',\n          note: '<p>I need to prepare interview!</p>',\n          isDeleted: false,\n          lastNotebook: '',\n          createdAt: new Date(2020, 8, 10),\n          updatedAt: new Date(2020, 8, 10)\n        }, {\n          id: 'note-01',\n          noteTitle: 'Meet up',\n          note: '<p>Fun meet up!</p>',\n          isDeleted: false,\n          lastNotebook: '',\n          createdAt: new Date(2020, 8, 11),\n          updatedAt: new Date(2020, 8, 11)\n        }],\n        createdAt: new Date(2020, 8, 1),\n        updatedAt: new Date(2020, 8, 11)\n      },\n      'notebook-1': {\n        id: 'notebook-1',\n        title: 'Personal',\n        notes: [{\n          id: 'note-10',\n          noteTitle: 'Pay Utilities',\n          note: '<p>I need to pay gas today!</p>',\n          isDeleted: false,\n          lastNotebook: '',\n          createdAt: new Date(2020, 8, 11),\n          updatedAt: new Date(2020, 8, 11)\n        }],\n        createdAt: new Date(2020, 8, 1),\n        updatedAt: new Date(2020, 8, 11)\n      },\n      trash: {\n        id: 'trash',\n        title: 'Trash',\n        notes: [],\n        createdAt: new Date(),\n        updatedAt: new Date()\n      }\n    },\n    notebookOrder: ['notebook-0', 'notebook-1']\n  });\n  useEffect(() => {\n    setCurrentNoteIdByNotebook(notebook);\n  }, []);\n\n  const addNewNote = (title, note) => {\n    const newNote = {\n      id: uuidv4(),\n      noteTitle: title ? title : 'Untitled',\n      note: note ? note : '',\n      dragging: false,\n      isDeleted: false,\n      lastNotebook: '',\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n    state.notebooks[notebook].notes.unshift(newNote);\n    updateDate(notebook, undefined);\n    setCurrentNoteIdByNotebook(notebook);\n    handleSnackbar(`A note is created`, 'info');\n    setState(_objectSpread({}, state));\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const updateNote = (notebookId, noteId, newNote) => {\n    state.notebooks[notebookId].notes.map(note => {\n      if (note.id === noteId && (newNote.note && newNote.note !== note.note || newNote.noteTitle && newNote.noteTitle !== note.noteTitle)) {\n        note.noteTitle = newNote.noteTitle ? newNote.noteTitle : note.noteTitle;\n        note.note = newNote.note ? newNote.note : note.note; // note.isDeleted = newNote.isDeleted;\n\n        note.updatedAt = new Date();\n      }\n    });\n    state.notebooks[notebookId].updatedAt = new Date();\n    setState(_objectSpread({}, state));\n  };\n\n  const updateDate = (notebookId, noteId) => {\n    if (noteId) {\n      state.notebooks[notebookId].notes.map(note => {\n        if (note.id === noteId) {\n          note.updatedAt = new Date();\n        }\n      });\n    }\n\n    state.notebooks[notebookId].updatedAt = new Date();\n    setState(_objectSpread({}, state));\n  };\n\n  const moveNote = (origin, destination, noteId) => {\n    let tempNote = {};\n    state.notebooks[origin].notes.map((note, index) => {\n      if (note.id === noteId) {\n        if (destination === 'trash') {\n          note.isDeleted = true;\n        } else {\n          note.isDeleted = false;\n        }\n\n        note.lastNotebook = origin;\n        tempNote = note;\n        state.notebooks[origin].notes.splice(index, 1);\n      }\n    });\n    state.notebooks[destination].notes.push(tempNote);\n    state.notebooks[destination].updatedAt = new Date();\n    setCurrentNoteIdByNotebook(origin);\n    updateDate(origin, noteId);\n\n    if (destination === 'trash') {\n      handleSnackbar(`A note is moved to ${state.notebooks[destination].title}`, 'warning');\n    } else {\n      handleSnackbar(`A note is restored to ${state.notebooks[destination].title}`, 'success');\n    }\n\n    setState(_objectSpread({}, state));\n  };\n\n  const deleteNote = (notebookId, noteId) => {\n    state.notebooks[notebookId].notes.filter((note, index) => {\n      if (note.id === noteId) {\n        state.notebooks[notebookId].notes.splice(index, 1);\n      }\n    });\n    state.notebooks[notebookId].updatedAt = new Date();\n    setCurrentNoteIdByNotebook(notebookId);\n    updateDate(notebookId, noteId);\n    handleSnackbar(`A note is permanently deleted`, 'error');\n    setState(_objectSpread({}, state));\n  };\n\n  const formatDate = date => {\n    const createdTime = new Date(date).valueOf();\n    const currentTime = new Date().valueOf();\n    let diff = (currentTime - createdTime) / 1000;\n\n    if (diff <= 86400) {\n      return __jsx(Moment, {\n        fromNow: true,\n        date: date,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 14\n        }\n      });\n    } else if (diff <= 172800) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 14\n        }\n      }, \"Yesterday\");\n    } else {\n      return __jsx(Moment, {\n        format: \"MMM D, YYYY\",\n        date: new Date(date),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 14\n        }\n      });\n    }\n  };\n\n  const handleSnackbar = (message, severity) => {\n    setMessage(message);\n    setSeverity(severity);\n    setOpen(true);\n  };\n\n  const handleNotebookClick = notebookId => {\n    setNotebook(notebookId);\n    setCurrentNoteIdByNotebook(notebookId);\n  };\n\n  const setCurrentNoteIdByNotebook = notebookId => {\n    if (notebookId) {\n      setCurrentNoteId(state.notebooks[notebookId].notes.length > 0 ? state.notebooks[notebookId].notes[0].id : undefined);\n    }\n  };\n\n  const addNewNotebook = title => {\n    const id = uuidv4();\n    const newNotbook = {\n      id,\n      title,\n      notes: [],\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n    state.notebooks[id] = newNotbook;\n    state.notebookOrder.push(id);\n    handleNotebookClick(id);\n    handleSnackbar(`New notebook is created`, 'success');\n    setState(_objectSpread({}, state));\n  };\n\n  const removeNotebook = id => {\n    const title = state.notebooks[id].title;\n\n    for (let i = 0; i < state.notebooks[id].notes.length; i++) {\n      let tempNote = {};\n      note.isDeleted = true;\n      note.lastNotebook = origin;\n      tempNote = note;\n      state.notebooks[origin].notes.splice(index, 1);\n      state.notebooks[destination].notes.push(tempNote);\n      state.notebooks[destination].updatedAt = new Date();\n    }\n\n    delete state.notebooks[id];\n    state.notebookOrder.splice(state.notebookOrder.indexOf(id), 1);\n    const nextNotebook = state.notebookOrder.length > 0 ? state.notebookOrder[0] : '';\n\n    if (nextNotebook) {\n      setNotebook(nextNotebook);\n      setCurrentNoteIdByNotebook(nextNotebook);\n    } else {\n      setNotebook('');\n      setCurrentNoteIdByNotebook('');\n    }\n\n    handleSnackbar(`'${title}' is deleted`, 'error');\n    setState(_objectSpread({}, state));\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 5\n    }\n  }, __jsx(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }\n  }), __jsx(Sidebar, {\n    notebooks: state.notebooks,\n    notebookOrder: state.notebookOrder,\n    notebook: notebook,\n    addNewNote: addNewNote,\n    setNotebook: setNotebook,\n    setCurrentNoteId: setCurrentNoteId,\n    handleNotebookClick: handleNotebookClick,\n    addNewNotebook: addNewNotebook,\n    removeNotebook: removeNotebook,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }\n  }), __jsx(Note, {\n    notebooks: state.notebooks,\n    notebookOrder: state.notebookOrder,\n    notebook: notebook,\n    addNewNote: addNewNote,\n    open: open,\n    updateNote: updateNote,\n    currentNoteId: currentNoteId,\n    setCurrentNoteId: setCurrentNoteId,\n    formatDate: formatDate,\n    moveNote: moveNote,\n    handleSnackbar: handleSnackbar,\n    deleteNote: deleteNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }\n  }), __jsx(Snackbar, {\n    open: open,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    autoHideDuration: 1000,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }\n  }, __jsx(Alert, {\n    onClose: handleClose,\n    severity: severity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }\n  }, message)));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/main.tsx"],"names":["React","useState","useEffect","Sidebar","Note","createStyles","makeStyles","CssBaseline","v4","uuidv4","Snackbar","MuiAlert","Moment","useStyles","theme","root","display","Alert","props","Main","classes","open","setOpen","message","setMessage","severity","setSeverity","notebook","setNotebook","currentNoteId","setCurrentNoteId","state","setState","notebooks","id","title","notes","noteTitle","note","isDeleted","lastNotebook","createdAt","Date","updatedAt","trash","notebookOrder","setCurrentNoteIdByNotebook","addNewNote","newNote","dragging","unshift","updateDate","undefined","handleSnackbar","handleClose","event","reason","updateNote","notebookId","noteId","map","moveNote","origin","destination","tempNote","index","splice","push","deleteNote","filter","formatDate","date","createdTime","valueOf","currentTime","diff","handleNotebookClick","length","addNewNotebook","newNotbook","removeNotebook","i","indexOf","nextNotebook","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import Disclaimer from './disclaimer';\nimport Sidebar from './sidebar';\nimport Note from './note';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { v4 as uuidv4 } from 'uuid';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport Moment from 'react-moment';\nimport INote from './interfaces/inote';\nimport IUpdateNote from './interfaces/iupdatenote';\nimport INotebooks from './interfaces/inotebooks';\nimport INotebook from './interfaces/inotebook';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n  })\n);\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Main() {\n  const classes = useStyles();\n  const [open, setOpen] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>('');\n  const [severity, setSeverity] = useState<any>('success');\n  const [notebook, setNotebook] = useState<string>('notebook-0');\n  const [currentNoteId, setCurrentNoteId] = useState<string | undefined>('');\n  const [state, setState] = useState<INotebooks>({\n    notebooks: {\n      'notebook-0': {\n        id: 'notebook-0',\n        title: 'Work',\n        notes: [\n          {\n            id: 'note-00',\n            noteTitle: 'Tech interview',\n            note: '<p>I need to prepare interview!</p>',\n            isDeleted: false,\n            lastNotebook: '',\n            createdAt: new Date(2020, 8, 10),\n            updatedAt: new Date(2020, 8, 10),\n          },\n          {\n            id: 'note-01',\n            noteTitle: 'Meet up',\n            note: '<p>Fun meet up!</p>',\n            isDeleted: false,\n            lastNotebook: '',\n            createdAt: new Date(2020, 8, 11),\n            updatedAt: new Date(2020, 8, 11),\n          },\n        ],\n        createdAt: new Date(2020, 8, 1),\n        updatedAt: new Date(2020, 8, 11),\n      },\n      'notebook-1': {\n        id: 'notebook-1',\n        title: 'Personal',\n        notes: [\n          {\n            id: 'note-10',\n            noteTitle: 'Pay Utilities',\n            note: '<p>I need to pay gas today!</p>',\n            isDeleted: false,\n            lastNotebook: '',\n            createdAt: new Date(2020, 8, 11),\n            updatedAt: new Date(2020, 8, 11),\n          },\n        ],\n        createdAt: new Date(2020, 8, 1),\n        updatedAt: new Date(2020, 8, 11),\n      },\n      trash: {\n        id: 'trash',\n        title: 'Trash',\n        notes: [],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n    },\n    notebookOrder: ['notebook-0', 'notebook-1'],\n  });\n\n  useEffect(() => {\n    setCurrentNoteIdByNotebook(notebook);\n  }, []);\n\n  const addNewNote = (title: string, note: string) => {\n    const newNote = {\n      id: uuidv4(),\n      noteTitle: title ? title : 'Untitled',\n      note: note ? note : '',\n      dragging: false,\n      isDeleted: false,\n      lastNotebook: '',\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    };\n    state.notebooks[notebook].notes.unshift(newNote);\n    updateDate(notebook, undefined);\n    setCurrentNoteIdByNotebook(notebook);\n    handleSnackbar(`A note is created`, 'info');\n    setState({\n      ...state,\n    });\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const updateNote = (\n    notebookId: string,\n    noteId: string | undefined,\n    newNote: IUpdateNote\n  ) => {\n    state.notebooks[notebookId].notes.map((note: INote) => {\n      if (\n        note.id === noteId &&\n        ((newNote.note && newNote.note !== note.note) ||\n          (newNote.noteTitle && newNote.noteTitle !== note.noteTitle))\n      ) {\n        note.noteTitle = newNote.noteTitle ? newNote.noteTitle : note.noteTitle;\n        note.note = newNote.note ? newNote.note : note.note;\n        // note.isDeleted = newNote.isDeleted;\n        note.updatedAt = new Date();\n      }\n    });\n    state.notebooks[notebookId].updatedAt = new Date();\n    setState({\n      ...state,\n    } as any);\n  };\n\n  const updateDate = (notebookId: string, noteId: string | undefined) => {\n    if (noteId) {\n      state.notebooks[notebookId].notes.map((note: INote) => {\n        if (note.id === noteId) {\n          note.updatedAt = new Date();\n        }\n      });\n    }\n    state.notebooks[notebookId].updatedAt = new Date();\n    setState({\n      ...state,\n    });\n  };\n\n  const moveNote = (\n    origin: string,\n    destination: string,\n    noteId: string | undefined\n  ) => {\n    let tempNote: INote = {} as INote;\n    state.notebooks[origin].notes.map((note: INote, index: number) => {\n      if (note.id === noteId) {\n        if (destination === 'trash') {\n          note.isDeleted = true;\n        } else {\n          note.isDeleted = false;\n        }\n        note.lastNotebook = origin;\n        tempNote = note;\n        state.notebooks[origin].notes.splice(index, 1);\n      }\n    });\n    state.notebooks[destination].notes.push(tempNote);\n    state.notebooks[destination].updatedAt = new Date();\n    setCurrentNoteIdByNotebook(origin);\n    updateDate(origin, noteId);\n    if (destination === 'trash') {\n      handleSnackbar(\n        `A note is moved to ${state.notebooks[destination].title}`,\n        'warning'\n      );\n    } else {\n      handleSnackbar(\n        `A note is restored to ${state.notebooks[destination].title}`,\n        'success'\n      );\n    }\n    setState({\n      ...state,\n    });\n  };\n\n  const deleteNote = (notebookId: string, noteId: string | undefined) => {\n    state.notebooks[notebookId].notes.filter((note: INote, index: number) => {\n      if (note.id === noteId) {\n        state.notebooks[notebookId].notes.splice(index, 1);\n      }\n    });\n    state.notebooks[notebookId].updatedAt = new Date();\n    setCurrentNoteIdByNotebook(notebookId);\n    updateDate(notebookId, noteId);\n    handleSnackbar(`A note is permanently deleted`, 'error');\n    setState({\n      ...state,\n    });\n  };\n\n  const formatDate = (date: Date) => {\n    const createdTime: number = new Date(date).valueOf();\n    const currentTime: number = new Date().valueOf();\n    let diff: number = (currentTime - createdTime) / 1000;\n    if (diff <= 86400) {\n      return <Moment fromNow date={date} />;\n    } else if (diff <= 172800) {\n      return <div>Yesterday</div>;\n    } else {\n      return <Moment format=\"MMM D, YYYY\" date={new Date(date)} />;\n    }\n  };\n\n  const handleSnackbar = (message: string, severity: string) => {\n    setMessage(message);\n    setSeverity(severity);\n    setOpen(true);\n  };\n\n  const handleNotebookClick = (notebookId: string) => {\n    setNotebook(notebookId);\n    setCurrentNoteIdByNotebook(notebookId);\n  };\n\n  const setCurrentNoteIdByNotebook = (notebookId: string) => {\n    if (notebookId) {\n      setCurrentNoteId(\n        state.notebooks[notebookId].notes.length > 0\n          ? state.notebooks[notebookId].notes[0].id\n          : undefined\n      );\n    }\n  };\n\n  const addNewNotebook = (title: string) => {\n    const id = uuidv4();\n    const newNotbook = {\n      id,\n      title,\n      notes: [],\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    };\n    state.notebooks[id] = newNotbook;\n    state.notebookOrder.push(id);\n    handleNotebookClick(id);\n    handleSnackbar(`New notebook is created`, 'success');\n    setState({\n      ...state,\n    });\n  };\n\n  const removeNotebook = (id: string) => {\n    const title = state.notebooks[id].title;\n    for (let i = 0; i < state.notebooks[id].notes.length; i++) {\n      let tempNote: INote = {} as INote;\n      note.isDeleted = true;\n      note.lastNotebook = origin;\n      tempNote = note;\n      state.notebooks[origin].notes.splice(index, 1);\n      state.notebooks[destination].notes.push(tempNote);\n      state.notebooks[destination].updatedAt = new Date();\n    }\n    delete state.notebooks[id];\n    state.notebookOrder.splice(state.notebookOrder.indexOf(id), 1);\n    const nextNotebook =\n      state.notebookOrder.length > 0 ? state.notebookOrder[0] : '';\n    if (nextNotebook) {\n      setNotebook(nextNotebook);\n      setCurrentNoteIdByNotebook(nextNotebook);\n    } else {\n      setNotebook('');\n      setCurrentNoteIdByNotebook('');\n    }\n    handleSnackbar(`'${title}' is deleted`, 'error');\n    setState({\n      ...state,\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Sidebar\n        notebooks={state.notebooks}\n        notebookOrder={state.notebookOrder}\n        notebook={notebook}\n        addNewNote={addNewNote}\n        setNotebook={setNotebook}\n        setCurrentNoteId={setCurrentNoteId}\n        handleNotebookClick={handleNotebookClick}\n        addNewNotebook={addNewNotebook}\n        removeNotebook={removeNotebook}\n      />\n      <Note\n        notebooks={state.notebooks}\n        notebookOrder={state.notebookOrder}\n        notebook={notebook}\n        addNewNote={addNewNote}\n        open={open}\n        updateNote={updateNote}\n        currentNoteId={currentNoteId}\n        setCurrentNoteId={setCurrentNoteId}\n        formatDate={formatDate}\n        moveNote={moveNote}\n        handleSnackbar={handleSnackbar}\n        deleteNote={deleteNote}\n      />\n      <Snackbar\n        open={open}\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        autoHideDuration={1000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity={severity}>\n          {message}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}