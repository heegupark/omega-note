{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/editor.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { useQuill } from 'react-quilljs';\nimport 'quill/dist/quill.snow.css';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    loading: {\n      margin: '20px 20px 0px 20px'\n    },\n    progress: {\n      width: '100%',\n      margin: '20px 20px 0px 20px',\n      '& > * + *': {\n        marginTop: theme.spacing(2)\n      }\n    }\n  });\n});\nexport default function Editor(props) {\n  _s();\n\n  var classes = useStyles();\n  var editorRef = useRef();\n\n  var _useState = useState(false),\n      editorLoaded = _useState[0],\n      setEditorLoaded = _useState[1];\n\n  var _ref = editorRef.current || {},\n      CKEditor = _ref.CKEditor,\n      ClassicEditor = _ref.ClassicEditor;\n\n  var _useQuill = useQuill(),\n      quill = _useQuill.quill,\n      quillRef = _useQuill.quillRef;\n\n  useEffect(function () {\n    editorRef.current = {\n      CKEditor: require('@ckeditor/ckeditor5-react'),\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic')\n    };\n    setEditorLoaded(true);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      width: '100%',\n      height: '91vh',\n      border: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    ref: quillRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(Editor, \"op5AGIcUc3lhrB8RXG8RIhBIvE4=\", false, function () {\n  return [useStyles, useQuill];\n});\n\n_c = Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/editor.tsx"],"names":["React","useEffect","useState","useRef","createStyles","makeStyles","useQuill","useStyles","theme","loading","margin","progress","width","marginTop","spacing","Editor","props","classes","editorRef","editorLoaded","setEditorLoaded","current","CKEditor","ClassicEditor","quill","quillRef","require","height","border"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAgD,0BAAhD;AAEA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAO,2BAAP;AAEA,IAAMC,SAAS,GAAGF,UAAU,CAAC,UAACG,KAAD;AAAA,SAC3BJ,YAAY,CAAC;AACXK,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD,KADE;AAIXC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,KAAK,EAAE,MADC;AAERF,MAAAA,MAAM,EAAE,oBAFA;AAGR,mBAAa;AACXG,QAAAA,SAAS,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd;AADA;AAHL;AAJC,GAAD,CADe;AAAA,CAAD,CAA5B;AAeA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAA4B;AAAA;;AACzC,MAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,MAAMW,SAAS,GAAGf,MAAM,EAAxB;;AAFyC,kBAGDD,QAAQ,CAAC,KAAD,CAHP;AAAA,MAGlCiB,YAHkC;AAAA,MAGpBC,eAHoB;;AAAA,aAIJF,SAAS,CAACG,OAAX,IAA8B,EAJzB;AAAA,MAIjCC,QAJiC,QAIjCA,QAJiC;AAAA,MAIvBC,aAJuB,QAIvBA,aAJuB;;AAAA,kBAKbjB,QAAQ,EALK;AAAA,MAKjCkB,KALiC,aAKjCA,KALiC;AAAA,MAK1BC,QAL0B,aAK1BA,QAL0B;;AAOzCxB,EAAAA,SAAS,CAAC,YAAM;AACdiB,IAAAA,SAAS,CAACG,OAAV,GAAoB;AAClBC,MAAAA,QAAQ,EAAEI,OAAO,CAAC,2BAAD,CADC;AAElBH,MAAAA,aAAa,EAAEG,OAAO,CAAC,mCAAD;AAFJ,KAApB;AAIAN,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GANQ,EAMN,EANM,CAAT;AAQA,SACE,4BACE;AAAK,IAAA,KAAK,EAAE;AAAER,MAAAA,KAAK,EAAE,MAAT;AAAiBe,MAAAA,MAAM,EAAE,MAAzB;AAAiCC,MAAAA,MAAM,EAAE;AAAzC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEH,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAgDD;;GA/DuBV,M;UACNR,S,EAIYD,Q;;;KALNS,M","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { useQuill } from 'react-quilljs';\nimport 'quill/dist/quill.snow.css';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    loading: {\n      margin: '20px 20px 0px 20px',\n    },\n    progress: {\n      width: '100%',\n      margin: '20px 20px 0px 20px',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n  })\n);\n\nexport default function Editor(props: any) {\n  const classes = useStyles();\n  const editorRef = useRef() as any;\n  const [editorLoaded, setEditorLoaded] = useState(false);\n  const { CKEditor, ClassicEditor } = (editorRef.current as any) || {};\n  const { quill, quillRef } = useQuill();\n\n  useEffect(() => {\n    editorRef.current = {\n      CKEditor: require('@ckeditor/ckeditor5-react'),\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic'),\n    };\n    setEditorLoaded(true);\n  }, []);\n\n  return (\n    <>\n      <div style={{ width: '100%', height: '91vh', border: 'none' }}>\n        <div ref={quillRef} />\n      </div>\n      {/* {editorLoaded ? (\n        <CKEditor\n          editor={ClassicEditor}\n          height=\"100vh\"\n          data=\"<p>Hello from CKEditor 5!</p>\"\n          onInit={(editor: any) => {\n            // You can store the \"editor\" and use when it is needed.\n\n            editor.editing.view.change((writer: any) => {\n              writer.setStyle(\n                'height',\n                '90vh',\n                editor.editing.view.document.getRoot()\n              );\n              writer.setStyle(\n                'width',\n                '700px',\n                editor.editing.view.document.getRoot()\n              );\n            });\n            console.log('Editor is ready to use!', editor);\n          }}\n          onChange={(event: any, editor: any) => {\n            const data = editor.getData();\n            console.log({ event, editor, data });\n          }}\n          onBlur={(event: any, editor: any) => {\n            console.log('Blur.', editor);\n          }}\n          onFocus={(event: any, editor: any) => {\n            console.log('Focus.', editor);\n          }}\n        />\n      ) : (\n        <>\n          <div className={classes.loading}>{'loading editor...'}</div>\n          <div className={classes.progress}>\n            <LinearProgress />\n          </div>\n        </>\n      )} */}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}