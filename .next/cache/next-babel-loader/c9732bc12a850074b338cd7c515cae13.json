{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport NoteList from './note-list';\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexDdirection: 'row',\n    height: '100vh'\n  },\n  loading: {\n    margin: '20px 20px 0px 20px'\n  },\n  progress: {\n    width: '100%',\n    margin: '20px 20px 0px 20px',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  },\n  box: {\n    display: 'flex',\n    flexDdirection: 'column',\n    backgroundColor: 'rgb(248, 248, 248)',\n    padding: '10px',\n    height: '100vh',\n    resize: 'horizontal',\n    minWidth: '200px',\n    width: '300px',\n    maxWidth: '400px',\n    overflow: 'hidden',\n    borderRight: '1px solid rgb(230, 230, 230)'\n  }\n}));\nexport default function Note(props) {\n  const classes = useStyles();\n  const editorRef = useRef();\n  const {\n    0: editorLoaded,\n    1: setEditorLoaded\n  } = useState(false);\n  const {\n    CKEditor,\n    ClassicEditor\n  } = editorRef.current || {};\n  useEffect(() => {\n    editorRef.current = {\n      CKEditor: require('@ckeditor/ckeditor5-react'),\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic')\n    };\n    setEditorLoaded(true);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(DndProvider, {\n    backend: HTML5Backend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, __jsx(NoteList, {\n    notebooks: props.notebooks,\n    notebookOrder: props.notebookOrder,\n    notebook: props.notebook,\n    addNewNote: props.addNewNote,\n    updateNote: props.updateNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, editorLoaded ? __jsx(CKEditor, {\n    editor: ClassicEditor,\n    data: \"<p>Hello from CKEditor 5!</p>\",\n    onInit: editor => {\n      // You can store the \"editor\" and use when it is needed.\n      console.log('Editor is ready to use!', editor);\n    },\n    onChange: (event, editor) => {\n      const data = editor.getData();\n      console.log({\n        event,\n        editor,\n        data\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, 'loading editor...'), __jsx(\"div\", {\n    className: classes.progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, __jsx(LinearProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note.tsx"],"names":["React","useEffect","useState","useRef","LinearProgress","createStyles","makeStyles","DndProvider","HTML5Backend","NoteList","useStyles","theme","root","display","flexDdirection","height","loading","margin","progress","width","marginTop","spacing","box","backgroundColor","padding","resize","minWidth","maxWidth","overflow","borderRight","Note","props","classes","editorRef","editorLoaded","setEditorLoaded","CKEditor","ClassicEditor","current","require","notebooks","notebookOrder","notebook","addNewNote","updateNote","editor","console","log","event","data","getData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport NoteList from './note-list';\nimport Editor from './editor';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDdirection: 'row',\n      height: '100vh',\n    },\n    loading: {\n      margin: '20px 20px 0px 20px',\n    },\n    progress: {\n      width: '100%',\n      margin: '20px 20px 0px 20px',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    box: {\n      display: 'flex',\n      flexDdirection: 'column',\n      backgroundColor: 'rgb(248, 248, 248)',\n      padding: '10px',\n      height: '100vh',\n      resize: 'horizontal',\n      minWidth: '200px',\n      width: '300px',\n      maxWidth: '400px',\n      overflow: 'hidden',\n      borderRight: '1px solid rgb(230, 230, 230)',\n    },\n  })\n);\n\nexport default function Note(props: any) {\n  const classes = useStyles();\n  const editorRef = useRef() as any;\n  const [editorLoaded, setEditorLoaded] = useState(false);\n  const { CKEditor, ClassicEditor } = (editorRef.current as any) || {};\n\n  useEffect(() => {\n    editorRef.current = {\n      CKEditor: require('@ckeditor/ckeditor5-react'),\n      ClassicEditor: require('@ckeditor/ckeditor5-build-classic'),\n    };\n    setEditorLoaded(true);\n  }, []);\n\n  return (\n    <>\n      <div className={classes.root}>\n        <div className={classes.box}>\n          <DndProvider backend={HTML5Backend}>\n            <NoteList\n              notebooks={props.notebooks}\n              notebookOrder={props.notebookOrder}\n              notebook={props.notebook}\n              addNewNote={props.addNewNote}\n              updateNote={props.updateNote}\n            />\n          </DndProvider>\n        </div>\n        <div>\n          {editorLoaded ? (\n            <CKEditor\n              editor={ClassicEditor}\n              data=\"<p>Hello from CKEditor 5!</p>\"\n              onInit={(editor: any) => {\n                // You can store the \"editor\" and use when it is needed.\n                console.log('Editor is ready to use!', editor);\n              }}\n              onChange={(event: any, editor: any) => {\n                const data = editor.getData();\n                console.log({ event, editor, data });\n              }}\n            />\n          ) : (\n            <>\n              <div className={classes.loading}>{'loading editor...'}</div>\n              <div className={classes.progress}>\n                <LinearProgress />\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}