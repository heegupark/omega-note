{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/editor.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n// import ReactQuill, { Quill } from 'react-quill';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    loading: {\n      margin: '20px 20px 0px 20px'\n    },\n    title: {\n      position: 'absolute',\n      margin: '75px 0px 0px 15px',\n      zIndex: 1,\n      outline: 'none',\n      width: '100%',\n      minWidth: '400px'\n    },\n    editor: {\n      width: '100%',\n      minWidth: '400px',\n      wordBreak: 'break-word',\n      '&:hover': {\n        backgroundColor: 'white'\n      }\n    }\n  });\n});\nvar theme = 'snow';\nvar placeholder = \"What's in your mind?\";\nvar modules = {\n  toolbar: [[{\n    header: '1'\n  }, {\n    header: '2'\n  }, {\n    font: []\n  }, {\n    color: []\n  }], [{\n    size: []\n  }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n    list: 'ordered'\n  }, {\n    list: 'bullet'\n  }, {\n    indent: '-1'\n  }, {\n    indent: '+1'\n  }], ['link', 'image', 'video'], ['clean']],\n  clipboard: {\n    matchVisual: false\n  }\n};\nvar formats = ['header', 'font', 'color', 'size', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image' // 'video',\n];\nexport default function Editor(props) {\n  _s();\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setOpen = _useState[1];\n\n  var ReactQuill = true ? require('react-quill') : function () {\n    return false;\n  };\n  var classes = useStyles();\n\n  var _useState2 = useState(''),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(''),\n      contents = _useState3[0],\n      setContents = _useState3[1];\n\n  var _useState4 = useState(false),\n      titleEditing = _useState4[0],\n      setTitleEditing = _useState4[1];\n\n  useEffect(function () {\n    setOpen(true);\n  }, []);\n\n  var handleChange = function handleChange(html) {\n    setContents(html);\n    var newNote = {\n      // noteTitle: title,\n      note: html\n    };\n    props.updateNote(props.notebooks[props.notebook].id, props.currentNote, newNote);\n  };\n\n  var getNote = function getNote(notebookId, noteId) {\n    var newContents = props.notebooks[notebookId].notes.filter(function (note) {\n      return note.id === noteId;\n    });\n    setTitle(newContents[0].noteTitle);\n    setContents(newContents[0].note);\n  };\n\n  useEffect(function () {\n    getNote(props.notebook, props.currentNote);\n  }, [props.currentNote]);\n\n  var handleTitleClick = function handleTitleClick() {\n    setTitleEditing(!titleEditing);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    contentEditable: true,\n    className: classes.title,\n    onClick: function onClick() {\n      return setOpen(false);\n    },\n    onBlur: function onBlur() {\n      return setOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, title), !!ReactQuill && isOpen && __jsx(ReactQuill, {\n    theme: theme,\n    onChange: handleChange,\n    value: contents,\n    modules: modules,\n    formats: formats,\n    bounds: '.app',\n    placeholder: placeholder,\n    className: classes.editor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }));\n}\n\n_s(Editor, \"sRSgR+0InzzCYjZ6n9UzbqOs4Bw=\", false, function () {\n  return [useStyles];\n});\n\n_c = Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/editor.tsx"],"names":["React","useEffect","useState","createStyles","makeStyles","useStyles","theme","loading","margin","title","position","zIndex","outline","width","minWidth","editor","wordBreak","backgroundColor","placeholder","modules","toolbar","header","font","color","size","list","indent","clipboard","matchVisual","formats","Editor","props","isOpen","setOpen","ReactQuill","require","classes","setTitle","contents","setContents","titleEditing","setTitleEditing","handleChange","html","newNote","note","updateNote","notebooks","notebook","id","currentNote","getNote","notebookId","noteId","newContents","notes","filter","noteTitle","handleTitleClick"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n// import ReactQuill, { Quill } from 'react-quill';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    loading: {\n      margin: '20px 20px 0px 20px',\n    },\n    title: {\n      position: 'absolute',\n      margin: '75px 0px 0px 15px',\n      zIndex: 1,\n      outline: 'none',\n      width: '100%',\n      minWidth: '400px',\n    },\n    editor: {\n      width: '100%',\n      minWidth: '400px',\n      wordBreak: 'break-word',\n      '&:hover': {\n        backgroundColor: 'white',\n      },\n    },\n  })\n);\n\nconst theme = 'snow';\nconst placeholder = `What's in your mind?`;\nconst modules = {\n  toolbar: [\n    [{ header: '1' }, { header: '2' }, { font: [] }, { color: [] }],\n    [{ size: [] }],\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n    [\n      { list: 'ordered' },\n      { list: 'bullet' },\n      { indent: '-1' },\n      { indent: '+1' },\n    ],\n    ['link', 'image', 'video'],\n    ['clean'],\n  ],\n  clipboard: {\n    matchVisual: false,\n  },\n};\nconst formats = [\n  'header',\n  'font',\n  'color',\n  'size',\n  'bold',\n  'italic',\n  'underline',\n  'strike',\n  'blockquote',\n  'list',\n  'bullet',\n  'indent',\n  'link',\n  'image',\n  // 'video',\n];\n\nexport default function Editor(props: any) {\n  const [isOpen, setOpen] = useState(false);\n  const ReactQuill =\n    typeof window === 'object' ? require('react-quill') : () => false;\n  const classes = useStyles();\n  const [title, setTitle] = useState('' as any);\n  const [contents, setContents] = useState('' as any);\n  const [titleEditing, setTitleEditing] = useState(false);\n\n  useEffect(() => {\n    setOpen(true);\n  }, []);\n\n  const handleChange = (html: any) => {\n    setContents(html);\n    const newNote = {\n      // noteTitle: title,\n      note: html,\n    };\n    props.updateNote(\n      props.notebooks[props.notebook].id,\n      props.currentNote,\n      newNote\n    );\n  };\n\n  const getNote = (notebookId: string, noteId: string) => {\n    const newContents = props.notebooks[notebookId].notes.filter(\n      (note: any) => note.id === noteId\n    );\n    setTitle(newContents[0].noteTitle);\n    setContents(newContents[0].note);\n  };\n\n  useEffect(() => {\n    getNote(props.notebook, props.currentNote);\n  }, [props.currentNote]);\n\n  const handleTitleClick = () => {\n    setTitleEditing(!titleEditing);\n  };\n  return (\n    <>\n      <h1\n        contentEditable\n        className={classes.title}\n        onClick={() => setOpen(false)}\n        onBlur={() => setOpen(true)}\n      >\n        {title}\n      </h1>\n      {!!ReactQuill && isOpen && (\n        <ReactQuill\n          theme={theme}\n          onChange={handleChange}\n          value={contents}\n          modules={modules}\n          formats={formats}\n          bounds={'.app'}\n          placeholder={placeholder}\n          className={classes.editor}\n        />\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}