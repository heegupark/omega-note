{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note-list.tsx\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { CgNotes } from 'react-icons/cg';\nimport Divider from '@material-ui/core/Divider';\nimport { usePreview } from 'react-dnd-preview';\nimport { useDrag, DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      margin: 'auto',\n      color: 'rgb(51,51,51)',\n      fontSize: '16px',\n      width: '100%'\n    },\n    title: {\n      padding: '10px',\n      fontSize: '22px'\n    },\n    box: {\n      position: 'sticky',\n      height: '100px',\n      cursor: 'pointer',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    list: {\n      '&:active': {\n        opacity: '0.3'\n      }\n    },\n    noteTitle: {\n      padding: '10px 20px 0px 20px',\n      color: 'rgb(61,61,61)'\n    },\n    noteContent: {\n      padding: '5px 20px',\n      fontSize: '14px',\n      color: 'rgb(115,115,115)'\n    },\n    empty: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: 'auto',\n      textAlign: 'center',\n      padding: '35px'\n    },\n    emptyIcon: {\n      fontSize: '75px'\n    },\n    newNoteText: {\n      cursor: 'pointer',\n      color: 'rgb(0,168,45)'\n    }\n  });\n});\nexport default function NoteList(props) {\n  _s2();\n\n  var _this = this,\n      _s = $RefreshSig$();\n\n  var classes = useStyles();\n\n  var _useDrag = useDrag({\n    item: {\n      type: 'Note',\n      text: 'text'\n    },\n    collect: function collect(monitor) {\n      return {\n        opacity: monitor.isDragging() ? 0.5 : 1\n      };\n    }\n  }),\n      _useDrag2 = _slicedToArray(_useDrag, 2),\n      opacity = _useDrag2[0].opacity,\n      dragRef = _useDrag2[1];\n\n  var MyPreview = function MyPreview() {\n    _s();\n\n    var _usePreview = usePreview(),\n        display = _usePreview.display,\n        itemType = _usePreview.itemType,\n        item = _usePreview.item,\n        style = _usePreview.style;\n\n    if (!display) {\n      return null;\n    }\n\n    return __jsx(\"div\", {\n      style: style,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 12\n      }\n    }, itemType);\n  };\n\n  _s(MyPreview, \"X/JkOSmOzfAN11b6mHrp5UffcBo=\", false, function () {\n    return [usePreview];\n  });\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"title\"), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), props.notebooks[props.notebook].notes.length > 0 ? __jsx(React.Fragment, null, props.notebooks[props.notebook].notes.map(function (note) {\n    return __jsx(\"div\", {\n      key: note.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, __jsx(DndProvider, {\n      backend: HTML5Backend,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, __jsx(MyPreview, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }), __jsx(\"div\", {\n      className: classes.box,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, __jsx(\"div\", {\n      ref: dragRef,\n      className: classes.list,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: classes.noteTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 23\n      }\n    }, note.noteTitle), __jsx(\"div\", {\n      className: classes.noteContent,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 23\n      }\n    }, note.note)))));\n  })) : __jsx(\"div\", {\n    className: classes.empty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.emptyIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, __jsx(CgNotes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"It all begins with notes\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"Click the\", ' ', __jsx(\"span\", {\n    onClick: function onClick() {\n      return props.addNewNote();\n    },\n    className: classes.newNoteText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"+ New Note\"), ' ', \"button in the side bar to create note.\")));\n}\n\n_s2(NoteList, \"VbN1/Ga5eesatml1H84Dq9dDYqg=\", false, function () {\n  return [useStyles, useDrag];\n});\n\n_c = NoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note-list.tsx"],"names":["React","createStyles","makeStyles","CgNotes","Divider","usePreview","useDrag","DndProvider","HTML5Backend","useStyles","theme","root","display","flexDirection","height","margin","color","fontSize","width","title","padding","box","position","cursor","list","opacity","noteTitle","noteContent","empty","alignItems","justifyContent","textAlign","emptyIcon","newNoteText","NoteList","props","classes","item","type","text","collect","monitor","isDragging","dragRef","MyPreview","itemType","style","notebooks","notebook","notes","length","map","note","id","addNewNote"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { CgNotes } from 'react-icons/cg';\nimport Divider from '@material-ui/core/Divider';\nimport { usePreview } from 'react-dnd-preview';\nimport { useDrag, DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      margin: 'auto',\n      color: 'rgb(51,51,51)',\n      fontSize: '16px',\n      width: '100%',\n    },\n    title: {\n      padding: '10px',\n      fontSize: '22px',\n    },\n    box: {\n      position: 'sticky',\n      height: '100px',\n      cursor: 'pointer',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    list: {\n      '&:active': {\n        opacity: '0.3',\n      },\n    },\n    noteTitle: {\n      padding: '10px 20px 0px 20px',\n      color: 'rgb(61,61,61)',\n    },\n    noteContent: {\n      padding: '5px 20px',\n      fontSize: '14px',\n      color: 'rgb(115,115,115)',\n    },\n    empty: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: 'auto',\n      textAlign: 'center',\n      padding: '35px',\n    },\n    emptyIcon: {\n      fontSize: '75px',\n    },\n    newNoteText: {\n      cursor: 'pointer',\n      color: 'rgb(0,168,45)',\n    },\n  })\n);\nexport default function NoteList(props: any) {\n  const classes = useStyles();\n  const [{ opacity }, dragRef] = useDrag({\n    item: { type: 'Note', text: 'text' },\n    collect: (monitor) => ({\n      opacity: monitor.isDragging() ? 0.5 : 1,\n    }),\n  });\n\n  const MyPreview = () => {\n    const { display, itemType, item, style } = usePreview();\n    if (!display) {\n      return null;\n    }\n    return <div style={style}>{itemType}</div>;\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>title</div>\n      <Divider />\n      {props.notebooks[props.notebook].notes.length > 0 ? (\n        <>\n          {props.notebooks[props.notebook].notes.map((note: any) => {\n            return (\n              <div key={note.id}>\n                {/* <div className={classes.box}>\n                  <div draggable className={classes.list}>\n                    <div className={classes.noteTitle}>{note.noteTitle}</div>\n                    <div className={classes.noteContent}>{note.note}</div>\n                  </div>\n                </div> */}\n                <DndProvider backend={HTML5Backend}>\n                  <MyPreview />\n                  <div className={classes.box}>\n                    <div ref={dragRef} className={classes.list}>\n                      <div className={classes.noteTitle}>{note.noteTitle}</div>\n                      <div className={classes.noteContent}>{note.note}</div>\n                    </div>\n                  </div>\n                </DndProvider>\n              </div>\n            );\n          })}\n        </>\n      ) : (\n        <div className={classes.empty}>\n          <div className={classes.emptyIcon}>\n            <CgNotes />\n          </div>\n          <div>It all begins with notes</div>\n          <div>\n            Click the{' '}\n            <span\n              onClick={() => props.addNewNote()}\n              className={classes.newNoteText}\n            >\n              + New Note\n            </span>{' '}\n            button in the side bar to create note.\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}