{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/editor.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { useQuill } from 'react-quilljs';\nimport 'quill/dist/quill.snow.css';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    loading: {\n      margin: '20px 20px 0px 20px'\n    },\n    progress: {\n      width: '100%',\n      margin: '20px 20px 0px 20px',\n      '& > * + *': {\n        marginTop: theme.spacing(2)\n      }\n    }\n  });\n});\nvar theme = 'snow';\nvar placeholder = 'Compose an epic...';\nvar modules = {\n  toolbar: [[{\n    header: '1'\n  }, {\n    header: '2'\n  }, {\n    font: []\n  }, {\n    color: []\n  }], [{\n    size: []\n  }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n    list: 'ordered'\n  }, {\n    list: 'bullet'\n  }, {\n    indent: '-1'\n  }, {\n    indent: '+1'\n  }], ['link', 'image', 'video'], ['clean']],\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false\n  }\n};\nvar formats = ['header', 'font', 'color', 'size', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image', 'video'];\nexport default function Editor(props) {\n  _s();\n\n  var classes = useStyles();\n\n  var _useQuill = useQuill(),\n      quill = _useQuill.quill;\n\n  var _useQuill2 = useQuill({\n    theme: theme,\n    modules: modules,\n    formats: formats,\n    placeholder: placeholder\n  }),\n      quillRef = _useQuill2.quillRef;\n\n  var _useState = useState(''),\n      contents = _useState[0],\n      setContents = _useState[1];\n\n  useEffect(function () {\n    if (quill) {}\n  }, [quill]);\n\n  if (quill) {\n    console.log('contents');\n    quill.on('editor-change', function () {\n      var contents = quill.getContents();\n      console.log(contents); // There are a couple issues with counting words\n      // this way but we'll fix these later\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      width: '100%',\n      height: '91vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    ref: quillRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(Editor, \"cRfyksDiUKIcasuOtNjGYKVcQis=\", false, function () {\n  return [useStyles, useQuill, useQuill];\n});\n\n_c = Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/editor.tsx"],"names":["React","useEffect","useState","createStyles","makeStyles","useQuill","useStyles","theme","loading","margin","progress","width","marginTop","spacing","placeholder","modules","toolbar","header","font","color","size","list","indent","clipboard","matchVisual","formats","Editor","props","classes","quill","quillRef","contents","setContents","console","log","on","getContents","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { useQuill } from 'react-quilljs';\nimport 'quill/dist/quill.snow.css';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    loading: {\n      margin: '20px 20px 0px 20px',\n    },\n    progress: {\n      width: '100%',\n      margin: '20px 20px 0px 20px',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n  })\n);\n\nconst theme = 'snow';\nconst placeholder = 'Compose an epic...';\nconst modules = {\n  toolbar: [\n    [{ header: '1' }, { header: '2' }, { font: [] }, { color: [] }],\n    [{ size: [] }],\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n    [\n      { list: 'ordered' },\n      { list: 'bullet' },\n      { indent: '-1' },\n      { indent: '+1' },\n    ],\n    ['link', 'image', 'video'],\n    ['clean'],\n  ],\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false,\n  },\n};\nconst formats = [\n  'header',\n  'font',\n  'color',\n  'size',\n  'bold',\n  'italic',\n  'underline',\n  'strike',\n  'blockquote',\n  'list',\n  'bullet',\n  'indent',\n  'link',\n  'image',\n  'video',\n];\n\nexport default function Editor(props: any) {\n  const classes = useStyles();\n  const { quill } = useQuill();\n  const { quillRef } = useQuill({ theme, modules, formats, placeholder });\n  const [contents, setContents] = useState('' as any);\n\n  useEffect(() => {\n    if (quill) {\n    }\n  }, [quill]);\n\n  if (quill) {\n    console.log('contents');\n\n    quill.on('editor-change', function () {\n      const contents = quill.getContents();\n      console.log(contents);\n      // There are a couple issues with counting words\n      // this way but we'll fix these later\n    });\n  }\n  return (\n    <>\n      <div\n        style={{\n          width: '100%',\n          height: '91vh',\n        }}\n      >\n        <div ref={quillRef} />\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}