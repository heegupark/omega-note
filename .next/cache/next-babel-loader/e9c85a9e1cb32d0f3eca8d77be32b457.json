{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note-list.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { CgNotes } from 'react-icons/cg';\nimport Divider from '@material-ui/core/Divider';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      margin: 'auto',\n      color: 'rgb(51,51,51)',\n      fontSize: '16px',\n      width: '100%'\n    },\n    title: {\n      padding: '10px',\n      fontSize: '22px'\n    },\n    list: {\n      height: '100px',\n      cursor: 'pointer',\n      display: 'flex',\n      flexDirection: 'column',\n      '&:active': {\n        opacity: '0.3',\n        borderRadius: '5px'\n      }\n    },\n    noteTitle: {\n      padding: '5px 20px' // height: '100px',\n\n    },\n    noteContent: {\n      padding: '5px 20px'\n    },\n    draggingContent: {\n      width: '80px',\n      height: '30px',\n      border: '2px dashed blue',\n      borderRadius: '5px'\n    },\n    empty: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: 'auto',\n      textAlign: 'center',\n      padding: '35px'\n    },\n    emptyIcon: {\n      fontSize: '75px'\n    },\n    newNoteText: {\n      cursor: 'pointer',\n      color: 'rgb(0,168,45)'\n    }\n  });\n});\nexport default function NoteList(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(false),\n      isDragging = _useState[0],\n      setIsDragging = _useState[1];\n\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"title\"), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), props.notebooks[props.notebook].notes.length > 0 ? __jsx(React.Fragment, null, props.notebooks[props.notebook].notes.map(function (note) {\n    return __jsx(\"div\", {\n      key: note.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, isDragging ? __jsx(\"div\", {\n      className: classes.draggingContent,\n      onDragEnd: function onDragEnd() {\n        setIsDragging(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }, note.noteTitle) : __jsx(\"div\", {\n      className: classes.list,\n      draggable: true,\n      onDragStart: function onDragStart() {\n        setIsDragging(true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }, __jsx(\"div\", {\n      className: classes.noteTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, note.noteTitle), __jsx(\"div\", {\n      className: classes.noteContent,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, note.note)), __jsx(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }));\n  })) : __jsx(\"div\", {\n    className: classes.empty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.emptyIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, __jsx(CgNotes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"It all begins with notes\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Click the\", ' ', __jsx(\"span\", {\n    onClick: function onClick() {\n      return props.addNewNote();\n    },\n    className: classes.newNoteText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"+ New Note\"), ' ', \"button in the side bar to create note.\")));\n}\n\n_s(NoteList, \"1hy2R3/fKf0HKz/o8A216IgUZZI=\", false, function () {\n  return [useStyles];\n});\n\n_c = NoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note-list.tsx"],"names":["React","useState","createStyles","makeStyles","CgNotes","Divider","useStyles","theme","root","display","flexDirection","height","margin","color","fontSize","width","title","padding","list","cursor","opacity","borderRadius","noteTitle","noteContent","draggingContent","border","empty","alignItems","justifyContent","textAlign","emptyIcon","newNoteText","NoteList","props","isDragging","setIsDragging","classes","notebooks","notebook","notes","length","map","note","id","addNewNote"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { CgNotes } from 'react-icons/cg';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      margin: 'auto',\n      color: 'rgb(51,51,51)',\n      fontSize: '16px',\n      width: '100%',\n    },\n    title: {\n      padding: '10px',\n      fontSize: '22px',\n    },\n    list: {\n      height: '100px',\n      cursor: 'pointer',\n      display: 'flex',\n      flexDirection: 'column',\n      '&:active': {\n        opacity: '0.3',\n        borderRadius: '5px',\n      },\n    },\n    noteTitle: {\n      padding: '5px 20px',\n      // height: '100px',\n    },\n    noteContent: {\n      padding: '5px 20px',\n    },\n    draggingContent: {\n      width: '80px',\n      height: '30px',\n      border: '2px dashed blue',\n      borderRadius: '5px',\n    },\n    empty: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: 'auto',\n      textAlign: 'center',\n      padding: '35px',\n    },\n    emptyIcon: {\n      fontSize: '75px',\n    },\n    newNoteText: {\n      cursor: 'pointer',\n      color: 'rgb(0,168,45)',\n    },\n  })\n);\nexport default function NoteList(props: any) {\n  const [isDragging, setIsDragging] = useState(false);\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>title</div>\n      <Divider />\n      {props.notebooks[props.notebook].notes.length > 0 ? (\n        <>\n          {props.notebooks[props.notebook].notes.map((note: any) => {\n            return (\n              <div key={note.id}>\n                {isDragging ? (\n                  <div\n                    className={classes.draggingContent}\n                    onDragEnd={() => {\n                      setIsDragging(false);\n                    }}\n                  >\n                    {note.noteTitle}\n                  </div>\n                ) : (\n                  <div\n                    className={classes.list}\n                    draggable\n                    onDragStart={() => {\n                      setIsDragging(true);\n                    }}\n                  >\n                    <div className={classes.noteTitle}>{note.noteTitle}</div>\n                    <div className={classes.noteContent}>{note.note}</div>\n                  </div>\n                )}\n                <Divider />\n              </div>\n            );\n          })}\n        </>\n      ) : (\n        <div className={classes.empty}>\n          <div className={classes.emptyIcon}>\n            <CgNotes />\n          </div>\n          <div>It all begins with notes</div>\n          <div>\n            Click the{' '}\n            <span\n              onClick={() => props.addNewNote()}\n              className={classes.newNoteText}\n            >\n              + New Note\n            </span>{' '}\n            button in the side bar to create note.\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}