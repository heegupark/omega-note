{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note-list-item.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { useDrag } from 'react-dnd';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      margin: 'auto',\n      color: 'rgb(51,51,51)',\n      fontSize: '16px',\n      width: '100%'\n    },\n    title: {\n      padding: '10px',\n      fontSize: '22px'\n    },\n    box: {\n      position: 'sticky',\n      height: '100px',\n      cursor: 'pointer',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    noteTitle: {\n      padding: '10px 20px 0px 20px',\n      color: 'rgb(61,61,61)'\n    },\n    noteContent: {\n      padding: '5px 20px',\n      fontSize: '14px',\n      color: 'rgb(115,115,115)'\n    },\n    empty: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: 'auto',\n      textAlign: 'center',\n      padding: '35px'\n    },\n    emptyIcon: {\n      fontSize: '75px'\n    },\n    newNoteText: {\n      cursor: 'pointer',\n      color: 'rgb(0,168,45)'\n    }\n  });\n});\nexport default function NoteListItem(props) {\n  _s();\n\n  var classes = useStyles();\n\n  var _useDrag = useDrag({\n    item: {\n      type: props.noteTitle\n    },\n    collect: function collect(monitor) {\n      return {\n        opacity: monitor.isDragging() ? 0.4 : 1,\n        display: monitor.isDragging() ? 'block' : 'none'\n      };\n    }\n  }),\n      _useDrag2 = _slicedToArray(_useDrag, 3),\n      _useDrag2$ = _useDrag2[0],\n      opacity = _useDrag2$.opacity,\n      display = _useDrag2$.display,\n      drag = _useDrag2[1],\n      preview = _useDrag2[2];\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    ref: drag,\n    style: {\n      opacity: opacity\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.noteTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, props.noteTitle), __jsx(\"div\", {\n    className: classes.noteContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, props.note), __jsx(\"div\", {\n    ref: preview,\n    style: {\n      display: display\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, props.noteTitle))));\n}\n\n_s(NoteListItem, \"jFUu7oQ00rk5/sFLftHQXp+y0qk=\", false, function () {\n  return [useStyles, useDrag];\n});\n\n_c = NoteListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteListItem\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note-list-item.tsx"],"names":["React","createStyles","makeStyles","useDrag","useStyles","theme","root","display","flexDirection","height","margin","color","fontSize","width","title","padding","box","position","cursor","noteTitle","noteContent","empty","alignItems","justifyContent","textAlign","emptyIcon","newNoteText","NoteListItem","props","classes","item","type","collect","monitor","opacity","isDragging","drag","preview","note"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { useDrag } from 'react-dnd';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      margin: 'auto',\n      color: 'rgb(51,51,51)',\n      fontSize: '16px',\n      width: '100%',\n    },\n    title: {\n      padding: '10px',\n      fontSize: '22px',\n    },\n    box: {\n      position: 'sticky',\n      height: '100px',\n      cursor: 'pointer',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    noteTitle: {\n      padding: '10px 20px 0px 20px',\n      color: 'rgb(61,61,61)',\n    },\n    noteContent: {\n      padding: '5px 20px',\n      fontSize: '14px',\n      color: 'rgb(115,115,115)',\n    },\n    empty: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: 'auto',\n      textAlign: 'center',\n      padding: '35px',\n    },\n    emptyIcon: {\n      fontSize: '75px',\n    },\n    newNoteText: {\n      cursor: 'pointer',\n      color: 'rgb(0,168,45)',\n    },\n  })\n);\n\nexport default function NoteListItem(props: any) {\n  const classes = useStyles();\n\n  const [{ opacity, display }, drag, preview] = useDrag({\n    item: { type: props.noteTitle },\n    collect: (monitor) => ({\n      opacity: monitor.isDragging() ? 0.4 : 1,\n      display: monitor.isDragging() ? 'block' : 'none',\n    }),\n  });\n  return (\n    <>\n      <div className={classes.box}>\n        <div ref={drag} style={{ opacity }}>\n          <div className={classes.noteTitle}>{props.noteTitle}</div>\n          <div className={classes.noteContent}>{props.note}</div>\n          <div ref={preview} style={{ display }}>\n            {props.noteTitle}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}