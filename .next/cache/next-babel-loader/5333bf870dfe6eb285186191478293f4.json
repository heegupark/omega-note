{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note-list-item.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { useDrag, useDragLayer } from 'react-dnd';\nimport { getEmptyImage } from 'react-dnd-html5-backend';\nimport { BsBook } from 'react-icons/bs';\nconst layerStyles = {\n  position: 'fixed',\n  pointerEvents: 'none',\n  zIndex: 9999,\n  left: 0,\n  top: 0,\n  // width: '100%',\n  height: '100%'\n};\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n    margin: 'auto',\n    color: 'rgb(51,51,51)',\n    fontSize: '16px',\n    width: '100%'\n  },\n  title: {\n    padding: '10px',\n    fontSize: '22px'\n  },\n  box: {\n    height: '100px',\n    cursor: 'pointer',\n    display: 'flex',\n    border: '1px groove rgb(0,0,0,0)',\n    flexDirection: 'column',\n    overflow: 'hidden',\n    wordWrap: 'break-word',\n    padding: '15px'\n  },\n  boxSelected: {\n    height: '100px',\n    cursor: 'pointer',\n    display: 'flex',\n    border: '1px groove blue',\n    borderRadius: '5px',\n    backgroundColor: 'white',\n    flexDirection: 'column',\n    overflow: 'hidden',\n    wordWrap: 'break-word',\n    padding: '15px'\n  },\n  previewIcon: {\n    marginRight: '3px',\n    verticalAlign: 'middle'\n  },\n  previewItem: {\n    marginLeft: '3px'\n  },\n  preview: {\n    border: '1px solid rgb(186,223,229)',\n    borderRadius: '3px',\n    // width: '150px',\n    overflow: 'hidden',\n    fontSize: '14px',\n    backgroundColor: 'rgb(248,248,248,0.6)',\n    padding: '10px'\n  },\n  noteTitle: {\n    color: 'rgb(61,61,61)',\n    fontSize: '14px'\n  },\n  noteContent: {\n    fontSize: '12px',\n    color: 'rgb(115,115,115)',\n    overflow: 'hidden',\n    height: '35px'\n  },\n  date: {\n    fontSize: '11px',\n    color: 'rgb(115,115,115)'\n  },\n  empty: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 'auto',\n    textAlign: 'center',\n    padding: '35px'\n  },\n  emptyIcon: {\n    fontSize: '75px'\n  },\n  newNoteText: {\n    cursor: 'pointer',\n    color: 'rgb(0,168,45)'\n  },\n  dot: {\n    float: 'right',\n    cursor: 'pointer'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: 'rgb(222, 222, 222)',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(1, 2, 2),\n    textAlign: 'center',\n    width: '350px',\n    borderRadius: '5px',\n    fontSize: '12px',\n    outline: 'none'\n  },\n  button: {\n    height: '30px',\n    margin: '10px 15px'\n  }\n}));\nexport default function NoteListItem(props) {\n  const classes = useStyles();\n  const [{\n    opacity\n  }, drag, preview] = useDrag({\n    item: {\n      id: props.note.id,\n      name: props.note.noteTitle,\n      notebook: props.notebook,\n      type: 'note'\n    },\n    collect: monitor => ({\n      opacity: monitor.isDragging() ? 0.4 : 1,\n      isDragging: monitor.isDragging()\n    })\n  });\n  useEffect(() => {\n    preview(getEmptyImage(), {\n      captureDraggingState: true\n    });\n  }, []);\n\n  const getItemStyles = (initialOffset, currentOffset, isSnapToGrid) => {\n    if (!initialOffset || !currentOffset) {\n      return {\n        display: 'none'\n      };\n    }\n\n    let {\n      x,\n      y\n    } = currentOffset;\n\n    if (isSnapToGrid) {\n      x -= initialOffset.x;\n      y -= initialOffset.y; // [x, y] = snapToGrid(x, y);\n\n      x += initialOffset.x;\n      y += initialOffset.y;\n    }\n\n    const transform = `translate(${x}px, ${y}px)`;\n    return {\n      transform,\n      WebkitTransform: transform\n    };\n  };\n\n  const {\n    itemType,\n    isDragging,\n    item,\n    initialOffset,\n    currentOffset\n  } = useDragLayer(monitor => ({\n    item: monitor.getItem(),\n    itemType: monitor.getItemType(),\n    initialOffset: monitor.getInitialSourceClientOffset(),\n    currentOffset: monitor.getSourceClientOffset(),\n    isDragging: monitor.isDragging()\n  }));\n\n  const convertToString = string => {\n    const limit = 30;\n    const convertedString = string.replace(/(<([^>]+)>)/gi, '');\n    return `${convertedString.substring(0, limit)}${convertedString.length > limit ? '...' : ''}`;\n  };\n\n  const isSelected = props.note.id === props.currentNoteId;\n\n  const handleClickInTrash = () => {\n    if (isSelected) {\n      props.handleSnackbar('You can not drag a note to other place', 'error');\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: isSelected ? classes.boxSelected : classes.box,\n    onClick: () => props.setCurrentNoteId(props.note.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }, props.note.isDeleted ? __jsx(\"div\", {\n    onClick: handleClickInTrash,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: classes.noteTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, props.convertTitle(props.note.noteTitle, 20)), __jsx(\"div\", {\n    className: classes.noteContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, convertToString(props.note.note)), __jsx(\"div\", {\n    className: classes.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, props.formatDate(props.note.updatedAt))) : __jsx(\"div\", {\n    ref: drag,\n    style: {\n      opacity\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: classes.noteTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, props.convertTitle(props.note.noteTitle, 20)), __jsx(\"div\", {\n    className: classes.noteContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, convertToString(props.note.note)), __jsx(\"div\", {\n    className: classes.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, props.formatDate(props.note.updatedAt)))), __jsx(\"div\", {\n    style: layerStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: getItemStyles(initialOffset, currentOffset, false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: classes.previewIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, __jsx(BsBook, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 15\n    }\n  })), __jsx(\"span\", {\n    className: classes.previewItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, item === null || item === void 0 ? void 0 : item.name.substring(0, 20))))));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note-list-item.tsx"],"names":["React","useEffect","createStyles","makeStyles","useDrag","useDragLayer","getEmptyImage","BsBook","layerStyles","position","pointerEvents","zIndex","left","top","height","useStyles","theme","root","display","flexDirection","margin","color","fontSize","width","title","padding","box","cursor","border","overflow","wordWrap","boxSelected","borderRadius","backgroundColor","previewIcon","marginRight","verticalAlign","previewItem","marginLeft","preview","noteTitle","noteContent","date","empty","alignItems","justifyContent","textAlign","emptyIcon","newNoteText","dot","float","modal","paper","boxShadow","shadows","spacing","outline","button","NoteListItem","props","classes","opacity","drag","item","id","note","name","notebook","type","collect","monitor","isDragging","captureDraggingState","getItemStyles","initialOffset","currentOffset","isSnapToGrid","x","y","transform","WebkitTransform","itemType","getItem","getItemType","getInitialSourceClientOffset","getSourceClientOffset","convertToString","string","limit","convertedString","replace","substring","length","isSelected","currentNoteId","handleClickInTrash","handleSnackbar","setCurrentNoteId","isDeleted","convertTitle","formatDate","updatedAt"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { XYCoord, useDrag, useDragLayer, DragSourceMonitor } from 'react-dnd';\nimport { getEmptyImage } from 'react-dnd-html5-backend';\nimport { BsBook } from 'react-icons/bs';\nimport INote from './interfaces/inote';\nimport INoteProps from './interfaces/inoteprops';\n\nconst layerStyles: React.CSSProperties = {\n  position: 'fixed',\n  pointerEvents: 'none',\n  zIndex: 9999,\n  left: 0,\n  top: 0,\n  // width: '100%',\n  height: '100%',\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      margin: 'auto',\n      color: 'rgb(51,51,51)',\n      fontSize: '16px',\n      width: '100%',\n    },\n    title: {\n      padding: '10px',\n      fontSize: '22px',\n    },\n    box: {\n      height: '100px',\n      cursor: 'pointer',\n      display: 'flex',\n      border: '1px groove rgb(0,0,0,0)',\n      flexDirection: 'column',\n      overflow: 'hidden',\n      wordWrap: 'break-word',\n      padding: '15px',\n    },\n    boxSelected: {\n      height: '100px',\n      cursor: 'pointer',\n      display: 'flex',\n      border: '1px groove blue',\n      borderRadius: '5px',\n      backgroundColor: 'white',\n      flexDirection: 'column',\n      overflow: 'hidden',\n      wordWrap: 'break-word',\n      padding: '15px',\n    },\n    previewIcon: { marginRight: '3px', verticalAlign: 'middle' },\n    previewItem: { marginLeft: '3px' },\n    preview: {\n      border: '1px solid rgb(186,223,229)',\n      borderRadius: '3px',\n      // width: '150px',\n      overflow: 'hidden',\n      fontSize: '14px',\n      backgroundColor: 'rgb(248,248,248,0.6)',\n      padding: '10px',\n    },\n    noteTitle: {\n      color: 'rgb(61,61,61)',\n      fontSize: '14px',\n    },\n    noteContent: {\n      fontSize: '12px',\n      color: 'rgb(115,115,115)',\n      overflow: 'hidden',\n      height: '35px',\n    },\n    date: {\n      fontSize: '11px',\n      color: 'rgb(115,115,115)',\n    },\n    empty: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: 'auto',\n      textAlign: 'center',\n      padding: '35px',\n    },\n    emptyIcon: {\n      fontSize: '75px',\n    },\n    newNoteText: {\n      cursor: 'pointer',\n      color: 'rgb(0,168,45)',\n    },\n    dot: {\n      float: 'right',\n      cursor: 'pointer',\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: 'rgb(222, 222, 222)',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(1, 2, 2),\n      textAlign: 'center',\n      width: '350px',\n      borderRadius: '5px',\n      fontSize: '12px',\n      outline: 'none',\n    },\n    button: {\n      height: '30px',\n      margin: '10px 15px',\n    },\n  })\n);\n\ninterface NoteListProps extends INoteProps {\n  note: INote;\n  convertTitle: (title: string, length: number) => string;\n}\n\nexport default function NoteListItem(props: NoteListProps) {\n  const classes = useStyles();\n\n  const [{ opacity }, drag, preview] = useDrag({\n    item: {\n      id: props.note.id,\n      name: props.note.noteTitle,\n      notebook: props.notebook,\n      type: 'note',\n    },\n    collect: (monitor: DragSourceMonitor) => ({\n      opacity: monitor.isDragging() ? 0.4 : 1,\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  useEffect(() => {\n    preview(getEmptyImage(), { captureDraggingState: true });\n  }, []);\n\n  const getItemStyles = (\n    initialOffset: XYCoord | null,\n    currentOffset: XYCoord | null,\n    isSnapToGrid: boolean\n  ) => {\n    if (!initialOffset || !currentOffset) {\n      return {\n        display: 'none',\n      };\n    }\n\n    let { x, y } = currentOffset;\n\n    if (isSnapToGrid) {\n      x -= initialOffset.x;\n      y -= initialOffset.y;\n      // [x, y] = snapToGrid(x, y);\n      x += initialOffset.x;\n      y += initialOffset.y;\n    }\n\n    const transform = `translate(${x}px, ${y}px)`;\n    return {\n      transform,\n      WebkitTransform: transform,\n    };\n  };\n\n  const {\n    itemType,\n    isDragging,\n    item,\n    initialOffset,\n    currentOffset,\n  } = useDragLayer((monitor) => ({\n    item: monitor.getItem(),\n    itemType: monitor.getItemType(),\n    initialOffset: monitor.getInitialSourceClientOffset(),\n    currentOffset: monitor.getSourceClientOffset(),\n    isDragging: monitor.isDragging(),\n  }));\n\n  const convertToString = (string: any) => {\n    const limit = 30;\n    const convertedString = string.replace(/(<([^>]+)>)/gi, '');\n    return `${convertedString.substring(0, limit)}${\n      convertedString.length > limit ? '...' : ''\n    }`;\n  };\n  const isSelected = props.note.id === props.currentNoteId;\n\n  const handleClickInTrash = () => {\n    if (isSelected) {\n      props.handleSnackbar('You can not drag a note to other place', 'error');\n    }\n  };\n\n  return (\n    <>\n      <div\n        className={isSelected ? classes.boxSelected : classes.box}\n        onClick={() => props.setCurrentNoteId(props.note.id)}\n      >\n        {props.note.isDeleted ? (\n          <div onClick={handleClickInTrash}>\n            <div className={classes.noteTitle}>\n              {props.convertTitle(props.note.noteTitle, 20)}\n            </div>\n            <div className={classes.noteContent}>\n              {convertToString(props.note.note)}\n            </div>\n            <div className={classes.date}>\n              {props.formatDate(props.note.updatedAt)}\n            </div>\n          </div>\n        ) : (\n          <div ref={drag} style={{ opacity }}>\n            <div className={classes.noteTitle}>\n              {props.convertTitle(props.note.noteTitle, 20)}\n            </div>\n            <div className={classes.noteContent}>\n              {convertToString(props.note.note)}\n            </div>\n            <div className={classes.date}>\n              {props.formatDate(props.note.updatedAt)}\n            </div>\n          </div>\n        )}\n      </div>\n      <div style={layerStyles}>\n        <div style={getItemStyles(initialOffset, currentOffset, false)}>\n          <div className={classes.preview}>\n            <span className={classes.previewIcon}>\n              <BsBook />\n            </span>\n            <span className={classes.previewItem}>\n              {item?.name.substring(0, 20)}\n            </span>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}