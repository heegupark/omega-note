{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/editor.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { useQuill } from 'react-quilljs';\nimport 'quill/dist/quill.snow.css';\nimport ReactQuill from 'react-quill';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    loading: {\n      margin: '20px 20px 0px 20px'\n    },\n    progress: {\n      width: '100%',\n      margin: '20px 20px 0px 20px',\n      '& > * + *': {\n        marginTop: theme.spacing(2)\n      }\n    }\n  });\n});\nexport default function Editor(props) {\n  _s();\n\n  var classes = useStyles();\n\n  var _useQuill = useQuill(),\n      quill = _useQuill.quill,\n      quillRef = _useQuill.quillRef;\n\n  var _useState = useState(null),\n      editorHtml = _useState[0],\n      setEditorHtml = _useState[1];\n\n  useEffect(function () {\n    if (quill) {\n      quill.clipboard.dangerouslyPasteHTML('<h1>React Hook for Quill!</h1>');\n    }\n\n    console.log(quillRef.current);\n  }, [quill]);\n\n  var handleChange = function handleChange(html) {\n    setEditorHtml({\n      editorHtml: html\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(ReactQuill, {\n    onChange: handleChange,\n    value: editorHtml // modules={Editor.modules}\n    // formats={Editor.formats}\n    ,\n    bounds: '.app',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(Editor, \"XUe+lSeAatETVnXnTbG995OeJP8=\", false, function () {\n  return [useStyles, useQuill];\n});\n\n_c = Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/editor.tsx"],"names":["React","useEffect","useState","createStyles","makeStyles","useQuill","ReactQuill","useStyles","theme","loading","margin","progress","width","marginTop","spacing","Editor","props","classes","quill","quillRef","editorHtml","setEditorHtml","clipboard","dangerouslyPasteHTML","console","log","current","handleChange","html"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAAmD,OAAnD;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAgD,0BAAhD;AAEA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAO,2BAAP;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,IAAMC,SAAS,GAAGH,UAAU,CAAC,UAACI,KAAD;AAAA,SAC3BL,YAAY,CAAC;AACXM,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD,KADE;AAIXC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,KAAK,EAAE,MADC;AAERF,MAAAA,MAAM,EAAE,oBAFA;AAGR,mBAAa;AACXG,QAAAA,SAAS,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd;AADA;AAHL;AAJC,GAAD,CADe;AAAA,CAAD,CAA5B;AAeA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAA4B;AAAA;;AACzC,MAAMC,OAAO,GAAGV,SAAS,EAAzB;;AADyC,kBAEbF,QAAQ,EAFK;AAAA,MAEjCa,KAFiC,aAEjCA,KAFiC;AAAA,MAE1BC,QAF0B,aAE1BA,QAF0B;;AAAA,kBAGLjB,QAAQ,CAAC,IAAD,CAHH;AAAA,MAGlCkB,UAHkC;AAAA,MAGtBC,aAHsB;;AAIzCpB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIiB,KAAJ,EAAW;AACTA,MAAAA,KAAK,CAACI,SAAN,CAAgBC,oBAAhB,CAAqC,gCAArC;AACD;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACO,OAArB;AACD,GALQ,EAKN,CAACR,KAAD,CALM,CAAT;;AAOA,MAAMS,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAe;AAClCP,IAAAA,aAAa,CAAC;AAAED,MAAAA,UAAU,EAAEQ;AAAd,KAAD,CAAb;AACD,GAFD;;AAIA,SACE,4BAIE,MAAC,UAAD;AACE,IAAA,QAAQ,EAAED,YADZ;AAEE,IAAA,KAAK,EAAEP,UAFT,CAGE;AACA;AAJF;AAKE,IAAA,MAAM,EAAE,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAcD;;GA7BuBL,M;UACNR,S,EACYF,Q;;;KAFNU,M","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { useQuill } from 'react-quilljs';\nimport 'quill/dist/quill.snow.css';\nimport ReactQuill from 'react-quill';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    loading: {\n      margin: '20px 20px 0px 20px',\n    },\n    progress: {\n      width: '100%',\n      margin: '20px 20px 0px 20px',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n  })\n);\n\nexport default function Editor(props: any) {\n  const classes = useStyles();\n  const { quill, quillRef } = useQuill();\n  const [editorHtml, setEditorHtml] = useState(null as any);\n  useEffect(() => {\n    if (quill) {\n      quill.clipboard.dangerouslyPasteHTML('<h1>React Hook for Quill!</h1>');\n    }\n    console.log(quillRef.current);\n  }, [quill]);\n\n  const handleChange = (html: any) => {\n    setEditorHtml({ editorHtml: html });\n  };\n\n  return (\n    <>\n      {/* <div style={{ width: '100%', height: '91vh', border: 'none' }}>\n        <div ref={quillRef} />\n      </div> */}\n      <ReactQuill\n        onChange={handleChange}\n        value={editorHtml}\n        // modules={Editor.modules}\n        // formats={Editor.formats}\n        bounds={'.app'}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}