{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport NoteList from './note-list';\nimport EditorTitle from './editor-title';\nimport Editor from './editor';\nimport { CgNotes } from 'react-icons/cg';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      display: 'flex',\n      flexDdirection: 'row',\n      height: '100vh'\n    },\n    loading: {\n      margin: '20px 20px 0px 20px'\n    },\n    progress: {\n      width: '100%',\n      margin: '20px 20px 0px 20px',\n      '& > * + *': {\n        marginTop: theme.spacing(2)\n      }\n    },\n    box: {\n      display: 'flex',\n      flexDdirection: 'column',\n      backgroundColor: 'rgb(248, 248, 248)',\n      height: '100vh',\n      resize: 'horizontal',\n      minWidth: '200px',\n      width: '300px',\n      maxWidth: '400px',\n      overflow: 'hidden',\n      borderRight: '1px solid rgb(230, 230, 230)'\n    },\n    emptyIcon: {\n      fontSize: '75px'\n    },\n    newNoteText: {\n      cursor: 'pointer',\n      color: 'rgb(0,168,45)'\n    }\n  });\n});\nexport default function Note(props) {\n  _s();\n\n  var classes = useStyles();\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, props.notebook ? __jsx(DndProvider, {\n    backend: HTML5Backend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, __jsx(NoteList, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }))) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: classes.emptyIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, __jsx(CgNotes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \"It all begins with notes\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"Click the\", ' ', __jsx(\"span\", {\n    onClick: function onClick() {\n      return props.addNewNote('', '');\n    },\n    className: classes.newNoteText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"+ New Note\"), ' ', \"button in the side bar to create note.\"))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, props.notebook && __jsx(React.Fragment, null, __jsx(EditorTitle, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  })), props.currentNoteId && __jsx(Editor, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 39\n    }\n  }))))));\n}\n\n_s(Note, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note.tsx"],"names":["React","createStyles","makeStyles","DndProvider","HTML5Backend","NoteList","EditorTitle","Editor","CgNotes","useStyles","theme","root","display","flexDdirection","height","loading","margin","progress","width","marginTop","spacing","box","backgroundColor","resize","minWidth","maxWidth","overflow","borderRight","emptyIcon","fontSize","newNoteText","cursor","color","Note","props","classes","notebook","addNewNote","currentNoteId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport NoteList from './note-list';\nimport EditorTitle from './editor-title';\nimport Editor from './editor';\nimport INoteProps from './interfaces/inoteprops';\nimport { CgNotes } from 'react-icons/cg';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDdirection: 'row',\n      height: '100vh',\n    },\n    loading: {\n      margin: '20px 20px 0px 20px',\n    },\n    progress: {\n      width: '100%',\n      margin: '20px 20px 0px 20px',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    box: {\n      display: 'flex',\n      flexDdirection: 'column',\n      backgroundColor: 'rgb(248, 248, 248)',\n      height: '100vh',\n      resize: 'horizontal',\n      minWidth: '200px',\n      width: '300px',\n      maxWidth: '400px',\n      overflow: 'hidden',\n      borderRight: '1px solid rgb(230, 230, 230)',\n    },\n    emptyIcon: {\n      fontSize: '75px',\n    },\n    newNoteText: {\n      cursor: 'pointer',\n      color: 'rgb(0,168,45)',\n    },\n  })\n);\n\nexport default function Note(props: INoteProps) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <div className={classes.root}>\n        <div className={classes.box}>\n          {props.notebook ? (\n            <DndProvider backend={HTML5Backend}>\n              <NoteList {...props} />\n            </DndProvider>\n          ) : (\n            <div>\n              <div className={classes.emptyIcon}>\n                <CgNotes />\n              </div>\n              <div>It all begins with notes</div>\n              <div>\n                Click the{' '}\n                <span\n                  onClick={() => props.addNewNote('', '')}\n                  className={classes.newNoteText}\n                >\n                  + New Note\n                </span>{' '}\n                button in the side bar to create note.\n              </div>\n            </div>\n          )}\n        </div>\n        <div>\n          {props.notebook && (\n            <>\n              <EditorTitle {...props} />\n              {props.currentNoteId && <Editor {...props} />}\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}