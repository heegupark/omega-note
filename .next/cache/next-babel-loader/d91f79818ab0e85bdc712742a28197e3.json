{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note-list-item.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { useDrag, useDragLayer } from 'react-dnd';\nimport { getEmptyImage } from 'react-dnd-html5-backend';\nimport { BsBook } from 'react-icons/bs';\nimport { HiDotsHorizontal } from 'react-icons/hi';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nconst layerStyles = {\n  position: 'fixed',\n  pointerEvents: 'none',\n  zIndex: 9999,\n  left: 0,\n  top: 0,\n  // width: '100%',\n  height: '100%'\n};\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n    margin: 'auto',\n    color: 'rgb(51,51,51)',\n    fontSize: '16px',\n    width: '100%'\n  },\n  title: {\n    padding: '10px',\n    fontSize: '22px'\n  },\n  box: {\n    height: '100px',\n    cursor: 'pointer',\n    display: 'flex',\n    border: '1px groove rgb(0,0,0,0)',\n    flexDirection: 'column',\n    overflow: 'hidden',\n    wordWrap: 'break-word',\n    padding: '15px'\n  },\n  boxSelected: {\n    height: '100px',\n    cursor: 'pointer',\n    display: 'flex',\n    border: '1px groove blue',\n    borderRadius: '5px',\n    backgroundColor: 'white',\n    flexDirection: 'column',\n    overflow: 'hidden',\n    wordWrap: 'break-word',\n    padding: '15px'\n  },\n  previewIcon: {\n    marginRight: '3px',\n    verticalAlign: 'middle'\n  },\n  previewItem: {\n    marginLeft: '3px'\n  },\n  preview: {\n    border: '1px solid rgb(186,223,229)',\n    borderRadius: '3px',\n    // width: '150px',\n    overflow: 'hidden',\n    fontSize: '14px',\n    backgroundColor: 'rgb(248,248,248,0.6)',\n    padding: '10px'\n  },\n  noteTitle: {\n    color: 'rgb(61,61,61)',\n    fontSize: '14px'\n  },\n  noteContent: {\n    fontSize: '12px',\n    color: 'rgb(115,115,115)',\n    overflow: 'hidden',\n    height: '35px'\n  },\n  date: {\n    fontSize: '11px',\n    color: 'rgb(115,115,115)'\n  },\n  empty: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 'auto',\n    textAlign: 'center',\n    padding: '35px'\n  },\n  emptyIcon: {\n    fontSize: '75px'\n  },\n  newNoteText: {\n    cursor: 'pointer',\n    color: 'rgb(0,168,45)'\n  },\n  dot: {\n    float: 'right',\n    cursor: 'pointer'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: 'rgb(222, 222, 222)',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(1, 2, 2),\n    textAlign: 'center',\n    width: '350px',\n    borderRadius: '5px',\n    fontSize: '12px',\n    outline: 'none'\n  },\n  button: {\n    height: '30px',\n    margin: '10px 15px'\n  }\n}));\nexport default function NoteListItem(props) {\n  const {\n    0: showDotMenu,\n    1: setShowDotMenu\n  } = useState(false);\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [modalOpen, setModalOpen] = React.useState(false);\n\n  const handleModalOpen = () => {\n    handlePopoverClose();\n    setModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n\n  const handlePopoverOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const [{\n    opacity\n  }, drag, preview] = useDrag({\n    item: {\n      type: props.note.noteTitle\n    },\n    collect: monitor => ({\n      opacity: monitor.isDragging() ? 0.4 : 1,\n      isDragging: monitor.isDragging()\n    })\n  });\n  useEffect(() => {\n    preview(getEmptyImage(), {\n      captureDraggingState: true\n    });\n  }, []);\n\n  const getItemStyles = (initialOffset, currentOffset, isSnapToGrid) => {\n    if (!initialOffset || !currentOffset) {\n      return {\n        display: 'none'\n      };\n    }\n\n    let {\n      x,\n      y\n    } = currentOffset;\n\n    if (isSnapToGrid) {\n      x -= initialOffset.x;\n      y -= initialOffset.y; // [x, y] = snapToGrid(x, y);\n\n      x += initialOffset.x;\n      y += initialOffset.y;\n    }\n\n    const transform = `translate(${x}px, ${y}px)`;\n    return {\n      transform,\n      WebkitTransform: transform\n    };\n  };\n\n  const {\n    itemType,\n    isDragging,\n    item,\n    initialOffset,\n    currentOffset\n  } = useDragLayer(monitor => ({\n    item: monitor.getItem(),\n    itemType: monitor.getItemType(),\n    initialOffset: monitor.getInitialSourceClientOffset(),\n    currentOffset: monitor.getSourceClientOffset(),\n    isDragging: monitor.isDragging()\n  }));\n\n  const convertToString = string => {\n    const limit = 30;\n    const convertedString = string.replace(/(<([^>]+)>)/gi, '');\n    return `${convertedString.substring(0, limit)}${convertedString.length > limit ? '...' : ''}`;\n  };\n\n  const handleMoveToTrash = () => {\n    props.moveNote(props.notebook, 'trash', props.currentNoteId);\n    handlePopoverClose();\n  };\n\n  const handleRestore = () => {\n    props.moveNote('trash', props.note.lastNotebook, props.currentNoteId);\n    handlePopoverClose();\n  };\n\n  const handleDelete = () => {\n    props.deleteNote('trash', props.currentNoteId);\n    handlePopoverClose();\n    handleModalClose();\n  };\n\n  const isSelected = props.note.id === props.currentNoteId;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: isSelected ? classes.boxSelected : classes.box,\n    onClick: () => props.setCurrentNoteId(props.note.id),\n    onMouseEnter: () => {\n      setShowDotMenu(true);\n    },\n    onMouseLeave: () => {\n      setShowDotMenu(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }, props.note.isDeleted ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: classes.noteTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }, props.convertTitle(props.note.noteTitle, 20), showDotMenu && __jsx(React.Fragment, null, __jsx(Menu, {\n    id: \"dot-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handlePopoverClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 19\n    }\n  }, __jsx(MenuItem, {\n    onClick: handleRestore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 21\n    }\n  }, \"Restore\"), __jsx(MenuItem, {\n    onClick: handleModalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 21\n    }\n  }, \"Delete\")), __jsx(\"span\", {\n    className: classes.dot,\n    onClick: handlePopoverOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 19\n    }\n  }, __jsx(HiDotsHorizontal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 21\n    }\n  })))), __jsx(\"div\", {\n    className: classes.noteContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }, convertToString(props.note.note)), __jsx(\"div\", {\n    className: classes.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }, props.formatDate(props.note.updatedAt)), __jsx(Modal, {\n    open: modalOpen,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    className: classes.modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 15\n    }\n  }, __jsx(\"h2\", {\n    id: \"simple-modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }\n  }, \"Are you really want to delete?\"), __jsx(\"p\", {\n    id: \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, \"You will permanently delete this note.\"), __jsx(Button, {\n    className: classes.button,\n    variant: \"outlined\",\n    color: \"secondary\",\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 17\n    }\n  }, \"Delete\"), __jsx(Button, {\n    className: classes.button,\n    variant: \"outlined\",\n    color: \"default\",\n    onClick: handleModalClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 17\n    }\n  }, \"Cancel\")))) : __jsx(\"div\", {\n    ref: drag,\n    style: {\n      opacity\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: classes.noteTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }\n  }, props.convertTitle(props.note.noteTitle, 20), showDotMenu && __jsx(React.Fragment, null, __jsx(Menu, {\n    id: \"dot-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handlePopoverClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 19\n    }\n  }, __jsx(MenuItem, {\n    onClick: handleMoveToTrash,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 21\n    }\n  }, \"Move to trash\")), __jsx(\"span\", {\n    className: classes.dot,\n    onClick: handlePopoverOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 19\n    }\n  }, __jsx(HiDotsHorizontal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 21\n    }\n  })))), __jsx(\"div\", {\n    className: classes.noteContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }\n  }, convertToString(props.note.note)), __jsx(\"div\", {\n    className: classes.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 13\n    }\n  }, props.formatDate(props.note.updatedAt)))), __jsx(\"div\", {\n    style: layerStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: getItemStyles(initialOffset, currentOffset, false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: classes.previewIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }\n  }, __jsx(BsBook, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 15\n    }\n  })), __jsx(\"span\", {\n    className: classes.previewItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }\n  }, itemType)))));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note-list-item.tsx"],"names":["React","useEffect","useState","createStyles","makeStyles","useDrag","useDragLayer","getEmptyImage","BsBook","HiDotsHorizontal","Menu","MenuItem","Modal","Button","layerStyles","position","pointerEvents","zIndex","left","top","height","useStyles","theme","root","display","flexDirection","margin","color","fontSize","width","title","padding","box","cursor","border","overflow","wordWrap","boxSelected","borderRadius","backgroundColor","previewIcon","marginRight","verticalAlign","previewItem","marginLeft","preview","noteTitle","noteContent","date","empty","alignItems","justifyContent","textAlign","emptyIcon","newNoteText","dot","float","modal","paper","boxShadow","shadows","spacing","outline","button","NoteListItem","props","showDotMenu","setShowDotMenu","classes","anchorEl","setAnchorEl","modalOpen","setModalOpen","handleModalOpen","handlePopoverClose","handleModalClose","handlePopoverOpen","event","currentTarget","opacity","drag","item","type","note","collect","monitor","isDragging","captureDraggingState","getItemStyles","initialOffset","currentOffset","isSnapToGrid","x","y","transform","WebkitTransform","itemType","getItem","getItemType","getInitialSourceClientOffset","getSourceClientOffset","convertToString","string","limit","convertedString","replace","substring","length","handleMoveToTrash","moveNote","notebook","currentNoteId","handleRestore","lastNotebook","handleDelete","deleteNote","isSelected","id","setCurrentNoteId","isDeleted","convertTitle","Boolean","formatDate","updatedAt"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { XYCoord, useDrag, useDragLayer, DragSourceMonitor } from 'react-dnd';\nimport { getEmptyImage } from 'react-dnd-html5-backend';\nimport { BsBook } from 'react-icons/bs';\nimport { HiDotsHorizontal } from 'react-icons/hi';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport INote from './interfaces/inote';\nimport INoteProps from './interfaces/inoteprops';\n\nconst layerStyles: React.CSSProperties = {\n  position: 'fixed',\n  pointerEvents: 'none',\n  zIndex: 9999,\n  left: 0,\n  top: 0,\n  // width: '100%',\n  height: '100%',\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      margin: 'auto',\n      color: 'rgb(51,51,51)',\n      fontSize: '16px',\n      width: '100%',\n    },\n    title: {\n      padding: '10px',\n      fontSize: '22px',\n    },\n    box: {\n      height: '100px',\n      cursor: 'pointer',\n      display: 'flex',\n      border: '1px groove rgb(0,0,0,0)',\n      flexDirection: 'column',\n      overflow: 'hidden',\n      wordWrap: 'break-word',\n      padding: '15px',\n    },\n    boxSelected: {\n      height: '100px',\n      cursor: 'pointer',\n      display: 'flex',\n      border: '1px groove blue',\n      borderRadius: '5px',\n      backgroundColor: 'white',\n      flexDirection: 'column',\n      overflow: 'hidden',\n      wordWrap: 'break-word',\n      padding: '15px',\n    },\n    previewIcon: { marginRight: '3px', verticalAlign: 'middle' },\n    previewItem: { marginLeft: '3px' },\n    preview: {\n      border: '1px solid rgb(186,223,229)',\n      borderRadius: '3px',\n      // width: '150px',\n      overflow: 'hidden',\n      fontSize: '14px',\n      backgroundColor: 'rgb(248,248,248,0.6)',\n      padding: '10px',\n    },\n    noteTitle: {\n      color: 'rgb(61,61,61)',\n      fontSize: '14px',\n    },\n    noteContent: {\n      fontSize: '12px',\n      color: 'rgb(115,115,115)',\n      overflow: 'hidden',\n      height: '35px',\n    },\n    date: {\n      fontSize: '11px',\n      color: 'rgb(115,115,115)',\n    },\n    empty: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: 'auto',\n      textAlign: 'center',\n      padding: '35px',\n    },\n    emptyIcon: {\n      fontSize: '75px',\n    },\n    newNoteText: {\n      cursor: 'pointer',\n      color: 'rgb(0,168,45)',\n    },\n    dot: {\n      float: 'right',\n      cursor: 'pointer',\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: 'rgb(222, 222, 222)',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(1, 2, 2),\n      textAlign: 'center',\n      width: '350px',\n      borderRadius: '5px',\n      fontSize: '12px',\n      outline: 'none',\n    },\n    button: {\n      height: '30px',\n      margin: '10px 15px',\n    },\n  })\n);\n\ninterface NoteListProps extends INoteProps {\n  note: INote;\n  convertTitle: (title: string, length: number) => string;\n}\n\nexport default function NoteListItem(props: NoteListProps) {\n  const [showDotMenu, setShowDotMenu] = useState(false);\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [modalOpen, setModalOpen] = React.useState(false);\n\n  const handleModalOpen = () => {\n    handlePopoverClose();\n    setModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n\n  const handlePopoverOpen = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const [{ opacity }, drag, preview] = useDrag({\n    item: { type: props.note.noteTitle },\n    collect: (monitor: DragSourceMonitor) => ({\n      opacity: monitor.isDragging() ? 0.4 : 1,\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  useEffect(() => {\n    preview(getEmptyImage(), { captureDraggingState: true });\n  }, []);\n\n  const getItemStyles = (\n    initialOffset: XYCoord | null,\n    currentOffset: XYCoord | null,\n    isSnapToGrid: boolean\n  ) => {\n    if (!initialOffset || !currentOffset) {\n      return {\n        display: 'none',\n      };\n    }\n\n    let { x, y } = currentOffset;\n\n    if (isSnapToGrid) {\n      x -= initialOffset.x;\n      y -= initialOffset.y;\n      // [x, y] = snapToGrid(x, y);\n      x += initialOffset.x;\n      y += initialOffset.y;\n    }\n\n    const transform = `translate(${x}px, ${y}px)`;\n    return {\n      transform,\n      WebkitTransform: transform,\n    };\n  };\n\n  const {\n    itemType,\n    isDragging,\n    item,\n    initialOffset,\n    currentOffset,\n  } = useDragLayer((monitor) => ({\n    item: monitor.getItem(),\n    itemType: monitor.getItemType(),\n    initialOffset: monitor.getInitialSourceClientOffset(),\n    currentOffset: monitor.getSourceClientOffset(),\n    isDragging: monitor.isDragging(),\n  }));\n\n  const convertToString = (string: any) => {\n    const limit = 30;\n    const convertedString = string.replace(/(<([^>]+)>)/gi, '');\n    return `${convertedString.substring(0, limit)}${\n      convertedString.length > limit ? '...' : ''\n    }`;\n  };\n\n  const handleMoveToTrash = () => {\n    props.moveNote(props.notebook, 'trash', props.currentNoteId);\n    handlePopoverClose();\n  };\n\n  const handleRestore = () => {\n    props.moveNote('trash', props.note.lastNotebook, props.currentNoteId);\n    handlePopoverClose();\n  };\n\n  const handleDelete = () => {\n    props.deleteNote('trash', props.currentNoteId);\n    handlePopoverClose();\n    handleModalClose();\n  };\n\n  const isSelected = props.note.id === props.currentNoteId;\n  return (\n    <>\n      <div\n        className={isSelected ? classes.boxSelected : classes.box}\n        onClick={() => props.setCurrentNoteId(props.note.id)}\n        onMouseEnter={() => {\n          setShowDotMenu(true);\n        }}\n        onMouseLeave={() => {\n          setShowDotMenu(false);\n        }}\n      >\n        {props.note.isDeleted ? (\n          <div>\n            <div className={classes.noteTitle}>\n              {props.convertTitle(props.note.noteTitle, 20)}\n              {showDotMenu && (\n                <>\n                  <Menu\n                    id=\"dot-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handlePopoverClose}\n                  >\n                    <MenuItem onClick={handleRestore}>Restore</MenuItem>\n                    <MenuItem onClick={handleModalOpen}>Delete</MenuItem>\n                  </Menu>\n                  <span className={classes.dot} onClick={handlePopoverOpen}>\n                    <HiDotsHorizontal />\n                  </span>\n                </>\n              )}\n            </div>\n            <div className={classes.noteContent}>\n              {convertToString(props.note.note)}\n            </div>\n            <div className={classes.date}>\n              {props.formatDate(props.note.updatedAt)}\n            </div>\n            <Modal\n              open={modalOpen}\n              aria-labelledby=\"simple-modal-title\"\n              aria-describedby=\"simple-modal-description\"\n              className={classes.modal}\n            >\n              <div className={classes.paper}>\n                <h2 id=\"simple-modal-title\">Are you really want to delete?</h2>\n                <p id=\"simple-modal-description\">\n                  You will permanently delete this note.\n                </p>\n                <Button\n                  className={classes.button}\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  onClick={handleDelete}\n                >\n                  Delete\n                </Button>\n                <Button\n                  className={classes.button}\n                  variant=\"outlined\"\n                  color=\"default\"\n                  onClick={handleModalClose}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </Modal>\n          </div>\n        ) : (\n          <div ref={drag} style={{ opacity }}>\n            <div className={classes.noteTitle}>\n              {props.convertTitle(props.note.noteTitle, 20)}\n              {showDotMenu && (\n                <>\n                  <Menu\n                    id=\"dot-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handlePopoverClose}\n                  >\n                    <MenuItem onClick={handleMoveToTrash}>\n                      Move to trash\n                    </MenuItem>\n                  </Menu>\n                  <span className={classes.dot} onClick={handlePopoverOpen}>\n                    <HiDotsHorizontal />\n                  </span>\n                </>\n              )}\n            </div>\n            <div className={classes.noteContent}>\n              {convertToString(props.note.note)}\n            </div>\n            <div className={classes.date}>\n              {props.formatDate(props.note.updatedAt)}\n            </div>\n          </div>\n        )}\n      </div>\n      <div style={layerStyles}>\n        <div style={getItemStyles(initialOffset, currentOffset, false)}>\n          <div className={classes.preview}>\n            <span className={classes.previewIcon}>\n              <BsBook />\n            </span>\n            <span className={classes.previewItem}>{itemType}</span>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}