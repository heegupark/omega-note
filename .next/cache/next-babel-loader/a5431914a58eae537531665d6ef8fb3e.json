{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note-list-item.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { useDrag, useDragLayer } from 'react-dnd';\nimport { getEmptyImage } from 'react-dnd-html5-backend';\nimport { BsBook } from 'react-icons/bs';\nimport Moment from 'react-moment';\nconst layerStyles = {\n  position: 'fixed',\n  pointerEvents: 'none',\n  zIndex: 9999,\n  left: 0,\n  top: 0,\n  // width: '100%',\n  height: '100%'\n};\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n    margin: 'auto',\n    color: 'rgb(51,51,51)',\n    fontSize: '16px',\n    width: '100%'\n  },\n  title: {\n    padding: '10px',\n    fontSize: '22px'\n  },\n  box: {\n    // position: 'sticky',\n    height: '100px',\n    cursor: 'pointer',\n    display: 'flex',\n    width: '100%',\n    flexDirection: 'column',\n    overflow: 'hidden',\n    wordWrap: 'break-word',\n    padding: '15px'\n  },\n  previewIcon: {\n    marginRight: '3px',\n    verticalAlign: 'middle'\n  },\n  previewItem: {\n    marginLeft: '3px'\n  },\n  preview: {\n    border: '1px solid rgb(186,223,229)',\n    borderRadius: '3px',\n    // width: '150px',\n    overflow: 'hidden',\n    fontSize: '14px',\n    backgroundColor: 'rgb(248,248,248,0.6)',\n    padding: '10px'\n  },\n  noteTitle: {\n    color: 'rgb(61,61,61)',\n    fontSize: '14px'\n  },\n  noteContent: {\n    fontSize: '12px',\n    color: 'rgb(115,115,115)',\n    overflow: 'hidden',\n    height: '35px'\n  },\n  date: {\n    fontSize: '11px',\n    color: 'rgb(115,115,115)'\n  },\n  empty: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 'auto',\n    textAlign: 'center',\n    padding: '35px'\n  },\n  emptyIcon: {\n    fontSize: '75px'\n  },\n  newNoteText: {\n    cursor: 'pointer',\n    color: 'rgb(0,168,45)'\n  }\n}));\nexport default function NoteListItem(props) {\n  const classes = useStyles();\n  const [{\n    opacity\n  }, drag, preview] = useDrag({\n    item: {\n      type: props.note.noteTitle\n    },\n    collect: monitor => ({\n      opacity: monitor.isDragging() ? 0.4 : 1,\n      isDragging: monitor.isDragging()\n    })\n  });\n  useEffect(() => {\n    preview(getEmptyImage(), {\n      captureDraggingState: true\n    });\n  }, []);\n\n  const getItemStyles = (initialOffset, currentOffset, isSnapToGrid) => {\n    if (!initialOffset || !currentOffset) {\n      return {\n        display: 'none'\n      };\n    }\n\n    let {\n      x,\n      y\n    } = currentOffset;\n\n    if (isSnapToGrid) {\n      x -= initialOffset.x;\n      y -= initialOffset.y; // [x, y] = snapToGrid(x, y);\n\n      x += initialOffset.x;\n      y += initialOffset.y;\n    }\n\n    const transform = `translate(${x}px, ${y}px)`;\n    return {\n      transform,\n      WebkitTransform: transform\n    };\n  };\n\n  const {\n    itemType,\n    isDragging,\n    item,\n    initialOffset,\n    currentOffset\n  } = useDragLayer(monitor => ({\n    item: monitor.getItem(),\n    itemType: monitor.getItemType(),\n    initialOffset: monitor.getInitialSourceClientOffset(),\n    currentOffset: monitor.getSourceClientOffset(),\n    isDragging: monitor.isDragging()\n  }));\n\n  const convertToString = string => {\n    const limit = 30;\n    const convertedString = string.replace(/(<([^>]+)>)/gi, '');\n    return `${convertedString.substring(0, limit)}${convertedString.length > limit ? '...' : ''}`;\n  };\n\n  const formatDate = date => {\n    const createdTime = new Date(date);\n    const currentTime = new Date();\n    let diff = (currentTime - createdTime) / 1000;\n\n    if (diff <= 86400) {\n      return __jsx(Moment, {\n        fromNow: true,\n        date: props.note.updatedAt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 14\n        }\n      });\n    } else if (diff <= 172800) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 14\n        }\n      }, \"Yesterday\");\n    } else {\n      return __jsx(Moment, {\n        format: \"MMM D, YYYY\",\n        date: props.note.updatedAt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 14\n        }\n      });\n    }\n  };\n\n  const isSelected = props.note.id === props.currentNote;\n  console.log(isSelected);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.box,\n    style: {\n      border: isSelected ? '1px groove blue' : ''\n    },\n    onClick: () => props.setCurrentNote(props.note.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    ref: drag,\n    style: {\n      opacity\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.noteTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, props.note.noteTitle), __jsx(\"div\", {\n    className: classes.noteContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, convertToString(props.note.note)), __jsx(\"div\", {\n    className: classes.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, formatDate(props.note.updatedAt)))), __jsx(\"div\", {\n    style: layerStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: getItemStyles(initialOffset, currentOffset, props.snapToGrid),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: classes.previewIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, __jsx(BsBook, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  })), __jsx(\"span\", {\n    className: classes.previewItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, itemType)))));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note-list-item.tsx"],"names":["React","useEffect","createStyles","makeStyles","useDrag","useDragLayer","getEmptyImage","BsBook","Moment","layerStyles","position","pointerEvents","zIndex","left","top","height","useStyles","theme","root","display","flexDirection","margin","color","fontSize","width","title","padding","box","cursor","overflow","wordWrap","previewIcon","marginRight","verticalAlign","previewItem","marginLeft","preview","border","borderRadius","backgroundColor","noteTitle","noteContent","date","empty","alignItems","justifyContent","textAlign","emptyIcon","newNoteText","NoteListItem","props","classes","opacity","drag","item","type","note","collect","monitor","isDragging","captureDraggingState","getItemStyles","initialOffset","currentOffset","isSnapToGrid","x","y","transform","WebkitTransform","itemType","getItem","getItemType","getInitialSourceClientOffset","getSourceClientOffset","convertToString","string","limit","convertedString","replace","substring","length","formatDate","createdTime","Date","currentTime","diff","updatedAt","isSelected","id","currentNote","console","log","setCurrentNote","snapToGrid"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { XYCoord, useDrag, useDragLayer, DragSourceMonitor } from 'react-dnd';\nimport { getEmptyImage } from 'react-dnd-html5-backend';\nimport { BsBook } from 'react-icons/bs';\nimport Moment from 'react-moment';\n\nconst layerStyles: React.CSSProperties = {\n  position: 'fixed',\n  pointerEvents: 'none',\n  zIndex: 9999,\n  left: 0,\n  top: 0,\n  // width: '100%',\n  height: '100%',\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      margin: 'auto',\n      color: 'rgb(51,51,51)',\n      fontSize: '16px',\n      width: '100%',\n    },\n    title: {\n      padding: '10px',\n      fontSize: '22px',\n    },\n    box: {\n      // position: 'sticky',\n      height: '100px',\n      cursor: 'pointer',\n      display: 'flex',\n      width: '100%',\n      flexDirection: 'column',\n      overflow: 'hidden',\n      wordWrap: 'break-word',\n      padding: '15px',\n    },\n    previewIcon: { marginRight: '3px', verticalAlign: 'middle' },\n    previewItem: { marginLeft: '3px' },\n    preview: {\n      border: '1px solid rgb(186,223,229)',\n      borderRadius: '3px',\n      // width: '150px',\n      overflow: 'hidden',\n      fontSize: '14px',\n      backgroundColor: 'rgb(248,248,248,0.6)',\n      padding: '10px',\n    },\n    noteTitle: {\n      color: 'rgb(61,61,61)',\n      fontSize: '14px',\n    },\n    noteContent: {\n      fontSize: '12px',\n      color: 'rgb(115,115,115)',\n      overflow: 'hidden',\n      height: '35px',\n    },\n    date: {\n      fontSize: '11px',\n      color: 'rgb(115,115,115)',\n    },\n    empty: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: 'auto',\n      textAlign: 'center',\n      padding: '35px',\n    },\n    emptyIcon: {\n      fontSize: '75px',\n    },\n    newNoteText: {\n      cursor: 'pointer',\n      color: 'rgb(0,168,45)',\n    },\n  })\n);\n\nexport default function NoteListItem(props: any) {\n  const classes = useStyles();\n\n  const [{ opacity }, drag, preview] = useDrag({\n    item: { type: props.note.noteTitle },\n    collect: (monitor: DragSourceMonitor) => ({\n      opacity: monitor.isDragging() ? 0.4 : 1,\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  useEffect(() => {\n    preview(getEmptyImage(), { captureDraggingState: true });\n  }, []);\n\n  const getItemStyles = (\n    initialOffset: XYCoord | null,\n    currentOffset: XYCoord | null,\n    isSnapToGrid: boolean\n  ) => {\n    if (!initialOffset || !currentOffset) {\n      return {\n        display: 'none',\n      };\n    }\n\n    let { x, y } = currentOffset;\n\n    if (isSnapToGrid) {\n      x -= initialOffset.x;\n      y -= initialOffset.y;\n      // [x, y] = snapToGrid(x, y);\n      x += initialOffset.x;\n      y += initialOffset.y;\n    }\n\n    const transform = `translate(${x}px, ${y}px)`;\n    return {\n      transform,\n      WebkitTransform: transform,\n    };\n  };\n\n  const {\n    itemType,\n    isDragging,\n    item,\n    initialOffset,\n    currentOffset,\n  } = useDragLayer((monitor) => ({\n    item: monitor.getItem(),\n    itemType: monitor.getItemType(),\n    initialOffset: monitor.getInitialSourceClientOffset(),\n    currentOffset: monitor.getSourceClientOffset(),\n    isDragging: monitor.isDragging(),\n  }));\n\n  const convertToString = (string: any) => {\n    const limit = 30;\n    const convertedString = string.replace(/(<([^>]+)>)/gi, '');\n    return `${convertedString.substring(0, limit)}${\n      convertedString.length > limit ? '...' : ''\n    }`;\n  };\n\n  const formatDate = (date: Date) => {\n    const createdTime = new Date(date) as any;\n    const currentTime = new Date() as any;\n    let diff = (currentTime - createdTime) / 1000;\n    if (diff <= 86400) {\n      return <Moment fromNow date={props.note.updatedAt} />;\n    } else if (diff <= 172800) {\n      return <div>Yesterday</div>;\n    } else {\n      return <Moment format=\"MMM D, YYYY\" date={props.note.updatedAt} />;\n    }\n  };\n\n  const isSelected = props.note.id === props.currentNote;\n  console.log(isSelected);\n  return (\n    <>\n      <div\n        className={classes.box}\n        style={{ border: isSelected ? '1px groove blue' : '' }}\n        onClick={() => props.setCurrentNote(props.note.id)}\n      >\n        <div ref={drag} style={{ opacity }}>\n          <div className={classes.noteTitle}>{props.note.noteTitle}</div>\n          <div className={classes.noteContent}>\n            {convertToString(props.note.note)}\n          </div>\n          <div className={classes.date}>{formatDate(props.note.updatedAt)}</div>\n        </div>\n      </div>\n      <div style={layerStyles}>\n        <div\n          style={getItemStyles(initialOffset, currentOffset, props.snapToGrid)}\n        >\n          <div className={classes.preview}>\n            <span className={classes.previewIcon}>\n              <BsBook />\n            </span>\n            <span className={classes.previewItem}>{itemType}</span>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}