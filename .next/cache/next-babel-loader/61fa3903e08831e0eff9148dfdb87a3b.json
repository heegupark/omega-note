{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note-list.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { CgNotes } from 'react-icons/cg';\nimport Divider from '@material-ui/core/Divider';\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n    margin: 'auto',\n    color: 'rgb(51,51,51)',\n    fontSize: '16px',\n    width: '100%'\n  },\n  title: {\n    padding: '10px',\n    fontSize: '22px'\n  },\n  list: {\n    height: '100px',\n    cursor: 'pointer',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  noteTitle: {\n    padding: '5px 20px',\n    // height: '100px',\n    '&:active': {\n      width: '80px',\n      height: '30px',\n      border: '1px solid green',\n      borderRadius: '5px'\n    }\n  },\n  noteContent: {\n    padding: '5px 20px'\n  },\n  draggingContent: {\n    height: '100px',\n    cursor: 'pointer',\n    display: 'flex',\n    flexDirection: 'column',\n    opacity: '0.3',\n    borderRadius: '5px'\n  },\n  empty: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 'auto',\n    textAlign: 'center',\n    padding: '35px'\n  },\n  emptyIcon: {\n    fontSize: '75px'\n  },\n  newNoteText: {\n    cursor: 'pointer',\n    color: 'rgb(0,168,45)'\n  }\n}));\nexport default function NoteList(props) {\n  const {\n    0: isDragging,\n    1: setIsDragging\n  } = useState(false);\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"title\"), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), props.notebooks[props.notebook].notes.length > 0 ? __jsx(React.Fragment, null, props.notebooks[props.notebook].notes.map(note => {\n    return __jsx(\"div\", {\n      key: note.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, isDragging ? __jsx(\"div\", {\n      className: classes.draggingContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }, __jsx(\"div\", {\n      onDragEnd: () => {\n        setIsDragging(false);\n      },\n      className: classes.noteTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, note.noteTitle), __jsx(\"div\", {\n      onDragEnd: () => {\n        setIsDragging(false);\n      },\n      className: classes.noteContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, note.note)) : __jsx(\"div\", {\n      className: classes.list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }, __jsx(\"div\", {\n      draggable: true,\n      onDrag: () => {\n        setIsDragging(true);\n      },\n      className: classes.noteTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, note.noteTitle), __jsx(\"div\", {\n      draggable: true,\n      onDrag: () => {\n        setIsDragging(true);\n      },\n      className: classes.noteContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, note.note)), __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }));\n  })) : __jsx(\"div\", {\n    className: classes.empty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.emptyIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, __jsx(CgNotes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, \"It all begins with notes\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"Click the\", ' ', __jsx(\"span\", {\n    onClick: () => props.addNewNote(),\n    className: classes.newNoteText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"+ New Note\"), ' ', \"button in the side bar to create note.\")));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note-list.tsx"],"names":["React","useState","createStyles","makeStyles","CgNotes","Divider","useStyles","theme","root","display","flexDirection","height","margin","color","fontSize","width","title","padding","list","cursor","noteTitle","border","borderRadius","noteContent","draggingContent","opacity","empty","alignItems","justifyContent","textAlign","emptyIcon","newNoteText","NoteList","props","isDragging","setIsDragging","classes","notebooks","notebook","notes","length","map","note","id","addNewNote"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { CgNotes } from 'react-icons/cg';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      margin: 'auto',\n      color: 'rgb(51,51,51)',\n      fontSize: '16px',\n      width: '100%',\n    },\n    title: {\n      padding: '10px',\n      fontSize: '22px',\n    },\n    list: {\n      height: '100px',\n      cursor: 'pointer',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    noteTitle: {\n      padding: '5px 20px',\n      // height: '100px',\n      '&:active': {\n        width: '80px',\n        height: '30px',\n        border: '1px solid green',\n        borderRadius: '5px',\n      },\n    },\n    noteContent: {\n      padding: '5px 20px',\n    },\n    draggingContent: {\n      height: '100px',\n      cursor: 'pointer',\n      display: 'flex',\n      flexDirection: 'column',\n      opacity: '0.3',\n      borderRadius: '5px',\n    },\n    empty: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: 'auto',\n      textAlign: 'center',\n      padding: '35px',\n    },\n    emptyIcon: {\n      fontSize: '75px',\n    },\n    newNoteText: {\n      cursor: 'pointer',\n      color: 'rgb(0,168,45)',\n    },\n  })\n);\nexport default function NoteList(props: any) {\n  const [isDragging, setIsDragging] = useState(false);\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>title</div>\n      <Divider />\n      {props.notebooks[props.notebook].notes.length > 0 ? (\n        <>\n          {props.notebooks[props.notebook].notes.map((note: any) => {\n            return (\n              <div key={note.id}>\n                {isDragging ? (\n                  <div className={classes.draggingContent}>\n                    <div\n                      onDragEnd={() => {\n                        setIsDragging(false);\n                      }}\n                      className={classes.noteTitle}\n                    >\n                      {note.noteTitle}\n                    </div>\n                    <div\n                      onDragEnd={() => {\n                        setIsDragging(false);\n                      }}\n                      className={classes.noteContent}\n                    >\n                      {note.note}\n                    </div>\n                  </div>\n                ) : (\n                  <div className={classes.list}>\n                    <div\n                      draggable\n                      onDrag={() => {\n                        setIsDragging(true);\n                      }}\n                      className={classes.noteTitle}\n                    >\n                      {note.noteTitle}\n                    </div>\n                    <div\n                      draggable\n                      onDrag={() => {\n                        setIsDragging(true);\n                      }}\n                      className={classes.noteContent}\n                    >\n                      {note.note}\n                    </div>\n                  </div>\n                )}\n                <Divider />\n              </div>\n            );\n          })}\n        </>\n      ) : (\n        <div className={classes.empty}>\n          <div className={classes.emptyIcon}>\n            <CgNotes />\n          </div>\n          <div>It all begins with notes</div>\n          <div>\n            Click the{' '}\n            <span\n              onClick={() => props.addNewNote()}\n              className={classes.newNoteText}\n            >\n              + New Note\n            </span>{' '}\n            button in the side bar to create note.\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}