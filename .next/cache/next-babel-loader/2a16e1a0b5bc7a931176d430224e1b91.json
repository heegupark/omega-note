{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note-list.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { CgNotes } from 'react-icons/cg';\nimport Divider from '@material-ui/core/Divider';\nimport NoteListItem from './note-list-item';\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n    margin: 'auto',\n    color: 'rgb(51,51,51)',\n    fontSize: '16px',\n    width: '100%'\n  },\n  title: {\n    padding: '10px 15px',\n    fontSize: '22px',\n    wordBreak: 'break-word'\n  },\n  noteCount: {\n    fontSize: '12px',\n    padding: '5px 15px',\n    color: 'rgb(107,107,107)'\n  },\n  date: {\n    fontSize: '10px',\n    paddingLeft: '10px'\n  },\n  listBox: {\n    overflowY: 'scroll'\n  },\n  empty: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 'auto',\n    textAlign: 'center',\n    padding: '35px'\n  },\n  emptyIcon: {\n    fontSize: '75px'\n  },\n  newNoteText: {\n    cursor: 'pointer',\n    color: 'rgb(0,168,45)'\n  }\n}));\nexport default function NoteList(props) {\n  const classes = useStyles();\n\n  const convertTitle = (title, length) => {\n    return title.length > length ? title.substring(0, length) + '...' : title;\n  };\n\n  const noteCount = props.notebook === 'trash' ? props.trash.notes.length : props.notebooks[props.notebook].notes.length;\n  const notebookTitle = props.notebook === 'trash' ? props.trash.title : props.notebooks[props.notebook].title;\n  const notebookUpdatedAt = props.notebook === 'trash' ? props.trash.updatedAt : props.notebooks[props.notebook].updatedAt;\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, convertTitle(notebookTitle, 15)), __jsx(\"div\", {\n    className: classes.noteCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, `${noteCount} note${noteCount > 1 ? 's' : ''}`, __jsx(\"span\", {\n    className: classes.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, 'Last edited on ', props.formatDate(notebookUpdatedAt))), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), props.notebooks[props.notebook].notes.length > 0 ? __jsx(\"div\", {\n    className: classes.listBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, props.notebooks[props.notebook].notes.map(note => {\n    return __jsx(\"div\", {\n      key: note.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, __jsx(NoteListItem, _extends({\n      note: note\n    }, props, {\n      convertTitle: convertTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    })), __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }));\n  })) : __jsx(\"div\", {\n    className: classes.empty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.emptyIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, __jsx(CgNotes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"It all begins with notes\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Click the\", ' ', __jsx(\"span\", {\n    onClick: () => props.addNewNote(),\n    className: classes.newNoteText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"+ New Note\"), ' ', \"button in the side bar to create note.\")));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note-list.tsx"],"names":["React","createStyles","makeStyles","CgNotes","Divider","NoteListItem","useStyles","theme","root","display","flexDirection","height","margin","color","fontSize","width","title","padding","wordBreak","noteCount","date","paddingLeft","listBox","overflowY","empty","alignItems","justifyContent","textAlign","emptyIcon","newNoteText","cursor","NoteList","props","classes","convertTitle","length","substring","notebook","trash","notes","notebooks","notebookTitle","notebookUpdatedAt","updatedAt","formatDate","map","note","id","addNewNote"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { CgNotes } from 'react-icons/cg';\nimport Divider from '@material-ui/core/Divider';\nimport NoteListItem from './note-list-item';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      margin: 'auto',\n      color: 'rgb(51,51,51)',\n      fontSize: '16px',\n      width: '100%',\n    },\n    title: {\n      padding: '10px 15px',\n      fontSize: '22px',\n      wordBreak: 'break-word',\n    },\n    noteCount: {\n      fontSize: '12px',\n      padding: '5px 15px',\n      color: 'rgb(107,107,107)',\n    },\n    date: {\n      fontSize: '10px',\n      paddingLeft: '10px',\n    },\n    listBox: {\n      overflowY: 'scroll',\n    },\n    empty: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: 'auto',\n      textAlign: 'center',\n      padding: '35px',\n    },\n    emptyIcon: {\n      fontSize: '75px',\n    },\n    newNoteText: {\n      cursor: 'pointer',\n      color: 'rgb(0,168,45)',\n    },\n  })\n);\n\nexport default function NoteList(props: any) {\n  const classes = useStyles();\n\n  const convertTitle = (title: string, length: number) => {\n    return title.length > length ? title.substring(0, length) + '...' : title;\n  };\n\n  const noteCount =\n    props.notebook === 'trash'\n      ? props.trash.notes.length\n      : props.notebooks[props.notebook].notes.length;\n  const notebookTitle =\n    props.notebook === 'trash'\n      ? props.trash.title\n      : props.notebooks[props.notebook].title;\n  const notebookUpdatedAt =\n    props.notebook === 'trash'\n      ? props.trash.updatedAt\n      : props.notebooks[props.notebook].updatedAt;\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>{convertTitle(notebookTitle, 15)}</div>\n\n      <div className={classes.noteCount}>\n        {`${noteCount} note${noteCount > 1 ? 's' : ''}`}\n        <span className={classes.date}>\n          {'Last edited on '}\n          {props.formatDate(notebookUpdatedAt)}\n        </span>\n      </div>\n      <Divider />\n      {props.notebooks[props.notebook].notes.length > 0 ? (\n        <div className={classes.listBox}>\n          {props.notebooks[props.notebook].notes.map((note: any) => {\n            return (\n              <div key={note.id}>\n                <NoteListItem\n                  note={note}\n                  {...props}\n                  convertTitle={convertTitle}\n                />\n                <Divider />\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <div className={classes.empty}>\n          <div className={classes.emptyIcon}>\n            <CgNotes />\n          </div>\n          <div>It all begins with notes</div>\n          <div>\n            Click the{' '}\n            <span\n              onClick={() => props.addNewNote()}\n              className={classes.newNoteText}\n            >\n              + New Note\n            </span>{' '}\n            button in the side bar to create note.\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}