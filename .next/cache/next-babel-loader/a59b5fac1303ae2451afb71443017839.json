{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/pages/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Main from '../components/main';\nimport IndexPage from '../components/index-page';\nimport Disclaimer from '../components/disclaimer';\n\nvar _default = /*#__PURE__*/function (_Component) {\n  _inherits(_default, _Component);\n\n  var _super = _createSuper(_default);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isAcceptDisclaimer: false\n    };\n    _this.setIsAcceptDisclaimer = _this.setIsAcceptDisclaimer.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (localStorage.getItem('omeganoteaccept')) {\n        this.setIsAcceptDisclaimer(true);\n      }\n    }\n  }, {\n    key: \"setIsAcceptDisclaimer\",\n    value: function setIsAcceptDisclaimer(isAccepted) {\n      this.setState({\n        isAcceptDisclaimer: isAccepted\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(IndexPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }), __jsx(Main, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }), !this.state.isAcceptDisclaimer && __jsx(Disclaimer, {\n        setIsAcceptDisclaimer: this.setIsAcceptDisclaimer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return _default;\n}(Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/pages/index.tsx"],"names":["React","Component","Main","IndexPage","Disclaimer","props","state","isAcceptDisclaimer","setIsAcceptDisclaimer","bind","localStorage","getItem","isAccepted","setState"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;;;;;AAOE,oBAAYC,KAAZ,EAA+B;AAAA;;AAAA;;AAC7B,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,kBAAkB,EAAE;AADT,KAAb;AAGA,UAAKC,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BC,IAA3B,+BAA7B;AAL6B;AAM9B;;;;wCAEmB;AAClB,UAAIC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAJ,EAA6C;AAC3C,aAAKH,qBAAL,CAA2B,IAA3B;AACD;AACF;;;0CAEqBI,U,EAAqB;AACzC,WAAKC,QAAL,CAAc;AACZN,QAAAA,kBAAkB,EAAEK;AADR,OAAd;AAGD;;;6BAEQ;AACP,aACE,4BACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGG,CAAC,KAAKN,KAAL,CAAWC,kBAAZ,IACC,MAAC,UAAD;AAAY,QAAA,qBAAqB,EAAE,KAAKC,qBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADF;AASD;;;;EA/B0BP,S","sourcesContent":["import React, { Component } from 'react';\nimport Main from '../components/main';\nimport IndexPage from '../components/index-page';\nimport Disclaimer from '../components/disclaimer';\n\ninterface IndexProps {\n  isAcceptDisclaimer: boolean;\n}\n\nexport default class extends Component {\n  constructor(props: IndexProps) {\n    super(props);\n    this.state = {\n      isAcceptDisclaimer: false,\n    };\n    this.setIsAcceptDisclaimer = this.setIsAcceptDisclaimer.bind(this);\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('omeganoteaccept')) {\n      this.setIsAcceptDisclaimer(true);\n    }\n  }\n\n  setIsAcceptDisclaimer(isAccepted: boolean) {\n    this.setState({\n      isAcceptDisclaimer: isAccepted,\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <IndexPage />\n        <Main />\n        {!this.state.isAcceptDisclaimer && (\n          <Disclaimer setIsAcceptDisclaimer={this.setIsAcceptDisclaimer} />\n        )}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}