{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note-list.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { CgNotes } from 'react-icons/cg';\nimport Divider from '@material-ui/core/Divider';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      margin: 'auto',\n      color: 'rgb(51,51,51)',\n      fontSize: '16px',\n      width: '100%'\n    },\n    title: {\n      padding: '10px',\n      fontSize: '22px'\n    },\n    list: {\n      height: '100px',\n      cursor: 'pointer',\n      '&:active': {\n        border: '2px groove rgb(0,119,179)',\n        borderRadius: '5px'\n      }\n    },\n    content: {\n      padding: '20px',\n      height: '100px'\n    },\n    empty: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: 'auto',\n      textAlign: 'center',\n      padding: '35px'\n    },\n    emptyIcon: {\n      fontSize: '75px'\n    },\n    newNoteText: {\n      cursor: 'pointer',\n      color: 'rgb(0,168,45)'\n    }\n  });\n});\nexport default function NoteList(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(false),\n      mousePressed = _useState[0],\n      setMousePressed = _useState[1];\n\n  var classes = useStyles();\n\n  var handleDragStart = function handleDragStart(noteId, note) {\n    var newNote = _objectSpread(_objectSpread({}, note), {}, {\n      dragging: true\n    });\n\n    props.updateNote(props.notebook, noteId, newNote);\n  };\n\n  var handleDragEnd = function handleDragEnd(noteId, note) {\n    var newNote = _objectSpread(_objectSpread({}, note), {}, {\n      dragging: false\n    });\n\n    props.updateNote(props.notebook, noteId, newNote);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"title\"), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), props.notebooks[props.notebook].notes.length > 0 ? __jsx(React.Fragment, null, props.notebooks[props.notebook].notes.map(function (note) {\n    return __jsx(\"div\", {\n      key: note.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      onMouseDown: function onMouseDown() {\n        return handleDragStart(note.id, note);\n      },\n      onDragStart: function onDragStart() {\n        return handleDragStart(note.id, note);\n      },\n      className: classes.list,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: classes.content,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }, note.noteTitle)), __jsx(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }));\n  })) : __jsx(\"div\", {\n    className: classes.empty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.emptyIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, __jsx(CgNotes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"It all begins with notes\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Click the\", ' ', __jsx(\"span\", {\n    onClick: function onClick() {\n      return props.addNewNote();\n    },\n    className: classes.newNoteText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"+ New Note\"), ' ', \"button in the side bar to create note.\")));\n}\n\n_s(NoteList, \"wyk0QFScX89AGUi1P04JKX/pz54=\", false, function () {\n  return [useStyles];\n});\n\n_c = NoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note-list.tsx"],"names":["React","useState","createStyles","makeStyles","CgNotes","Divider","useStyles","theme","root","display","flexDirection","height","margin","color","fontSize","width","title","padding","list","cursor","border","borderRadius","content","empty","alignItems","justifyContent","textAlign","emptyIcon","newNoteText","NoteList","props","mousePressed","setMousePressed","classes","handleDragStart","noteId","note","newNote","dragging","updateNote","notebook","handleDragEnd","notebooks","notes","length","map","id","noteTitle","addNewNote"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { CgNotes } from 'react-icons/cg';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      margin: 'auto',\n      color: 'rgb(51,51,51)',\n      fontSize: '16px',\n      width: '100%',\n    },\n    title: {\n      padding: '10px',\n      fontSize: '22px',\n    },\n    list: {\n      height: '100px',\n      cursor: 'pointer',\n      '&:active': {\n        border: '2px groove rgb(0,119,179)',\n        borderRadius: '5px',\n      },\n    },\n    content: {\n      padding: '20px',\n      height: '100px',\n    },\n    empty: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: 'auto',\n      textAlign: 'center',\n      padding: '35px',\n    },\n    emptyIcon: {\n      fontSize: '75px',\n    },\n    newNoteText: {\n      cursor: 'pointer',\n      color: 'rgb(0,168,45)',\n    },\n  })\n);\nexport default function NoteList(props: any) {\n  const [mousePressed, setMousePressed] = useState(false);\n  const classes = useStyles();\n\n  const handleDragStart = (noteId: string, note: any) => {\n    const newNote = {\n      ...note,\n      dragging: true,\n    };\n    props.updateNote(props.notebook, noteId, newNote);\n  };\n\n  const handleDragEnd = (noteId: string, note: any) => {\n    const newNote = {\n      ...note,\n      dragging: false,\n    };\n    props.updateNote(props.notebook, noteId, newNote);\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>title</div>\n      <Divider />\n      {props.notebooks[props.notebook].notes.length > 0 ? (\n        <>\n          {props.notebooks[props.notebook].notes.map((note: any) => {\n            return (\n              <div key={note.id}>\n                <div\n                  onMouseDown={() => handleDragStart(note.id, note)}\n                  onDragStart={() => handleDragStart(note.id, note)}\n                  className={classes.list}\n                >\n                  <div className={classes.content}>{note.noteTitle}</div>\n                </div>\n                <Divider />\n              </div>\n            );\n          })}\n        </>\n      ) : (\n        <div className={classes.empty}>\n          <div className={classes.emptyIcon}>\n            <CgNotes />\n          </div>\n          <div>It all begins with notes</div>\n          <div>\n            Click the{' '}\n            <span\n              onClick={() => props.addNewNote()}\n              className={classes.newNoteText}\n            >\n              + New Note\n            </span>{' '}\n            button in the side bar to create note.\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}