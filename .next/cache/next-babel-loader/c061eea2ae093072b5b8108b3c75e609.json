{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note-list.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { CgNotes } from 'react-icons/cg';\nimport Divider from '@material-ui/core/Divider';\nimport { DragPreviewImage, useDrag } from 'react-dnd';\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n    margin: 'auto',\n    color: 'rgb(51,51,51)',\n    fontSize: '16px',\n    width: '100%'\n  },\n  title: {\n    padding: '10px',\n    fontSize: '22px'\n  },\n  box: {\n    position: 'sticky',\n    height: '100px',\n    cursor: 'pointer',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  list: {\n    '&:active': {\n      opacity: '0.3'\n    }\n  },\n  noteTitle: {\n    padding: '10px 20px 0px 20px',\n    color: 'rgb(61,61,61)'\n  },\n  noteContent: {\n    padding: '5px 20px',\n    fontSize: '14px',\n    color: 'rgb(115,115,115)'\n  },\n  empty: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 'auto',\n    textAlign: 'center',\n    padding: '35px'\n  },\n  emptyIcon: {\n    fontSize: '75px'\n  },\n  newNoteText: {\n    cursor: 'pointer',\n    color: 'rgb(0,168,45)'\n  }\n}));\nexport default function NoteList(props) {\n  const classes = useStyles();\n  const [{\n    opacity\n  }, drag, preview] = useDrag({\n    item: {\n      type: 'note'\n    },\n    collect: monitor => ({\n      opacity: monitor.isDragging() ? 0.4 : 1\n    })\n  });\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"title\"), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), props.notebooks[props.notebook].notes.length > 0 ? __jsx(React.Fragment, null, props.notebooks[props.notebook].notes.map(note => {\n    return __jsx(\"div\", {\n      key: note.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, __jsx(DragPreviewImage, {\n      connect: preview,\n      src: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: classes.box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      ref: drag,\n      style: {\n        opacity\n      },\n      className: classes.list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, __jsx(\"div\", {\n      className: classes.noteTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, note.noteTitle), __jsx(\"div\", {\n      className: classes.noteContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, note.note))));\n  })) : __jsx(\"div\", {\n    className: classes.empty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.emptyIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, __jsx(CgNotes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"It all begins with notes\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Click the\", ' ', __jsx(\"span\", {\n    onClick: () => props.addNewNote(),\n    className: classes.newNoteText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"+ New Note\"), ' ', \"button in the side bar to create note.\")));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note-list.tsx"],"names":["React","createStyles","makeStyles","CgNotes","Divider","DragPreviewImage","useDrag","useStyles","theme","root","display","flexDirection","height","margin","color","fontSize","width","title","padding","box","position","cursor","list","opacity","noteTitle","noteContent","empty","alignItems","justifyContent","textAlign","emptyIcon","newNoteText","NoteList","props","classes","drag","preview","item","type","collect","monitor","isDragging","notebooks","notebook","notes","length","map","note","id","addNewNote"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { CgNotes } from 'react-icons/cg';\nimport Divider from '@material-ui/core/Divider';\nimport { DragPreviewImage, useDrag } from 'react-dnd';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      margin: 'auto',\n      color: 'rgb(51,51,51)',\n      fontSize: '16px',\n      width: '100%',\n    },\n    title: {\n      padding: '10px',\n      fontSize: '22px',\n    },\n    box: {\n      position: 'sticky',\n      height: '100px',\n      cursor: 'pointer',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    list: {\n      '&:active': {\n        opacity: '0.3',\n      },\n    },\n    noteTitle: {\n      padding: '10px 20px 0px 20px',\n      color: 'rgb(61,61,61)',\n    },\n    noteContent: {\n      padding: '5px 20px',\n      fontSize: '14px',\n      color: 'rgb(115,115,115)',\n    },\n    empty: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: 'auto',\n      textAlign: 'center',\n      padding: '35px',\n    },\n    emptyIcon: {\n      fontSize: '75px',\n    },\n    newNoteText: {\n      cursor: 'pointer',\n      color: 'rgb(0,168,45)',\n    },\n  })\n);\n\nexport default function NoteList(props: any) {\n  const classes = useStyles();\n  const [{ opacity }, drag, preview] = useDrag({\n    item: { type: 'note' },\n    collect: (monitor) => ({\n      opacity: monitor.isDragging() ? 0.4 : 1,\n    }),\n  });\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.title}>title</div>\n      <Divider />\n      {props.notebooks[props.notebook].notes.length > 0 ? (\n        <>\n          {props.notebooks[props.notebook].notes.map((note: any) => {\n            return (\n              <div key={note.id}>\n                <DragPreviewImage connect={preview} src=\"\" />\n                <div className={classes.box}>\n                  <div ref={drag} style={{ opacity }} className={classes.list}>\n                    <div className={classes.noteTitle}>{note.noteTitle}</div>\n                    <div className={classes.noteContent}>{note.note}</div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </>\n      ) : (\n        <div className={classes.empty}>\n          <div className={classes.emptyIcon}>\n            <CgNotes />\n          </div>\n          <div>It all begins with notes</div>\n          <div>\n            Click the{' '}\n            <span\n              onClick={() => props.addNewNote()}\n              className={classes.newNoteText}\n            >\n              + New Note\n            </span>{' '}\n            button in the side bar to create note.\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}