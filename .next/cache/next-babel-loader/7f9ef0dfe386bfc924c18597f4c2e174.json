{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport NoteList from './note-list';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      display: 'flex',\n      flexDdirection: 'row',\n      height: '100vh'\n    },\n    box: {\n      display: 'flex',\n      flexDdirection: 'column',\n      backgroundColor: 'rgb(248, 248, 248)',\n      padding: '10px',\n      height: '100vh',\n      resize: 'horizontal',\n      minWidth: '200px',\n      width: '300px',\n      maxWidth: '400px',\n      overflow: 'hidden',\n      borderRight: '1px solid rgb(230, 230, 230)'\n    }\n  });\n});\nexport default function Note(props) {\n  _s();\n\n  var _useState = useState(true),\n      isServer = _useState[0],\n      setIsServer = _useState[1];\n\n  var classes = useStyles();\n  useEffect(function () {\n    // SSR doesn't fire ComponentDidMount, so we import CKEditor inside of it and store it as a component prop\n    var CKEditor = require('@ckeditor/ckeditor5-react');\n\n    var ClassicEditor = require('@ckeditor/ckeditor5-build-classic');\n\n    setIsServer(false); // We just do this to toggle a re-render\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, __jsx(DndProvider, {\n    backend: HTML5Backend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, __jsx(NoteList, {\n    notebooks: props.notebooks,\n    notebookOrder: props.notebookOrder,\n    notebook: props.notebook,\n    addNewNote: props.addNewNote,\n    updateNote: props.updateNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, CKEditor && __jsx(CKEditor, {\n    editor: ClassicEditor,\n    data: \"<p>Hello from CKEditor 5!</p>\",\n    onInit: function onInit(editor) {\n      // You can store the \"editor\" and use when it is needed.\n      console.log('Editor is ready to use!', editor);\n    },\n    onChange: function onChange(event, editor) {\n      var data = editor.getData();\n      console.log({\n        event: event,\n        editor: editor,\n        data: data\n      });\n    },\n    onBlur: function onBlur(event, editor) {\n      console.log('Blur.', editor);\n    },\n    onFocus: function onFocus(event, editor) {\n      console.log('Focus.', editor);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }))));\n}\n\n_s(Note, \"KfXHV3uJvWT/UikvTEOVVNlP8tk=\", false, function () {\n  return [useStyles];\n});\n\n_c = Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/note.tsx"],"names":["React","useEffect","useState","NoteList","createStyles","makeStyles","DndProvider","HTML5Backend","CKEditor","ClassicEditor","useStyles","theme","root","display","flexDdirection","height","box","backgroundColor","padding","resize","minWidth","width","maxWidth","overflow","borderRight","Note","props","isServer","setIsServer","classes","require","notebooks","notebookOrder","notebook","addNewNote","updateNote","editor","console","log","event","data","getData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport NoteList from './note-list';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDdirection: 'row',\n      height: '100vh',\n    },\n    box: {\n      display: 'flex',\n      flexDdirection: 'column',\n      backgroundColor: 'rgb(248, 248, 248)',\n      padding: '10px',\n      height: '100vh',\n      resize: 'horizontal',\n      minWidth: '200px',\n      width: '300px',\n      maxWidth: '400px',\n      overflow: 'hidden',\n      borderRight: '1px solid rgb(230, 230, 230)',\n    },\n  })\n);\n\nexport default function Note(props: any) {\n  const [isServer, setIsServer] = useState(true);\n  const classes = useStyles();\n\n  useEffect(() => {\n    // SSR doesn't fire ComponentDidMount, so we import CKEditor inside of it and store it as a component prop\n    const CKEditor = require('@ckeditor/ckeditor5-react');\n    const ClassicEditor = require('@ckeditor/ckeditor5-build-classic');\n    setIsServer(false); // We just do this to toggle a re-render\n  }, []);\n\n  return (\n    <>\n      <div className={classes.root}>\n        <div className={classes.box}>\n          <DndProvider backend={HTML5Backend}>\n            <NoteList\n              notebooks={props.notebooks}\n              notebookOrder={props.notebookOrder}\n              notebook={props.notebook}\n              addNewNote={props.addNewNote}\n              updateNote={props.updateNote}\n            />\n          </DndProvider>\n        </div>\n        <div>\n          {CKEditor && (\n            <CKEditor\n              editor={ClassicEditor}\n              data=\"<p>Hello from CKEditor 5!</p>\"\n              onInit={(editor: any) => {\n                // You can store the \"editor\" and use when it is needed.\n                console.log('Editor is ready to use!', editor);\n              }}\n              onChange={(event: any, editor: any) => {\n                const data = editor.getData();\n                console.log({ event, editor, data });\n              }}\n              onBlur={(event: any, editor: any) => {\n                console.log('Blur.', editor);\n              }}\n              onFocus={(event: any, editor: any) => {\n                console.log('Focus.', editor);\n              }}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}