{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/editor.tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { useQuill } from 'react-quilljs';\nimport 'quill/dist/quill.snow.css';\nconst useStyles = makeStyles(theme => createStyles({\n  loading: {\n    margin: '20px 20px 0px 20px'\n  },\n  progress: {\n    width: '100%',\n    margin: '20px 20px 0px 20px',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\nexport default function Editor(props) {\n  const classes = useStyles();\n  const editorRef = useRef();\n  const {\n    quill,\n    quillRef\n  } = useQuill();\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      width: '100%',\n      height: '91vh',\n      border: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    ref: quillRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/editor.tsx"],"names":["React","useRef","createStyles","makeStyles","useQuill","useStyles","theme","loading","margin","progress","width","marginTop","spacing","Editor","props","classes","editorRef","quill","quillRef","height","border"],"mappings":";;AAAA,OAAOA,KAAP,IAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAgD,0BAAhD;AAEA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAO,2BAAP;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,IAC3BJ,YAAY,CAAC;AACXK,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE;AADD,GADE;AAIXC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,MADC;AAERF,IAAAA,MAAM,EAAE,oBAFA;AAGR,iBAAa;AACXG,MAAAA,SAAS,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd;AADA;AAHL;AAJC,CAAD,CADc,CAA5B;AAeA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAA4B;AACzC,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAMW,SAAS,GAAGf,MAAM,EAAxB;AACA,QAAM;AAAEgB,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBd,QAAQ,EAApC;AAEA,SACE,4BACE;AAAK,IAAA,KAAK,EAAE;AAAEM,MAAAA,KAAK,EAAE,MAAT;AAAiBS,MAAAA,MAAM,EAAE,MAAzB;AAAiCC,MAAAA,MAAM,EAAE;AAAzC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEF,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAgDD","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { useQuill } from 'react-quilljs';\nimport 'quill/dist/quill.snow.css';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    loading: {\n      margin: '20px 20px 0px 20px',\n    },\n    progress: {\n      width: '100%',\n      margin: '20px 20px 0px 20px',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n  })\n);\n\nexport default function Editor(props: any) {\n  const classes = useStyles();\n  const editorRef = useRef() as any;\n  const { quill, quillRef } = useQuill();\n\n  return (\n    <>\n      <div style={{ width: '100%', height: '91vh', border: 'none' }}>\n        <div ref={quillRef} />\n      </div>\n      {/* {editorLoaded ? (\n        <CKEditor\n          editor={ClassicEditor}\n          height=\"100vh\"\n          data=\"<p>Hello from CKEditor 5!</p>\"\n          onInit={(editor: any) => {\n            // You can store the \"editor\" and use when it is needed.\n\n            editor.editing.view.change((writer: any) => {\n              writer.setStyle(\n                'height',\n                '90vh',\n                editor.editing.view.document.getRoot()\n              );\n              writer.setStyle(\n                'width',\n                '700px',\n                editor.editing.view.document.getRoot()\n              );\n            });\n            console.log('Editor is ready to use!', editor);\n          }}\n          onChange={(event: any, editor: any) => {\n            const data = editor.getData();\n            console.log({ event, editor, data });\n          }}\n          onBlur={(event: any, editor: any) => {\n            console.log('Blur.', editor);\n          }}\n          onFocus={(event: any, editor: any) => {\n            console.log('Focus.', editor);\n          }}\n        />\n      ) : (\n        <>\n          <div className={classes.loading}>{'loading editor...'}</div>\n          <div className={classes.progress}>\n            <LinearProgress />\n          </div>\n        </>\n      )} */}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}