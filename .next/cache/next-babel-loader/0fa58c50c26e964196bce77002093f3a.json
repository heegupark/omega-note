{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/editor.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n// import ReactQuill, { Quill } from 'react-quill';\nconst useStyles = makeStyles(theme => createStyles({\n  loading: {\n    margin: '20px 20px 0px 20px'\n  },\n  title: {\n    position: 'absolute',\n    margin: '75px 0px 0px 15px',\n    zIndex: 1,\n    outline: 'none',\n    width: '100%',\n    minWidth: '400px'\n  },\n  editor: {\n    width: '100%',\n    minWidth: '400px',\n    wordBreak: 'break-word',\n    '&:hover': {\n      backgroundColor: 'white'\n    }\n  }\n}));\nconst theme = 'snow';\nconst placeholder = `What's in your mind?`;\nconst modules = {\n  toolbar: [[{\n    header: '1'\n  }, {\n    header: '2'\n  }, {\n    font: []\n  }, {\n    color: []\n  }], [{\n    size: []\n  }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n    list: 'ordered'\n  }, {\n    list: 'bullet'\n  }, {\n    indent: '-1'\n  }, {\n    indent: '+1'\n  }], ['link', 'image', 'video'], ['clean']],\n  clipboard: {\n    matchVisual: false\n  }\n};\nconst formats = ['header', 'font', 'color', 'size', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image' // 'video',\n];\nexport default function Editor(props) {\n  const {\n    0: isOpen,\n    1: setOpen\n  } = useState(false);\n  const ReactQuill = false ? require('react-quill') : () => false;\n  const classes = useStyles();\n  const {\n    0: title,\n    1: setTitle\n  } = useState('');\n  const {\n    0: contents,\n    1: setContents\n  } = useState('');\n  useEffect(() => {\n    setOpen(true);\n  }, []);\n\n  const handleChange = html => {\n    setContents(html);\n    const newNote = {\n      // noteTitle: title,\n      note: html\n    };\n    props.updateNote(props.notebooks[props.notebook].id, props.currentNote, newNote);\n  };\n\n  const getNote = (notebookId, noteId) => {\n    const newContents = props.notebooks[notebookId].notes.filter(note => note.id === noteId);\n    setTitle(newContents[0].noteTitle);\n    setContents(newContents[0].note);\n  };\n\n  useEffect(() => {\n    getNote(props.notebook, props.currentNote);\n  }, [props.currentNote]);\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    contentEditable: true,\n    className: classes.title,\n    onClick: () => setOpen(false),\n    onBlur: () => setOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, title), __jsx(\"div\", {\n    onClick: () => setOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }), !!ReactQuill && isOpen && __jsx(ReactQuill, {\n    theme: theme,\n    onChange: handleChange,\n    value: contents,\n    modules: modules,\n    formats: formats,\n    bounds: '.app',\n    placeholder: placeholder,\n    className: classes.editor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/editor.tsx"],"names":["React","useEffect","useState","createStyles","makeStyles","useStyles","theme","loading","margin","title","position","zIndex","outline","width","minWidth","editor","wordBreak","backgroundColor","placeholder","modules","toolbar","header","font","color","size","list","indent","clipboard","matchVisual","formats","Editor","props","isOpen","setOpen","ReactQuill","require","classes","setTitle","contents","setContents","handleChange","html","newNote","note","updateNote","notebooks","notebook","id","currentNote","getNote","notebookId","noteId","newContents","notes","filter","noteTitle"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n// import ReactQuill, { Quill } from 'react-quill';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    loading: {\n      margin: '20px 20px 0px 20px',\n    },\n    title: {\n      position: 'absolute',\n      margin: '75px 0px 0px 15px',\n      zIndex: 1,\n      outline: 'none',\n      width: '100%',\n      minWidth: '400px',\n    },\n    editor: {\n      width: '100%',\n      minWidth: '400px',\n      wordBreak: 'break-word',\n      '&:hover': {\n        backgroundColor: 'white',\n      },\n    },\n  })\n);\n\nconst theme = 'snow';\nconst placeholder = `What's in your mind?`;\nconst modules = {\n  toolbar: [\n    [{ header: '1' }, { header: '2' }, { font: [] }, { color: [] }],\n    [{ size: [] }],\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n    [\n      { list: 'ordered' },\n      { list: 'bullet' },\n      { indent: '-1' },\n      { indent: '+1' },\n    ],\n    ['link', 'image', 'video'],\n    ['clean'],\n  ],\n  clipboard: {\n    matchVisual: false,\n  },\n};\nconst formats = [\n  'header',\n  'font',\n  'color',\n  'size',\n  'bold',\n  'italic',\n  'underline',\n  'strike',\n  'blockquote',\n  'list',\n  'bullet',\n  'indent',\n  'link',\n  'image',\n  // 'video',\n];\n\nexport default function Editor(props: any) {\n  const [isOpen, setOpen] = useState(false);\n  const ReactQuill =\n    typeof window === 'object' ? require('react-quill') : () => false;\n  const classes = useStyles();\n  const [title, setTitle] = useState('' as any);\n  const [contents, setContents] = useState('' as any);\n\n  useEffect(() => {\n    setOpen(true);\n  }, []);\n\n  const handleChange = (html: any) => {\n    setContents(html);\n    const newNote = {\n      // noteTitle: title,\n      note: html,\n    };\n    props.updateNote(\n      props.notebooks[props.notebook].id,\n      props.currentNote,\n      newNote\n    );\n  };\n\n  const getNote = (notebookId: string, noteId: string) => {\n    const newContents = props.notebooks[notebookId].notes.filter(\n      (note: any) => note.id === noteId\n    );\n    setTitle(newContents[0].noteTitle);\n    setContents(newContents[0].note);\n  };\n\n  useEffect(() => {\n    getNote(props.notebook, props.currentNote);\n  }, [props.currentNote]);\n\n  return (\n    <>\n      <h1\n        contentEditable\n        className={classes.title}\n        onClick={() => setOpen(false)}\n        onBlur={() => setOpen(true)}\n      >\n        {title}\n      </h1>\n      <div onClick={() => setOpen(true)}></div>\n      {!!ReactQuill && isOpen && (\n        <ReactQuill\n          theme={theme}\n          onChange={handleChange}\n          value={contents}\n          modules={modules}\n          formats={formats}\n          bounds={'.app'}\n          placeholder={placeholder}\n          className={classes.editor}\n        />\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}