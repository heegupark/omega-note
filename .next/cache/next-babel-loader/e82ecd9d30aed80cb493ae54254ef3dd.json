{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/notebooks.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    // alignItems: 'center',\n    // justifyItems: 'center',\n    // flexDdirection: 'row',\n    height: '100vh',\n    width: '90%',\n    margin: 'auto'\n  },\n  box: {\n    margin: '40px',\n    color: 'rgb(51,51,51)',\n    fontSize: '14px'\n  },\n  table: {\n    minWidth: 700\n  }\n}));\nexport default function Notebooks(props) {\n  const classes = useStyles();\n\n  const getTimeMsg = date => {\n    const createdTime = new Date(date).valueOf();\n    const currentTime = new Date().valueOf();\n    const second = 60;\n    const minute = 60;\n    const hour = 24;\n    const day = 30;\n    const month = 12;\n    let divider = 1;\n    let timeMsg = '';\n    let diff = (currentTime - createdTime) / 1000;\n\n    if (diff <= second) {\n      timeMsg = 'second';\n    } else if (diff <= second * minute) {\n      divider = second;\n      timeMsg = 'minute';\n    } else if (diff <= second * minute * hour) {\n      divider = second * minute;\n      timeMsg = 'hour';\n    } else if (diff <= 172800) {\n      return 'Yesterday';\n    } else {\n      return `${date.getMonth()} ${date.getDate()}, ${date.getFullYear()}`;\n    }\n\n    diff /= divider;\n    const displayTime = Math.abs(Math.round(diff));\n    const plural = displayTime > 1 ? 's' : '';\n    const timeMessage = `${displayTime} ${timeMsg}${plural} ago`;\n    return timeMessage;\n  };\n\n  function createData(title, noteCount, createdAt, updatedAt) {\n    return {\n      title,\n      noteCount,\n      createdAt,\n      updatedAt\n    };\n  }\n\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 70\n  }, {\n    field: 'title',\n    headerName: 'Notebook',\n    width: 250\n  }, {\n    field: 'createdAt',\n    headerName: 'Created Date',\n    width: 300\n  }, {\n    field: 'updatedAt',\n    headerName: 'Updated Date',\n    width: 300\n  }];\n  const rows = props.notebookOrder.map((notebook, index) => {\n    return {\n      id: index,\n      title: props.notebooks[notebook].title,\n      createdAt: getTimeMsg(props.notebooks[notebook].createdAt),\n      updatedAt: getTimeMsg(props.notebooks[notebook].updatedAt)\n    };\n  });\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, __jsx(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, __jsx(Table, {\n    className: classes.table,\n    \"aria-label\": \"customized table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, __jsx(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"Notebook\"), __jsx(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, \"Number of Notes\"), __jsx(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, \"Created Date\"), __jsx(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"Update Date\"))), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, rows.map(row => __jsx(TableRow, {\n    key: row.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, __jsx(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, row.title), __jsx(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, row.noteCount), __jsx(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, row.createdAt), __jsx(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, row.updatedAt)))))));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/notebooks.tsx"],"names":["React","createStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useStyles","theme","root","display","height","width","margin","box","color","fontSize","table","minWidth","Notebooks","props","classes","getTimeMsg","date","createdTime","Date","valueOf","currentTime","second","minute","hour","day","month","divider","timeMsg","diff","getMonth","getDate","getFullYear","displayTime","Math","abs","round","plural","timeMessage","createData","title","noteCount","createdAt","updatedAt","columns","field","headerName","rows","notebookOrder","map","notebook","index","id","notebooks","row"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAgD,0BAAhD;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,IAC3BV,YAAY,CAAC;AACXW,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJ;AACA;AACA;AACAC,IAAAA,MAAM,EAAE,OALJ;AAMJC,IAAAA,KAAK,EAAE,KANH;AAOJC,IAAAA,MAAM,EAAE;AAPJ,GADK;AAUXC,EAAAA,GAAG,EAAE;AACHD,IAAAA,MAAM,EAAE,MADL;AAEHE,IAAAA,KAAK,EAAE,eAFJ;AAGHC,IAAAA,QAAQ,EAAE;AAHP,GAVM;AAeXC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL;AAfI,CAAD,CADc,CAA5B;AA2BA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA2C;AACxD,QAAMC,OAAO,GAAGd,SAAS,EAAzB;;AAEA,QAAMe,UAAU,GAAIC,IAAD,IAAgB;AACjC,UAAMC,WAAW,GAAG,IAAIC,IAAJ,CAASF,IAAT,EAAeG,OAAf,EAApB;AACA,UAAMC,WAAW,GAAG,IAAIF,IAAJ,GAAWC,OAAX,EAApB;AACA,UAAME,MAAM,GAAG,EAAf;AACA,UAAMC,MAAM,GAAG,EAAf;AACA,UAAMC,IAAI,GAAG,EAAb;AACA,UAAMC,GAAG,GAAG,EAAZ;AACA,UAAMC,KAAK,GAAG,EAAd;AACA,QAAIC,OAAO,GAAG,CAAd;AACA,QAAIC,OAAO,GAAG,EAAd;AACA,QAAIC,IAAI,GAAG,CAACR,WAAW,GAAGH,WAAf,IAA8B,IAAzC;;AACA,QAAIW,IAAI,IAAIP,MAAZ,EAAoB;AAClBM,MAAAA,OAAO,GAAG,QAAV;AACD,KAFD,MAEO,IAAIC,IAAI,IAAIP,MAAM,GAAGC,MAArB,EAA6B;AAClCI,MAAAA,OAAO,GAAGL,MAAV;AACAM,MAAAA,OAAO,GAAG,QAAV;AACD,KAHM,MAGA,IAAIC,IAAI,IAAIP,MAAM,GAAGC,MAAT,GAAkBC,IAA9B,EAAoC;AACzCG,MAAAA,OAAO,GAAGL,MAAM,GAAGC,MAAnB;AACAK,MAAAA,OAAO,GAAG,MAAV;AACD,KAHM,MAGA,IAAIC,IAAI,IAAI,MAAZ,EAAoB;AACzB,aAAO,WAAP;AACD,KAFM,MAEA;AACL,aAAQ,GAAEZ,IAAI,CAACa,QAAL,EAAgB,IAAGb,IAAI,CAACc,OAAL,EAAe,KAAId,IAAI,CAACe,WAAL,EAAmB,EAAnE;AACD;;AACDH,IAAAA,IAAI,IAAIF,OAAR;AACA,UAAMM,WAAW,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,KAAL,CAAWP,IAAX,CAAT,CAApB;AACA,UAAMQ,MAAM,GAAGJ,WAAW,GAAG,CAAd,GAAkB,GAAlB,GAAwB,EAAvC;AACA,UAAMK,WAAW,GAAI,GAAEL,WAAY,IAAGL,OAAQ,GAAES,MAAO,MAAvD;AACA,WAAOC,WAAP;AACD,GA7BD;;AA+BA,WAASC,UAAT,CACEC,KADF,EAEEC,SAFF,EAGEC,SAHF,EAIEC,SAJF,EAKE;AACA,WAAO;AAAEH,MAAAA,KAAF;AAASC,MAAAA,SAAT;AAAoBC,MAAAA,SAApB;AAA+BC,MAAAA;AAA/B,KAAP;AACD;;AAED,QAAMC,OAAiB,GAAG,CACxB;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,UAAU,EAAE,IAA3B;AAAiCxC,IAAAA,KAAK,EAAE;AAAxC,GADwB,EAExB;AAAEuC,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,UAAU,EAAE,UAA9B;AAA0CxC,IAAAA,KAAK,EAAE;AAAjD,GAFwB,EAGxB;AAAEuC,IAAAA,KAAK,EAAE,WAAT;AAAsBC,IAAAA,UAAU,EAAE,cAAlC;AAAkDxC,IAAAA,KAAK,EAAE;AAAzD,GAHwB,EAIxB;AAAEuC,IAAAA,KAAK,EAAE,WAAT;AAAsBC,IAAAA,UAAU,EAAE,cAAlC;AAAkDxC,IAAAA,KAAK,EAAE;AAAzD,GAJwB,CAA1B;AAOA,QAAMyC,IAAI,GAAGjC,KAAK,CAACkC,aAAN,CAAoBC,GAApB,CAAwB,CAACC,QAAD,EAAmBC,KAAnB,KAAqC;AACxE,WAAO;AACLC,MAAAA,EAAE,EAAED,KADC;AAELX,MAAAA,KAAK,EAAE1B,KAAK,CAACuC,SAAN,CAAgBH,QAAhB,EAA0BV,KAF5B;AAGLE,MAAAA,SAAS,EAAE1B,UAAU,CAACF,KAAK,CAACuC,SAAN,CAAgBH,QAAhB,EAA0BR,SAA3B,CAHhB;AAILC,MAAAA,SAAS,EAAE3B,UAAU,CAACF,KAAK,CAACuC,SAAN,CAAgBH,QAAhB,EAA0BP,SAA3B;AAJhB,KAAP;AAMD,GAPY,CAAb;AASA,SACE;AAAK,IAAA,SAAS,EAAE5B,OAAO,CAACZ,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAgB,IAAA,SAAS,EAAEH,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEe,OAAO,CAACJ,KAA1B;AAAiC,kBAAW,kBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,EAGE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAIE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,CADF,CADF,EASE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGoC,IAAI,CAACE,GAAL,CAAUK,GAAD,IACR,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,GAAG,CAACF,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,SAAS,EAAC,IAArB;AAA0B,IAAA,KAAK,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,GAAG,CAACd,KADP,CADF,EAIE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0Bc,GAAG,CAACb,SAA9B,CAJF,EAKE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0Ba,GAAG,CAACZ,SAA9B,CALF,EAME,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BY,GAAG,CAACX,SAA9B,CANF,CADD,CADH,CATF,CADF,CADF,CADF;AA4BD","sourcesContent":["import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport INotebook from './interfaces/inotebook';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      // alignItems: 'center',\n      // justifyItems: 'center',\n      // flexDdirection: 'row',\n      height: '100vh',\n      width: '90%',\n      margin: 'auto',\n    },\n    box: {\n      margin: '40px',\n      color: 'rgb(51,51,51)',\n      fontSize: '14px',\n    },\n    table: {\n      minWidth: 700,\n    },\n  })\n);\n\ninterface INotebooksProps {\n  notebooks: INotebook;\n  notebookOrder: Array<string>;\n}\n\nexport default function Notebooks(props: INotebooksProps) {\n  const classes = useStyles();\n\n  const getTimeMsg = (date: Date) => {\n    const createdTime = new Date(date).valueOf();\n    const currentTime = new Date().valueOf();\n    const second = 60;\n    const minute = 60;\n    const hour = 24;\n    const day = 30;\n    const month = 12;\n    let divider = 1;\n    let timeMsg = '';\n    let diff = (currentTime - createdTime) / 1000;\n    if (diff <= second) {\n      timeMsg = 'second';\n    } else if (diff <= second * minute) {\n      divider = second;\n      timeMsg = 'minute';\n    } else if (diff <= second * minute * hour) {\n      divider = second * minute;\n      timeMsg = 'hour';\n    } else if (diff <= 172800) {\n      return 'Yesterday';\n    } else {\n      return `${date.getMonth()} ${date.getDate()}, ${date.getFullYear()}`;\n    }\n    diff /= divider;\n    const displayTime = Math.abs(Math.round(diff));\n    const plural = displayTime > 1 ? 's' : '';\n    const timeMessage = `${displayTime} ${timeMsg}${plural} ago`;\n    return timeMessage;\n  };\n\n  function createData(\n    title: string,\n    noteCount: number,\n    createdAt: Date,\n    updatedAt: Date\n  ) {\n    return { title, noteCount, createdAt, updatedAt };\n  }\n\n  const columns: ColDef[] = [\n    { field: 'id', headerName: 'ID', width: 70 },\n    { field: 'title', headerName: 'Notebook', width: 250 },\n    { field: 'createdAt', headerName: 'Created Date', width: 300 },\n    { field: 'updatedAt', headerName: 'Updated Date', width: 300 },\n  ];\n\n  const rows = props.notebookOrder.map((notebook: string, index: number) => {\n    return {\n      id: index,\n      title: props.notebooks[notebook].title,\n      createdAt: getTimeMsg(props.notebooks[notebook].createdAt),\n      updatedAt: getTimeMsg(props.notebooks[notebook].updatedAt),\n    };\n  });\n\n  return (\n    <div className={classes.root}>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Notebook</TableCell>\n              <TableCell align=\"right\">Number of Notes</TableCell>\n              <TableCell align=\"right\">Created Date</TableCell>\n              <TableCell align=\"right\">Update Date</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.title}\n                </TableCell>\n                <TableCell align=\"right\">{row.noteCount}</TableCell>\n                <TableCell align=\"right\">{row.createdAt}</TableCell>\n                <TableCell align=\"right\">{row.updatedAt}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}