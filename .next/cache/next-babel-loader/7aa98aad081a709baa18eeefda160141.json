{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/editor.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { useQuill } from 'react-quilljs';\nimport 'quill/dist/quill.snow.css';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    loading: {\n      margin: '20px 20px 0px 20px'\n    },\n    progress: {\n      width: '100%',\n      margin: '20px 20px 0px 20px',\n      '& > * + *': {\n        marginTop: theme.spacing(2)\n      }\n    }\n  });\n});\nvar theme = 'snow';\nvar placeholder = 'Compose an epic...';\nvar modules = {\n  toolbar: [[{\n    header: '1'\n  }, {\n    header: '2'\n  }, {\n    font: []\n  }, {\n    color: []\n  }], [{\n    size: []\n  }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n    list: 'ordered'\n  }, {\n    list: 'bullet'\n  }, {\n    indent: '-1'\n  }, {\n    indent: '+1'\n  }], ['link', 'image', 'video'], ['clean']],\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false\n  }\n};\nvar formats = ['header', 'font', 'color', 'size', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image', 'video'];\nexport default function Editor(props) {\n  _s();\n\n  var classes = useStyles();\n\n  var _useQuill = useQuill(),\n      quill = _useQuill.quill;\n\n  var _useQuill2 = useQuill({\n    theme: theme,\n    modules: modules,\n    formats: formats,\n    placeholder: placeholder\n  }),\n      quillRef = _useQuill2.quillRef;\n\n  var _useQuill3 = useQuill({\n    modules: {\n      counter: true\n    }\n  }),\n      Quill = _useQuill3.Quill;\n\n  var _useState = useState(''),\n      contents = _useState[0],\n      setContents = _useState[1]; // useEffect(() => {\n  //   if (quill) {\n  //     quill.on('editor-change', function () {\n  //       const contents = quill.getContents();\n  //       console.log(contents);\n  //       // There are a couple issues with counting words\n  //       // this way but we'll fix these later\n  //     });\n  //   }\n  //   quill?.on('text-change', function () {\n  //     const contents = quill.getContents();\n  //     console.log(contents);\n  //     // There are a couple issues with counting words\n  //     // this way but we'll fix these later\n  //   });\n  // }, [quill]);\n\n\n  if (Quill && !quill) {\n    // For execute this line only once.\n    quill === null || quill === void 0 ? void 0 : quill.on('text-change', function () {\n      var text = quill.getText(); // There are a couple issues with counting words\n      // this way but we'll fix these later\n\n      console.log(text.split(/\\s+/).length);\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      width: '100%',\n      height: '91vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    ref: quillRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(Editor, \"EoMDoIasBGqVZGnol9giUEqGmZ8=\", false, function () {\n  return [useStyles, useQuill, useQuill, useQuill];\n});\n\n_c = Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-note/components/editor.tsx"],"names":["React","useState","createStyles","makeStyles","useQuill","useStyles","theme","loading","margin","progress","width","marginTop","spacing","placeholder","modules","toolbar","header","font","color","size","list","indent","clipboard","matchVisual","formats","Editor","props","classes","quill","quillRef","counter","Quill","contents","setContents","on","text","getText","console","log","split","length","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { useQuill } from 'react-quilljs';\nimport 'quill/dist/quill.snow.css';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    loading: {\n      margin: '20px 20px 0px 20px',\n    },\n    progress: {\n      width: '100%',\n      margin: '20px 20px 0px 20px',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n  })\n);\n\nconst theme = 'snow';\nconst placeholder = 'Compose an epic...';\nconst modules = {\n  toolbar: [\n    [{ header: '1' }, { header: '2' }, { font: [] }, { color: [] }],\n    [{ size: [] }],\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n    [\n      { list: 'ordered' },\n      { list: 'bullet' },\n      { indent: '-1' },\n      { indent: '+1' },\n    ],\n    ['link', 'image', 'video'],\n    ['clean'],\n  ],\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false,\n  },\n};\nconst formats = [\n  'header',\n  'font',\n  'color',\n  'size',\n  'bold',\n  'italic',\n  'underline',\n  'strike',\n  'blockquote',\n  'list',\n  'bullet',\n  'indent',\n  'link',\n  'image',\n  'video',\n];\n\nexport default function Editor(props: any) {\n  const classes = useStyles();\n  const { quill } = useQuill();\n  const { quillRef } = useQuill({ theme, modules, formats, placeholder });\n  const { Quill } = useQuill({ modules: { counter: true } });\n  const [contents, setContents] = useState('' as any);\n\n  // useEffect(() => {\n  //   if (quill) {\n  //     quill.on('editor-change', function () {\n  //       const contents = quill.getContents();\n  //       console.log(contents);\n  //       // There are a couple issues with counting words\n  //       // this way but we'll fix these later\n  //     });\n  //   }\n  //   quill?.on('text-change', function () {\n  //     const contents = quill.getContents();\n  //     console.log(contents);\n  //     // There are a couple issues with counting words\n  //     // this way but we'll fix these later\n  //   });\n  // }, [quill]);\n\n  if (Quill && !quill) {\n    // For execute this line only once.\n    quill?.on('text-change', function () {\n      const text = quill.getText();\n      // There are a couple issues with counting words\n      // this way but we'll fix these later\n      console.log(text.split(/\\s+/).length);\n    });\n  }\n\n  return (\n    <>\n      <div\n        style={{\n          width: '100%',\n          height: '91vh',\n        }}\n      >\n        <div ref={quillRef} />\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}